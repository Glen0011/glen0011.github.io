<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Glen'pub]]></title>
  <link href="glen.pub/atom.xml" rel="self"/>
  <link href="glen.pub/"/>
  <updated>2017-02-17T11:29:24+08:00</updated>
  <id>glen.pub/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Export Presets, Touch Bar, and More in Sketch 42]]></title>
    <link href="glen.pub/14855087860472.html"/>
    <updated>2017-01-27T17:19:46+08:00</updated>
    <id>glen.pub/14855087860472.html</id>
    <content type="html"><![CDATA[
<p>Happy 2017! We hope it’ll be a great year for you. 🎉 At Sketch we’re looking forward to unveil a long list of great updates throughout the year. We’re starting off with a nice set of improvements in Sketch 42.</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">Introducing Export Presets</h2>

<p>In a world dominated by screens, there are so many resolutions and pixel densities to account for. Take the iPhone for example — just over 10 years ago, the device that put a computer into millions of pockets had 163 pixels per inch. Today devices exist with two, three or four times that density. Designers have to deal with creating assets that look stunning no matter the device they’re being used on. This update to Sketch will make it easier to account for this situation.</p>

<p>在由屏幕主导的世界中，有如此多的分辨率和像素密度来解释。 以iPhone为例 - 就在10多年前，将计算机置于数百万个口袋中的设备每英寸有163个像素。 今天的设备存在两倍，三倍或四倍的密度。 设计师必须处理创建资产，看起来惊人的无论他们正在使用的设备。 这个对Sketch的更新将使得更容易解释这种情况。</p>

<p><br/></p>

<p>Sketch has long had the ability to apply multiple export scales to slices and exportable layers. This convenient feature allows you to take any part of your design, and export it to multiple sizes and filetypes, all from a single object. However, this was a little repetitive. You had to re-create the same list of sizes and filetypes for each layer you wanted to export. Sketch 42 makes this much easier by allowing you to create a preset list containing your export settings, which can be applied instantly to any layer you want.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*cygomB21Nr7aAipA3qOHFg@2x.jpeg" alt=""/></p>

<p>To account for cases in your design where you may want to export something a little differently, simply swap the layer’s export preset to something else pre-defined — or add and remove scales as you would previously.</p>

<p>要考虑设计中可能需要稍有不同导出的情况，只需将图层的导出预设切换为预定义的其他预览，或者像以前一样添加和删除缩放。</p>

<p><br/></p>

<p>In designing the export preset feature, we addressed an issue requested by those designing for Android devices. The ability to apply prefixes, instead of suffixes to your export scales. 🌈</p>

<p>To change between applying a suffix and a prefix, just click the drop down arrow in the text field, and choose your preferred option. Anything typed before the ellipsis (…) will be applied before your layer’s name, whilst typing after it will appear at the end, before the extension.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*Hh95ZQ6N_kWsLivc_HoKLg@2x.jpeg" alt=""/></p>

<p><strong>Touch Bar Support</strong></p>

<p>If you were watching Apple’s October Event in which they announced the latest addition to their line of MacBooks, you may have noticed Sketch mentioned as one of the apps to support the new Touch Bar. For those of you who have a new MacBook Pro, you can now use it with the latest version of Sketch!</p>

<p>Depending on what you’re doing in the app, the Touch Bar will display controls and shortcuts that are relevant to that particular context. For example, when you don’t have any layers selected, Sketch will display the Insert context so you can quickly make your next move. Simply tap on the tool of the layer you want to insert and begin drawing.</p>

<p>With a shape layer selected, the Touch Bar gives you an overview of your selected layer’s style, as well as allowing you to quickly access its properties to edit the layer, such as adjusting its fill right from the keyboard.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*Cs-6k7a9cLzuh_HV6YgbAQ@2x.jpeg" alt=""/></p>

<p>We think that this is just the start for the Touch Bar in Sketch. If you are lucky enough to own a new MacBook Pro, please let us know how you’re using it, and what you’d like to see us add by <a href="https://sketchapp.com/support/contact/">getting in touch</a>!</p>

<h2 id="toc_1">Other Improvements</h2>

<p>As always, we’ve continued to make further improvements and additions in response to your ever-amazing feedback. Some highlights include:</p>

<p>与往常一样，我们会继续进行进一步的改进和添加，以回应您惊人的反馈。 一些亮点包括：</p>

<ul>
<li>The zoom limit has been increased, allowing you to zoom in 25600% to allow more precise pixel work</li>
<li>缩放限制已增加，允许您放大25600％以允许更精确的像素工作</li>
</ul>

<p><br/></p>

<ul>
<li>SVG importing and exporting have been improved</li>
<li>SVG导入和导出已得到改进</li>
</ul>

<p><br/></p>

<ul>
<li>When editing vector shapes, clicking the first point will now close the open path</li>
<li>编辑矢量形状时，单击第一个点将关闭打开的路径</li>
</ul>

<p><br/></p>

<ul>
<li>Math operators now work in the radius field for rectangles. The semicolon (;) is now the character used to apply differing radii (40;0;40;0)</li>
<li>Editing complex Symbol instances in large documents is now smoother</li>
<li>Sub-paths can now be hidden so they are excluded from boolean operations</li>
<li><a href="https://sketchapp.com/updates/#version-42">Many more bug fixes and stability improvements</a></li>
</ul>

<p>We hope you’ll <a href="https://sketchapp.com/download/sketch.zip">download this free update</a>, and check out all that’s new for yourself! Please don’t hesitate to get in touch with us via our <a href="https://sketchapp.com/support/contact/">support page</a>, or join the conversation on <a href="https://twitter.com/sketchapp">Twitter</a>, or our <a href="https://www.facebook.com/groups/sketchformac/">Facebook group</a>. We’re excited to share what 2017 will bring, along with news about our next update!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design like a Developer]]></title>
    <link href="glen.pub/14850425954917.html"/>
    <updated>2017-01-22T07:49:55+08:00</updated>
    <id>glen.pub/14850425954917.html</id>
    <content type="html"><![CDATA[
<p>Longer title: Design in Sketch as if you were building UI in a development environment</p>

<span id="more"></span><!-- more -->

<p>UI design has come a long way, and so have image manipulation programs (if you can even call them that nowadays). We remember creating our first UIs in GIMP, that program made by the Ubuntu guys, and now that we’ve got MacBooks we’re using Sketch for almost everything UI related.</p>

<p>UI设计已经走了很长的路，因此有图像处理程序（如果你现在甚至可以打电话给他们）。 我们记得在GIMP中创建了我们的第一个UI，这个程序是由ubuntu的人制作的，现在我们已经有MacBooks，我们使用Sketch几乎所有的UI相关。</p>

<p><br/></p>

<p>Here’s the thing, though; Sketch has been created with designers in mind. It’s been built with the purpose of helping designers create user interfaces — and you can create pretty amzing things with it. But don’t forget that when you’re building a product, your duty ends when your design is shipped, not when you “finalize” that Sketch file.</p>

<p>Your design has to go through a developer and be built in a development environment. This is where the problem lies; if you look at Sketch and a UI builder in a development environment (or <em>IDEs</em>, e.g. Xcode and Android Studio) side by side, you will not see many similarities.</p>

<p><br/></p>

<p>The way a developer builds your design is fundamentally different from the way you, as a designer, create it in Sketch. It sounds kind of stupid when you put it into perspective, doesn’t it?</p>

<p>开发人员构建您的设计的方式根本不同于您作为设计师在Sketch中创建的方式。 这听起来有点愚蠢，当你把它放在透视，不是吗？</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*SILxrapOSVGmc4sLIaM3CA.png" alt=""/></p>

<blockquote>
<p>Xcode, Sketch, and Android Studio (and some lightning bolts)</p>
</blockquote>

<p><br/></p>

<p>That’s okay, though! This article is going to describe a design approach which comes a little bit closer to what a developer goes through when they build your design (it’s a struggle…).</p>

<p>没关系，虽然！ 本文将描述一种设计方法，它更接近开发人员在构建您的设计时所经历的（这是一场斗争...）。</p>

<p><br/></p>

<h3 id="toc_0"><strong>Think in “Views”</strong></h3>

<p>You know <em>Symbols</em> in Sketch, right? We were really excited to use this feature when we switched to Sketch because it comes so close to how developers build UIs. Most of the time when you see things such as list items or action bars, they have one single source <strong>view</strong> that gets reused again and again.</p>

<p>你知道<em>符号</em>在素描，对不对？ 当我们切换到Sketch时，我们非常兴奋地使用这个功能，因为它非常接近开发人员如何构建UI。 大多数时候，当你看到列表项或动作栏，它们有一个单一的源<strong>视图</strong>，一次又一次的重用。</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*nhQf6v6HBbnhR7lWbq7Ehw.png" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*z12CHMxb0YJxT7vppoCciQ.png" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*cJqbNsqX7jQ0vCynbSpYMA.png" alt=""/></p>

<p><br/></p>

<p>The most important guideline of designing like a developer is to think of your design in terms of <em>Views</em>. Think of a View as an independent group of elements which has defined borders and is sorted in hierarchical order.</p>

<p>像开发人员一样设计的最重要的指导方针是根据* Views *来思考你的设计。 将View视为一组独立的元素，这些元素定义了边界并按层次顺序排序。</p>

<p><br/></p>

<p>As an example, the Search Results screen of our Nimber app on Android is divided into two main views; the Top View which contains the Action Bar as well as a Card with the user-entered locations and filters, and a List View with the returned search results.</p>

<p>例如，我们在Android上的Nimber应用程序的搜索结果屏幕分为两个主视图： 包含操作栏的顶视图以及具有用户输入的位置和过滤器的卡以及具有返回的搜索结果的列表视图。</p>

<p><br/></p>

<p>In the Blueprint or Skeleton above, you can see how the view bounds are clearly defined in the design. <strong>These are layers that are invisible in the Sketch file (0% opacity)</strong>, but they’re extremely useful when handing over the design to your developers.</p>

<p>See below how the Action Bar is broken down into smaller Views.</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*gcQLtwSi9its2BBZ5zpGtg.png" alt=""/></p>

<blockquote>
<p>Top Level of View Hierarchy</p>
</blockquote>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*eAXV4sx5uwqlPbllrhWmFw.png" alt=""/></p>

<blockquote>
<p>ActionBar View</p>
</blockquote>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*g4gsq4tDW707agveiSOzNg.png" alt=""/></p>

<blockquote>
<p>Action Items with View Bounds at 100% opacity</p>
</blockquote>

<p><br/></p>

<p>Make sure to not just group your layers randomly. Define their sizes and spacing in a clear way (avoid odd numbers) and sort everything in hierarchical order.</p>

<p>确保不要随机分组图层。 以清晰的方式定义它们的大小和间距（避免奇数），并按层次顺序排序。</p>

<p><br/></p>

<p>The same applies for layer styles, for cases where you need to use consistent strokes, rounded corners, drop shadows, you name it.</p>

<p>这同样适用于图层样式，对于需要使用一致笔划，圆角，阴影的情况，您可以命名。</p>

<p><br/></p>

<p>This app called <a href="https://zeplin.io/">Zeplin</a> helps a lot here. Long story short: you import your design in there, and the app extracts all view sizes, text sizes, colors, etc. in a developer oriented way. It’s a great tool that bridges the gap between designers and developers, and I can’t wait to see what it holds for the future.</p>

<p><br/></p>

<p>When you hand over your design, the developer can look at Zeplin and extract the sizes, margins, paddings from one single item, and create the view in their IDE accordingly.</p>

<p>当你交出你的设计，开发人员可以看看Zeplin，从一个单一的项目中提取大小，边距，paddings，并相应地在其IDE中创建视图。</p>

<p><br/></p>

<h3 id="toc_1">Design in 1x</h3>

<p>Why is this even up here…</p>

<p>By designing in <strong>1x</strong>, first you help yourself by not having to calculate sizes in other screen densities, but most importantly, both you and the developer end up using the same numbers. This way you prevent any miscalculations when handing over your design, and keep a consistent set of values.</p>

<p>通过1x设计，首先你不必计算其他屏幕密度的大小，但最重要的是，你和开发人员最终使用相同的数字。 这样，您可以防止在处理设计时出现错误，并保持一组一致的值。</p>

<p><br/></p>

<p>This applies to view sizes, text sizes, line heights, most numbers really…</p>

<p>这适用于视图大小，文字大小，行高，大多数数字...</p>

<p><br/></p>

<h3 id="toc_2">Consistent Color Palette</h3>

<p>Create once, always reuse. Try to have as few colors as possible.</p>

<p>创建一次，总是重用。 尝试尽可能少的颜色。</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*MwWQuonkMOBlroqzqD9l2Q.png" alt=""/></p>

<p><br/></p>

<p>You’ll see developers mostly use names such as <em>Primary, Secondary, Accent, Enabled, Disabled</em> etc. You can do the same thing. <em>Primary</em> and <em>Secondary</em> can be your text colors, <em>Accent</em> can be your brand’s color, you get the point.</p>

<p>你会看到开发人员主要使用诸如* Primary，Secondary，Accent，Enabled，Disabled *等名称。你可以做同样的事情。 <em>主要</em>和<em>次要</em>可以是您的文字颜色，<em>重音</em>可以是您的品牌的颜色，你明白了吧。</p>

<p><br/></p>

<p>In Sketch, you can save these colors in the Color Picker, but as far as I know, there’s no way to share them outside of the Sketch file. What you can do instead is create an artboard with the colors from your palette, along with their names and hex codes. This way, developers can quickly extract them when they access your design through Zeplin, and insert them in the app’s code.</p>

<p>在Sketch中，您可以在颜色选择器中保存这些颜色，但据我所知，没有办法在Sketch文件之外共享它们。 你可以做的，而不是创建一个画板与调色板的颜色，以及他们的名字和十六进制代码。 这样，开发人员可以在他们通过Zeplin访问您的设计时快速提取它们，并将它们插入到应用程序的代码中。</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*UnGAceC6fZfRUcc63u4-2A.png" alt=""/></p>

<blockquote>
<p>These are the colors we use on the Nimber apps</p>
</blockquote>

<p><br/></p>

<h3 id="toc_3"><strong>Design for all cases</strong></h3>

<p><br/></p>

<p>Keep in mind that developers don’t build the ideal UI, but rather something that adapts into the ideal UI. They have to take care of cases where there’s no connectivity, or there’s a server error, or when there’s no content to display and much more.</p>

<p>请记住，开发人员不构建理想的UI，而是适应理想UI的东西。 他们必须处理没有连接的情况，或者有服务器错误，或没有要显示的内容等等。</p>

<p><br/></p>

<p>So make sure to design for every scenario. Specifically, make sure to design every screen in its Empty state, Loading state, Error state, and the Ideal state. 99% of the time, these will be enough. <a href="http://scotthurff.com/posts/why-your-user-interface-is-awkward-youre-ignoring-the-ui-stack">This article</a> by <a href="https://medium.com/u/3869cb8878f7">Scott Hurff</a> goes into more depth about states, recommended read.</p>

<p>所以，确保为每个场景设计。 具体来说，确保将每个屏幕设计为空状态，加载状态，错误状态和理想状态。 99％的时间，这些就够了。 本文由Scott Hurff深入了解，推荐阅读。</p>

<p><br/></p>

<h3 id="toc_4"><strong>Screen sizes</strong></h3>

<p>We live in an era of multiple screen sizes, so we have to design accordingly. This is a big deal when designing for Android because of its plethora of devices which come in multiple screen sizes.</p>

<p><br/></p>

<p>The “lazy” way to deal with this is to use a plugin such as <a href="https://github.com/bouchenoiremarc/Sketch-Constraints">Sketch Constraints</a> when creating your design in Sketch. When you use something like that, you can duplicate your artboards, resize them, and refresh the artboard. Magically, the UI will adapt accordingly to fit that screen size.</p>

<p>处理这种情况的“惰性”方法是在Sketch中创建设计时使用一个插件，如Sketch Constraints。 当你使用类似的东西，你可以复制你的画板，调整它们的大小，并刷新画板。 Duang，UI将相应地适应屏幕大小。</p>

<p><br/></p>

<p>The “correct” way to do this is to design your UI for phone screens (under 7 inches), 7 inch tablets, and 10 inch tablets. It’s especially awesome when you use Master-Detail Flows, which is a fancy term for combining List and Detail panels into one layout, such as the one below.</p>

<p>“正确的”方法是为手机屏幕（7英寸以下），7英寸平板电脑和10英寸平板电脑设计您的UI。 当你使用主 - 细节流，这是一个很奇怪的术语，将列表和细节面板合并为一个布局，如下面的一个布局，它是特别棒。</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*x5oYpU9S0lUJ9vQbwcNNEw.png" alt=""/></p>

<blockquote>
<p>Oh, you wanna know what this is? <a href="https://medium.com/@BashaChris/overhauling-the-twitter-experience-on-android-80f5b09e7c67#.1c8wpz368">Well you’re in luck!</a></p>
</blockquote>

<p><br/></p>

<h3 id="toc_5"><strong>Things to keep in mind</strong></h3>

<ol>
<li><p>Not all of your users will use the app in English. Keep in mind that text might get longer (or shorter) in other languages, and you have to take this into account when designing your layouts.</p>

<p>并非所有用户都将以英语使用该应用。 请记住，文字可能会在其他语言中使用较长（或较短），而您在设计版面配置时必须考虑这个因素。</p></li>
<li><p>You can’t cherry pick — you don’t have control over every pixel. Some parts of the app will inevitably end up looking less than ideal because of unpredictable data.</p>

<p>你不能做出最优选择 - 你不能控制每个像素。 应用程序的某些部分将不可避免地最终看起来不太理想，因为不可预测的数据。</p></li>
<li><p>Try to use interactions, gestures, transitions, and animations built into the platform. Your developers will thank you.</p>

<p>尝试使用平台中内置的交互，手势，过渡和动画。 开发人员会感谢你。</p></li>
</ol>

<p><br/></p>

<h4 id="toc_6"><strong>Last but not least</strong></h4>

<p>Communicate with your developers! Let them educate you. While tools such as Zeplin and Flinto are a great way to share your design with developers, they don’t have the ability to explain the behavior of every part of the app. Share knowledge and strive to achieve the result that is best for the product!</p>

<p>That’s it for this article! Hopefully, you learned something and give these methods a go.</p>

<p><strong>Happy shipping! ✌️</strong></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*0zBg56i9RC8DSpsK6pvEJA.png" alt=""/></p>

<p><em>This article was created by Nimber’s design team,</em> <a href="https://twitter.com/BashaChris"><em>Chris</em></a> <em>and</em> <a href="https://twitter.com/ckor"><em>Andrew</em></a><em>. Make sure to follow us on Twitter!</em></p>

<p><em>And don’t forget to check out</em> <a href="http://nimber.com/"><em>Nimber</em></a> <em>itself!</em> <a href="http://facebook.com/easybring"><em>Facebook</em></a> <em>-</em> <a href="http://twitter.com/nimber"><em>Twitter</em></a></p>

<p><em>Click 💚 to spread the word!</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UI设计的切图命名规则(持续补充)]]></title>
    <link href="glen.pub/14838911325927.html"/>
    <updated>2017-01-08T23:58:52+08:00</updated>
    <id>glen.pub/14838911325927.html</id>
    <content type="html"><![CDATA[
<span id="more"></span><!-- more -->

<h2 id="toc_0">命名格式</h2>

<p><strong>1、通用切片命名格式：</strong></p>

<p>组件_类别_功能_状态@2x.png</p>

<p>举例：<a href="mailto:tabbar_icon_home_default@2x.png">tabbar_icon_home_default@2x.png</a></p>

<p>（对应中文：标签栏_图标_主页_默认@2x.png）</p>

<p>模块特有切图命名规则：</p>

<p>模块_类别_功能_状态@2x.png</p>

<p>举例：<a href="mailto:mail_icon_search_pressed@2x.png">mail_icon_search_pressed@2x.png</a></p>

<p>（对应的中文为：邮件_图标_搜索_ 默认@2x.png）</p>

<p>当然这两个例子都是比较基本的情况，有很多时候可能一个单词并不能清楚的描述功能，比如有两个名字相同的搜索图标，大小不一，那这种情况你就可以这样命名：<a href="mailto:mail_icon_search_big_default@2x.png">mail_icon_search_big_default@2x.png</a>，我们的原则就是清晰的表达出切片的具体内容并且没有重复的名称，希望大家能够活学活用。（大家要注意，命名中不能含有空格！）</p>

<p><br/></p>

<p><strong>2、常用英文单词表</strong></p>

<p>如果所有命名都写为全称，名字就会特别长，所以我们可以将一些常用的英文单词进行缩写，减少工作成本与开发代码资源。至于怎么缩写，只要整个团队能够达成共识并且输出一份缩写清单，任何缩写规则都是可以的。</p>

<p>下面提供一些命名时常用的英文单词列表（有些是已经缩写过的，仅供参考）</p>

<p>bg（backgrond 背景）<br/>
nav（navbar 导航栏）<br/>
tab（tabbar 标签栏）<br/>
btn（button 按钮）<br/>
img（image 图片）<br/>
del（delete 删除）<br/>
msg（message 提示信息）<br/>
pop（pop up 弹出）<br/>
icon（图标）<br/>
selected（选中）<br/>
disabled（不可点击）<br/>
default（默认）<br/>
pressed（按下）<br/>
back（返回）<br/>
edit（编辑）<br/>
content（内容）<br/>
left/center/right（左/中/右）<br/>
logo（标识）<br/>
login（登录）<br/>
refresh（刷新）<br/>
banner（广告）<br/>
link（链接）<br/>
user（用户）<br/>
download（下载）<br/>
note（注释）</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ACCD本科产品系主任Karen Hofmann专访]]></title>
    <link href="glen.pub/14835157765602.html"/>
    <updated>2017-01-04T15:42:56+08:00</updated>
    <id>glen.pub/14835157765602.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>产品设计在近20年发生了怎样的变化？<br/>
商业产业链条中产品设计是什么样的角色？<br/>
如何塑造自己的POV个人思维观点？<br/>
作为产品设计师／学生怎样保持行业敏感度和培养能力？<br/>
ACCD产品设计为何与众不同？</p>
</blockquote>

<span id="more"></span><!-- more -->

<p><br/></p>

<h2 id="toc_0">1. Karen Hofmann自我介绍</h2>

<p><strong>“Working Hard, Play Hard” “Love the Pain” </strong></p>

<p>——“Karen，我们非常荣幸，欢迎您的到来，首先请您介绍一下自己。”</p>

<p>——“我本人也毕业于ArtCenter，但我进入ACCD的方式可能有些特别，因为在我获得了心理学学士学位之后，徘徊了一阵子，然后进入了ArtCenter，我非常享受在ACCD的每一天，比如ArtCenter所推崇的“Working hard, play hard”（学习时疯狂学习，玩耍时肆意玩儿） “Love the pain”（享受痛苦）。之后我继续学习汽车设计，然后在密歇根的汽车公司工作了7年。然后我发现了我对于设计的疯狂痴迷，我享受通过设计理论来理解‘流行’、理解‘趋势’、理解‘创新’，在经历事业上的快车道后，特别是在汽车设计的方面获得了最前瞻性的设计理论，3年后，我决定以密歇根汽车公司Sponsorship Team（企业赞助学校课程）成员的身份返回ArtCenter，这是我第二次钟情于ArtCenter。于是有一天，在跟Martin Smith（当时的产品系主任）和Norman Schureman（这个两位都是我的导师）交谈中，他们说你来教书吧，于是在2000年，我正式开始教书。在2003到2004年，我一边研究色彩材料（Color Material），一边在咨询公司工作，直到2004年，我成为了ACCD的全职教师。”</p>

<blockquote>
<p>（Martin和Norm都已去世，RIP）</p>
</blockquote>

<p><br/></p>

<h2 id="toc_1">2. 为什么热爱教书？</h2>

<p><strong>“It’s passion, it’s love, it’s intrinsic.”</strong></p>

<p>我想我热爱教书的原因可能和大多数在ArtCenter的老师一样，没有什么比通过分享你的知识、和创新的思维方式，看学生们将它推进到另一个更有创意的水平中，更有意思的事情了。所以其实是两个阶段，我们将我们所了解的、重要的业内理论知识分享给学生，但是更加重要的是，我们可以看到学生怎样进入“下一个阶段”，将这些知识的真谛领悟并为己所用。这个过程非常重要，也非常有激励性。我认为学生可以通过学习看到设计的多面性、多样性，而这些对于教职工来说也是非常奇妙的体验——去一起感受学生的创造力，相互作用，让学生和老师之间灵感迸发。我们将激情付诸于此，爱付诸于此，这些感受都是内在的感受，因此我们和学生的关系更像是家人的关系，教育是老师和学生间双向的给予和获得。</p>

<p><br/></p>

<h2 id="toc_2">3. 您的背景和工作经验是怎样指导您的教学的？</h2>

<p>我认为Green Psychology真的帮助了我良多哦（坏笑），哈哈，其实这就涉及到很多方面的技能的结合。在学生进入学校时，你们拥有不一样的人生经历、不一样的兴趣、不一样的价值观。所以对于老师来说，我们不仅仅局限于培养学生，我们还要保留他们进入到学校中时的独特性。所以对于我个人来说，心理学是指导我去看学生的一个方面，我的以人为本的思想，通过这些去分享我的知识，去创造新的方式去教育学生。另外，在教育方面，我非常享受在ArtCenter的时光，可以说，我痴迷于在这里。从大的方面来说，我发现现在世界正在拥抱设计，世界不再只是去关注工程、商业，设计也在世界拥有了一席之地，设计能够在公司的决策进程中拥有更加重要的地位，去参与公司的决策。以及在教育产业方面，设计也扮演着愈加重要的角色。所以，看似简单的问题，当中其实涉及到很多深层次的方面去解释为什么我们享受教书的乐趣。</p>

<p><br/></p>

<h2 id="toc_3">4. 12年前，当时的设计所扮演的角色可以说和现在的角色有一些变化，现在，设计正变得越来越重要，您能说一下这个变化在哪里吗？</h2>

<p><strong>“Massive Exchange”</strong></p>

<p>我一定要说是非常巨大的改变，当然这是根据我个人体验。根据我在最优秀的ArtCenter 20年的体验，我们是被训练成为技能满点的设计师，比如说程式化技能，视觉交互的技能，制作技能等等，我们更多的时候是被训练要和设计师在一起合作的，那就是我们所接触到的世界。所以当你进入职场，设计总监通常是要和工程师、和市场一起合作的，而设计团队通常被排除在商业程序之外，其实他们并没有真正融合到公司的团队中。而我在这10年中，亲历了巨大的变化，这种变化就是设计在延展，设计的概念在延伸。这对于设计师来说，可以说是一种挑战，因为现在设计师需要掌握比10年前更多的技能。但相比于之前，我们现在考虑设计需要从创业者本身的角度去考虑问题，去更全面的理解产品是怎样被制造出来的以及以往是什么因素导致我们没有办法与工程师进行合作，去理解我们怎么样去跨越既有的规则……我们不再去考虑“一个产品”，而更多的是可以去看“一个想法”是怎么样形成、塑造、创作出来，到产品投入到市场中的。现在，设计可以是一个系统、是服务、是转变信息，有各种方式方法去进行整个设计的进程。在过去，设计可能更加直接，而在今天，设计变得更加复杂。但是我认为这是一种“美妙的”复杂，这种美妙的复杂驱使我们去以一种全新的、复杂的方式去考虑工作，去以一种更加开放的方式去考虑设计，并且学习如何更好地与我们的合作伙伴、商业伙伴、工程师、科学家进行合作。</p>

<p><br/></p>

<h2 id="toc_4">5. 在您的眼中，今日的产品设计是什么？</h2>

<p><strong>“Visualize and realize the future with thoughtfulness and intent”</strong></p>

<p>多年来，我们一直在与ACCD的教职工探讨如何定义我们眼中的产品设计，在ArtCenter，我们希望学生如何看待今时今日的产品设计，我们眼中的产品设计在当今时代的产业中拥有着巨大的影响力，所以我们的使命就是：“<strong>Visualizing and realizing the future with thoughtfulness and intent”（用视觉和洞见的眼光去看见并实现未来）</strong></p>

<p><br/></p>

<h2 id="toc_5">6. 您怎样看待ACCD的产品设计专业？众所周知，ACCD的产品设计依旧在美国产品设计专业排名中稳居第一位。那么您认为是什么使得ACCD的产品设计专业与众不同？</h2>

<p>实际上我觉得这个问题和刚才那个问题的回答息息相关，所以让我把刚才给大家介绍的使命拆开来看：</p>

<p><br/></p>

<p><strong>Visualize and realize</strong>：</p>

<p>首先是“Visualize”我认为ACCD之所以出名，特别是产品设计专业、交通设计专业、娱乐设计专业，我们之所以出名，就在于我们有非常非常好的“视觉化表达”能力，我们能通过杰出的视觉表现向人们传达那些“还未出现”的产品应该是怎么样的。通过传统的手绘、手工制作，我们能够想到更多未来可能的方式，并且能够以高超的视觉化水平让大家看到未来。我们以强大的“视觉表现力”所出名，这是ACCD的基石。而且我们的“视觉化”技能是行业指向型的（Industry driven），所以像我们之前讲到的那样，我们会知道未来将是什么样子的。所以，第一点是“视觉表现力”，第二点是我们的“洞见力”。首先你要有视觉，另外就是你要有“洞见力”，通过你的预测、判断，然后让还没有出现的产品成为现实。所以，你刚问我什么是“产品设计”，那么产品设计对于我来说是两件事：1，你要能够想象出那些还没有存在的产品是什么。2.你要有技能去将这个产品带入现实，不管是以3D建模的方式，还是以故事线，还是通过调研和科学的系统研究，你一定要触碰到客户痛点。</p>

<p><br/></p>

<p><strong>Thoughtfulness and Intent：</strong></p>

<p>那么接下来就是Thoughtfulness and intent了。首先，Thoughtfulness是指你一定要有“人本思维”（Human-centered）的理念，你一定要设身处地的从设计师的思维想到你所设计的产品可能产生的后果。因此，可持续性发展的问题，我们已经关注15年了，我们拥有相应的课程来具体阐述这个问题，比如关于设计师的社会创造，以及我们关于可持续性的内部课程。我们希望设计师不仅仅是从画纸上的速写来表述产品、不仅仅只是创意的产生者，他们要切实的明白自己所创造的产品可能产生的影响，并为自己所设计的产品负责——安全方面、是否有助益、以及是否有社会意义。接下来就是Intent，intent是指我们并不是天马行空的设计，所有我们所设计出的产品都来自于需求，来自于具体的复杂的流程来进行我们的决策，所以这种结合是我认为产品设计的与众不同之处，也是产品设计对于产业发展的意义所在。这些产品设计的原则指引着ACCD的产品设计系，也是我们的产品设计在世界享誉盛名的原因。</p>

<p><br/></p>

<h2 id="toc_6">7. ACCD的产品设计专业共有8门主修课程以及其它课程，那么您是否可以说一下这8门主修课程和其它课程是怎么样塑造一个学生，并实现他在这所学校的目标的？</h2>

<p>是这样的，产品设计系的本科共有8个学期的全日制课程，共144个学分。我认为产品设计系比较特别的一点就在于，我们的产品设计系本科学位是“理学学士”学位（Bachelor of Science）而不是艺术学学士（Bachelor of Fine Arts），因此它具有很强的包容性。这意味着，我们的专业拥有更加全面的广度和深度： 从技术角度来说，对比如工程学、人本设计思维和流程，和调研的深刻理解。所以在我们的8个学期中我们主要关注大概4个领域：</p>

<p><br/></p>

<p><strong>在第一到第二学期，基础学习。</strong></p>

<p>所以我们前两学期的课程是以基础技能学习为导向，让学生了解什么是产品设计，不管是从绘画方面、视觉思维方面，制作方面都打好坚实的基础。</p>

<p><br/></p>

<p><strong>在第三到第四学期，深入学习。</strong></p>

<p>我们将会引入设计调研理论、同理心的概念、摄影研究，让学生从调研结果中能够真正的产出一些创意和想法，所以又提到了前面所说的“目的性”在调研过程中的应用 。我们还希望在第四学期能让学生有真正的创新，你怎么样创造出那些还没有出现过的产品。</p>

<p><br/></p>

<p><strong>在第五到第六学期，我们开始真正关注深层次客户体验。</strong></p>

<p>因此，我们在这两个学期更加关注交互设计、最终用户体验，以及ACCD女神Katherine Bennett的产业设计调研研究课程。我们需要真正的了解这些工具意味着什么，深层次了解什么是设计。当然，在第六学期，我们将继续深入探讨可持续发展，在这方面ACCD有很多的选修课程可以提供。</p>

<p><br/></p>

<p><strong>在第七到第八学期，我们更加关注设计的“广度”。</strong>我们拥有很多的能力训练课程可以选择，比如说家居设计、包装设计，在这个时候，你开始真正的找到自己的“声音”。在这两个学期，我们更加关注优势能力、超越思维的打造，像我们前面说的，你将会找到自己观点（Point of View）。POV，我们强调且非常看重POV能力的打造，你在8个学期中所掌握的技能、我们教职工的多样性、以及8个学期中课程设置的多样性塑造我们的学生拥有自己的POV。因此在第8学期，也就是最后一个学期的专业课上学生们就可以做一个项目，来展示过去7个学期的学习成果。</p>

<p><br/></p>

<h2 id="toc_7">8. Karen，你可以再为我们具体讲述一下POV（Point of View），对大多数中国学生来说，它们并不是很熟悉这个术语的意义。</h2>

<p>当然，让我们深入探讨一下这个问题。我认为POV对当今设计来说是一种非常重要的能力，是我们眼中的对产品设计行业的理解。这又提到了我们之前所探讨的问题“12年前的产品设计和当今产品设计间的比较？”。当我们的知名校友、以及企业再次回归到校园当中时（我们的校友和企业非常愿意回到ACCD），我们注意到企业对于作品集的期待，他们期待每个ACCD的学生都能拥有自己的作品集，而这是Art Center大多数学生都有准备的。这是我们所期望看到的，拥有自己的作品集是基本。而现在企业对于员工的期待更多是在于：这个学生是否能够为我的公司带来独特的思维方式？他是否能够准确理解客户需求？他能否让我的公司更有个性？那么这些就意味着你要更加全面、多元化，以及你的社交能力也在当今设计中非常重要。因此，那些能够让设计师活在自己的“小宇宙”中的日子已经过去，而现在的设计师要更加精细化的嵌入到公司层面中。说到这里，我们为什么强调一定要有POV的能力的意义就在于此，最近几年，企业进入到我们学校招收实习生和员工的时候，他们更加注重的是这个人是否有个性而不仅仅是他的作品集是否出色，这个学生是否“合适”于这家公司。因此，我们更加需要将关注点放在“POV”的塑造中，这也是当你们进入ACCD时我们所看重的。它是你每天记日记的习惯、是你每天画的速写、是你对身边事物的好奇心。特别对于你们这一代来讲，你们要将所有你身边的信息和知识收集起来，对那些看似无关的信息进行选择、识别、结合，并判断出什么是你所需要的。在未来工作中，你们会遇到很多具体的挑战比如厨房用具、园艺工具、或者说冬季滑雪的设备等等，不管这些挑战是什么，这些挑战都是很好的，因为它们是由一个需求所指引的。而这种“作品集导向型”的过程——我们要求学生所做的，所产生的原因在于，工具就在那里：你的博客啊、速写本啊、日记本所展现的，就是你拥有的能力、你所好奇的点，都在你的日常中多少表现了出来，这就是自我品牌建立的过程。首先是你自我发现（Self-Realizing）的过程，然后是自我品牌（Self-Branding）的打造。如果你能清晰的表达到这一点，使你给你留下深刻印象，那么你就可能会在行业中拥有自己的一席之地。</p>

<p>此外，能够用于POV能力的打造的很重要的一个说法叫做：“经验作品集”。在这里我要为大家介绍一下ArtCenter的“Design Storm”项目，这是一个为期三天的高强度，以设计思维为导向的项目。它不在我们的课程设置范围内，而这个项目ACCD已经做了4年了，是非常有意思的活动。它是由很多来自不同专业的实习生、不同专业的老师和那些来自校外公司的人员组成，并一起工作。这些公司有Adidas、MicroSoft、Google等等，这些公司的职员不仅仅是为学生做一个介绍，而是切实的和学生进行合作，所以这个项目能够带给学生的就是帮助他们窥探到真正的工作进程是什么样的。这样的经验可以帮助学生塑造真正的工作能力和领导力，并帮助他们适应怎么样在非常短的时间内与他人合作完成一件作品——这就是真实的世界。如果你来自亚洲，我们不会希望你待在固有的地方，我们希望你去感受不一样的文化，比如去欧洲，你需要拥有全球化的视野。此外，还有我们各种各样的社团活动，这些都塑造了一个学生的“软实力”。在我看来，软实力不是第二选择，它和那些硬实力（作品集、技能、以及创新思维能力）一样重要。这就是POV(Point of View).</p>

<blockquote>
<p>Junjun：我理解就是你不能只待在家里故步自封，只解决书本上的死问题而忽略了外界正在发生的、你需要知道的那些信息，比如那些激励你、引导你产生新的设计思维的信息。</p>
</blockquote>

<p>是的Junjun，你说的完全没错。你一定要与这个世界“保持联系”，也就意味着你一定要有全球视野，一定要拥有“跨文化”的能力，且一定要适应这样的世界并寻找到自己的位置。</p>

<p><br/></p>

<h2 id="toc_8">9. 那是什么让ArtCenter有别于其它的艺术学校呢？</h2>

<p>哦，我非常愿意回答这个问题（笑），实际上，在众多的艺术院校当中，我们之所以能走到今天，在于我们拥有健康的竞争思维，每个学校都有自己的优势，他们有我们没有的特色，我们也有他们没有的特色。</p>

<p><br/></p>

<p>1：我们有“Design Matters”（设计为本）的思想，我们重视社会创新。我们为ACCD的设计师提供了渠道去和全球的非盈利组织、和一些来自全世界的普通家庭合作。我们非常著名的案例是Safe Aqua。我们让一些学生与一些家庭在一起生活两个星期的时间，这些家庭没有流动水源，所以这对他们的生活，他们的日常作息有什么样的影响？学生通过观察去思考是否有一种方式能够解决他们移动水源的问题。接下来他们会回到学校，提出他们的想法，构思产品模型，并把产品生产出来带回到家庭中，再去调研他们对于产品的回馈。最后你会发现，你的产品真正让他们的生活获得了改变。我们学校之所以能有今天这样的成就，就在于我们15年来不间断的对于这些项目的投资，我本人也倍感骄傲。</p>

<p><br/></p>

<p>2：我们拥有最棒的工作室。 我们非常幸运的拥有几乎是世界上最先进的手工艺工具、同时，我们也拥有非常先进的技术比如说3D打印、CNC等等，所有专业的学生都可以随时用这些工具。</p>

<p><br/></p>

<p>3：我们在全世界范围内的盟校能够为学生提供更多的资源。比如说在新加坡INSEAD和柏林的学校。</p>

<p><br/></p>

<p>4：我们有出色的组织和校友。NIKE、Adidas、Under Armour这些在国际上享誉盛名的公司中有很多我们的出色的校友，我们与他们所在的公司有各种各样的研究项目，比如说Footwear Design Program，我们将学生送入Portland去进行高强度的为期两周的学习。</p>

<p><br/></p>

<p>5：Color material design program色彩材料设计项目，我会在接下来的谈话说具体阐述这一点。</p>

<p><br/></p>

<p>6：我们与LA的联系愈加紧密。我们现在拥有两个校区，一个是Hillside校区，20世纪中叶复古的建筑风格，那有非常漂亮的风景，你会看到鹿在你的脚边徘徊。另一个是南校区，我们有一条能够直达LA市区的黄金线路，现在的南校区共有三栋建筑，当然大多数的产品设计系的学生会在Hillside上课。我们也在规划在2-3年内能够为学生提供良好的住宿环境。</p>

<p><br/></p>

<p>7：LA的优势资源。LA有着悠久的汽车文化历史，而南校区有意思的地方在于它使得教职工和学生不需要买车，因为我们有黄金线路能够直达ArtCenter与LA中心市区。洛杉矶这个城市被赋予了更多创造性思维的意义，更多的工厂愿意在洛杉矶进行投资，这就意味着我们将拥有更好的资源和更好的工作岗位。不仅是硅谷，而是未来交通、未来的娱乐设计、汽车文化，LA都会成为未来趋势的一部分。</p>

<p>我们现在所坐的地方，其实就是我们Color Material and Trends Exploration Laboratory.（色彩材料与趋势探索实验室），CMTEL。我们之前谈到了我们的校友的影响力，我觉得在我教学体验中最酷的一件事情就是看到我们学校的毕业生获得了在某个领域的经验、有了能够指引业务的创新思维、掌握了更加先进的技术，他们会更想要回馈于ArtCenter。在1990s年代，在汽车设计行业非常活跃的时期，Color and Trim，汽车行业指派了他们去选择颜色、材料。然后随着汽车行业的不断扩张，有更多的公司比如诺基亚加入到了这个项目中。那时的诺基亚依旧是巨头，我们有很多优秀的设计师在诺基亚，其中一个叫Frank，他在很长一段时间内负责诺基亚的设计并开设了自己的工作室。而诺基亚之所以能成为当时的诺基亚，特别是在它的辉煌时期，如果你们还记得诺基亚对于手机设计的不同风格以及色彩的控制，那种把持在手中精美的手感，是因为Frank以及它的团队对于客户需求的深刻理解，对于当时趋势的深刻理解，对于颜色和材料设计的深刻理解。这使得诺基亚成为了当时的诺基亚。在2005年，我们与诺基亚合作了一个内部的项目，他们很慷慨的赞助我们到色彩材料实验室去研究样品、研究不同材料。和其它学校不同的是，他们可能也会拥有色彩与材料的图书馆，但我们更像是一个研究中心，我们加入了更多的社会元素在其中，让设计师能够亲身打造、体验不同的材料和色彩所产生的不同效应。</p>

<p><br/></p>

<h2 id="toc_9">10. 什么是CMTEL？因为有很多学生可能并不清楚这个概念，Karen您可以解释一下CMTEL的含义吗？</h2>

<p><strong>CMTEL，指的是Color Materials and Trends Exploration Laboratory.（色彩材料与趋势探索实验室）。这个名字很直译，有目的性。</strong></p>

<p><strong>Color Material（色彩与材料）：从人本角度出发，我们需要什么样的色彩和材料。</strong></p>

<p><strong>Trends（趋势）：它还是一种趋势，你怎么理解全球趋势。</strong></p>

<p><strong>Exploration Massive（探索为王）：探索为王，在一个设计工作室，我们模型设计就是为了探索所工作的。</strong></p>

<p><strong>Laboratory（实验室）：我们的实验室不是简单的图书馆，这意味着学生要花更多的时间，不仅仅是要亲身体验材料的手感、而且还要去思考未来的材料该是什么样的。包括你怎么去控制材料的不同构成、怎么去创造新的材料。</strong></p>

<p><strong>我们以上所谈到的，其实更多的属于“材料设计”的内容，而我们ACCD的产品设计师、插画设计师等等，都可以参与到材料设计中去。欧洲的学校更偏向于实验化和理论知识，而我们的设计是“行业导向型”（industry-driven）的（因为我们的资金来源是真实的公司，同时“行业导向型”也是我们的文化），我们不仅仅希望能够帮助学生找到工作，我们更希望他们能够推动整个设计行业的发展。</strong></p>

<p><br/></p>

<h2 id="toc_10">11. Karen我们将迎来最后一个问题，现如今越来越多的中国学生进入美国学校学习，您觉得他们有什么固定的模式吗？中国学生的优点和缺点是什么呢？您如何看待他们的未来？</h2>

<p>从我的角度来看，从你们这些非常棒的毕业生身上，我看到了你们有非常独特的POV。你们在进入学校之前的经历、你们的知识、你们的文化都特别不同于西方的学生。你们怎样看待世界的观点，这种多样性在ACCD看来是非常宝贵的财富。此外，我们还看到中国正在急速的发展中，是的，这会碰到很多的挑战，但是我们所看到的是中国有能力去创新，我相信10年之后的中国将会有更大的变化，你们的文化、你们的背景非常的独特，你们现在有点像100年前的美国，在一开始可能会有一些困惑，但会找到自己的路并为己所用。我不认为这是一种缺点，我认为这是一种挑战。这种挑战可能是ACCD的教学方式，如何灵活运用批判性思维、以及怎么样接受这种多样性。我们可能更多的受到欧洲文化的影响，这和中国学生是很不一样的。</p>

<p><br/></p>

<h2 id="toc_11">12. 您有什么想要对我们的听众说些什么？有什么好的建议给到他们吗？</h2>

<p>那我就直截了当的说了，如果你想要进入ArtCenter。我们寻找的将是这样的学生，首先你要有自己的作品集。你对什么感到好奇？你想探索什么？为什么你喜欢设计？如果可以的话，用你的手机拍摄一段视频，介绍你的项目，你的理论，你的想法，不要拘泥于传统的形式。我们更看重你个人、你的热情、你的好奇心、你的探索精神。</p>

<p><br/></p>

<p>来自异能FM</p>

<p><br/><br/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Framer中响应多个设备]]></title>
    <link href="glen.pub/14832821542116.html"/>
    <updated>2017-01-01T22:49:14+08:00</updated>
    <id>glen.pub/14832821542116.html</id>
    <content type="html"><![CDATA[
<span id="more"></span><!-- more -->

<p><img src="http://of832oeqz.bkt.clouddn.com/1*gX5FFCxw4KGF3Lu8i8ULVA.jpeg" alt=""/></p>

<p>使用 Framer 製作 Prototype 通常會有兩種做法：</p>

<ol>
<li>是 import from Sketch/Photoshop</li>
<li>另一種則是直接在 Framer 從頭開始建構</li>
</ol>

<p>而這篇文章的技巧是適用於 2. ，當你想在 Framer 從零開始製作時，於一開始的設定方法。</p>

<p><br/></p>

<h3 id="toc_0">一般作法</h3>

<p>通常在使用 Framer 製作時，最一開始會先選定一個裝置，它的長寬比會是你製作 UI 時的預設，比如像我們在製作 iOS Phone 的 UI 時，會以 750 x 1334 (px) 為 1x 的設定，那之後在 Framer 製作時，就會先選定 iPhone6s 作為預設裝置。（如下圖）</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*BFW77oJAZ1f9MgOudY0rxw.jpeg" alt=""/></p>

<p><br/></p>

<p>然後，你接下來所建構的每一個東西，都是基於此 750 x 1334 (px) 的設定，像是左圖的 “ui” Layer。（如下圖）</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*YBO0h6L-bnUALzInCA0Q3g.jpeg" alt=""/></p>

<p><br/></p>

<p>但是，這會有個問題，你會在哪些裝置上預覽跟操作？或者，你是否會分享 Framer Link 給其他人使用？而他們所使用的裝置，是否都剛好跟你預設解析度一樣？如果不是，那會發生什麼事？</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*TLRMo0Z1z89furLuWjUupw.jpeg" alt=""/></p>

<p><br/></p>

<p>如你所見，上圖三種裝置（iPhone6sPlus、Samsung Note5、HTC One A9）所顯示的內容都是沒有填滿螢幕的！</p>

<p>所以，接下來的方法，就是能夠讓你所製作的內容，可以在多數手機裝置上正確顯示（填滿畫面）。</p>

<p><br/></p>

<h3 id="toc_1">Responsive 的方法</h3>

<p>事實上方法不只一種，我自己有使用過兩種方式，此篇會先分享其中之一。</p>

<p>這兩種方法都跟「比例」很有相關。</p>

<p>首先一定要知道的基本數值就是你所定義的預設長寬，延續上面的舉例，就是 750 x 1334 。所以在 Framer 裡的定義大概可以像下面這樣：</p>

<p><br/></p>

<pre><code>default_w = 750
default_h = 1334

</code></pre>

<p><br/></p>

<p>第二個要知道的是，將會在哪些裝置上顯示，它們的解析度為何？舉例：</p>

<ul>
<li>iPhone6sPlus：1242 x 2208</li>
<li>Samsung Note5：1440 x 2560</li>
<li>HTC One A9：1920 x 1080</li>
<li>… and more</li>
</ul>

<p>嗯⋯沒錯，解析度超多種，但不用擔心，這件事我們讓 Framer 告訴我們：</p>

<p><br/></p>

<pre><code>screen_width = Framer.Device.screen.width 
screen_height = Framer.Device.screen.height 
</code></pre>

<p><br/></p>

<p>接下來，就是最重要的「比例」了！就是用「顯示的螢幕解析度」除以「你所定義的預設解析度」，用寬或用高都可以，以寬來舉例：</p>

<p><br/></p>

<p><code>ratio = screen_width / default_w</code></p>

<p><br/></p>

<p>下一步就是要建立一個大容器，並且讓他能夠在不同裝置上填滿螢幕顯示，姑且叫它為「all」：</p>

<p><br/></p>

<pre><code>all = new Layer
  width: default_w  # &lt;-- 等於你所定義的預設寬 750 
  height: default_h # &lt;-- 等於你所定義的預設寬 1334
  scale: ratio      # &lt;-- 比例用在這，乘以這個差異來填滿畫面
  originY: 0        # &lt;-- scaleY 縮放的預設 pivot 是正中心，改為最上緣
  y: 0              # &lt;-- 接著就把縮放的起始設為最上緣
all.centerX()       # &lt;-- 水平置中
</code></pre>

<p><br/></p>

<p>有了「all」這個大容器，接下來就把你所製作的內容（content）放在裡面吧！（ parent: all ）</p>

<p><br/></p>

<pre><code>content = new Layer
  parent: all
</code></pre>

<p><br/></p>

<p>到這邊，基本上就完成了，但是還有個小問題，就是在 Framer 裡讓 layer 縮放 scale 變大後，會讓 layer 變得糊糊的，所以必須要用上 force2d 這個 layer 屬性，設為 true 之後就不會變糊了。而為了接下來不必在每個 layer 的設定中都要特地加上去，所以可以先把它設定為預設，方法如下：</p>

<p><br/></p>

<p><code>Framer.Defaults.Layer.force2d = true</code></p>

<p><br/></p>

<p>記得這行要放到「all」layer 之前。</p>

<p>不過 force2d = true 還是有可能會遇到無法顯示的情況，到時再特地為該 layer 加上 force2d = false 的設定。</p>

<p>最終結果：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*mWFlMx5YVI6phydd9aNkvw.jpeg" alt=""/></p>

<p><br/></p>

<p>沒錯，不管它們本來的解析度為何，全部都變成用你所定義的預設解析度，乘以相對比例～縮放填滿了整個畫面！</p>

<p>Framer Studio 的 code：</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*NQrVhe5hcq4mmlG753eHqA.jpeg" alt=""/></p>

<p><br/></p>

<h3 id="toc_2">Scale Responsive 的限制</h3>

<p>如果你的預設解析度的長寬比為 1.778（1334/750），那麼能夠 100% 完全填滿顯示的裝置長寬比也同樣是 1.778</p>

<p><br/></p>

<p><code>1334 / 750 ≒ 1242 / 2208 ≒ 1440 / 2560 ≒ 1920 / 1080 ≒ 1.778</code></p>

<p><br/></p>

<p>所以如果選擇用 iPad 預覽，就會發現下緣被切掉（擋住）。（ 2048 / 1536 ≒ 1.333 ）</p>

<p>但是「某些項目」也是有方法可以避免，以「Bottom Tab」為例，它的位置邏輯是：</p>

<p>「 Tab最下緣」 等於 「螢幕顯示的最下緣」</p>

<p>tab.maxY = screen_height ( 就是 Framer.Device.screen.height )</p>

<p>這樣就可以正確顯示了。</p>

<p><br/></p>

<p>最後，放上</p>

<p>Framer Project: <a href="http://share.framerjs.com/6kxw7hu612oi/">http://share.framerjs.com/6kxw7hu612oi/</a></p>

<p>（ 之後有機會再分享另一種方式⋯⋯ ）</p>

<p><br/></p>

<p>来自Medium，作者waychang<br/>
<a href="https://medium.com/framer-js-taiwan/framer-tips-responsive-for-most-devices-be92b98b9b1b#.p6ox1rf6e">https://medium.com/framer-js-taiwan/framer-tips-responsive-for-most-devices-be92b98b9b1b#.p6ox1rf6e</a></p>

<p><br/><br/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Adobe Illustrator中创建漫画人物和制作流程教学]]></title>
    <link href="glen.pub/14826542405722.html"/>
    <updated>2016-12-25T16:24:00+08:00</updated>
    <id>glen.pub/14826542405722.html</id>
    <content type="html"><![CDATA[
<p>The inspiration behind a comic can come from many sources. It can be anything from a story idea to a certain setting, or perhaps a character. This tutorial won&#39;t go into how to write a comic script or well-rounded characters, but it will guide you through the process of visualizing your character ideas through research, experiment and refining. </p>

<span id="more"></span><!-- more -->

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/character-sheet-final.jpg" alt="Final product image"/></p>

<blockquote>
<p>What You&#39;ll Be Creating</p>
</blockquote>

<p><br/></p>

<p>By creating a character sheet, you will be properly prepared before you start drawing your comic, and you&#39;ll have a reference to help you keep the character&#39;s look consistent.</p>

<p><br/></p>

<h2 id="toc_0">1. Figuring Out Who Your Character Is</h2>

<p>Before we start to draw any characters, some early preparation work can help us a great deal. Figure out what your character will be about (Stoic vampire hunter? Ditzy high-school student?) and try to imagine the situations the character will be in. An action comic will probably feature the character&#39;s body in motion, while a romantic drama might focus more on the facial expressions.</p>

<p><br/></p>

<h4 id="toc_1">Step 1</h4>

<p>I&#39;ve decided that I want to make a simple slapstick comic about cooking, so my character will be some sort of chef. I&#39;m keeping my options open when searching online for reference images. For my purposes with the comic, I don&#39;t really need an accurate depiction of real garments worn by chefs, but picking up little details here and there gets the imagination going a lot better than if I were to come up with everything on my own.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-research.jpg" alt="Props research sketches"/></p>

<p>Alright, I&#39;ve found several elements I can incorporate into the look. Now for the person who is going to be wearing that look: who am I going to be drawing?</p>

<p><br/></p>

<h4 id="toc_2">Step 2</h4>

<p>When designing characters, it&#39;s a good idea to use the three basic shapes: circle, square and triangle. We tend to perceive characters that have a lot of roundness and circle elements in their design as friendly, while characters composed with square shapes emit a sense of stability. Characters with sharp and triangular shapes have an active look, and can also look dangerous. </p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-basic-shapes.jpg" alt="Character sketches from basic shapes"/></p>

<p>By mixing these shapes into one design, even more concepts can be expressed, so try out a couple of combinations for yourself. While these are not set rules, it can be a fun exercise to draw and also to analyze what shapes are mostly used to portray heroic or villainous characters for example.</p>

<p><br/></p>

<h4 id="toc_3">Step 3</h4>

<p>When making the initial sketches, I try out all that comes to mind, even things I think might not work. Try playing with both stereotypes and their complete opposites. When you find something you like—whether that is an entire character sketch or just a minor detail—carry it over to the next round of sketches, and keep going until you&#39;ve gotten something you want to base your character on.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-character-concepts.jpg" alt="Character concept sketches"/></p>

<p>I prefer to sketch digitally in Adobe Photoshop, but you can use whichever medium feels best for you, be it another software program or sketching traditionally with pen and paper. To follow along later on, it might be good to have access to a scanner if you sketch traditionally, since we&#39;re going to duplicate, move around and mirror some of the sketches.</p>

<p><br/></p>

<h2 id="toc_4">2. Create a Look</h2>

<p>Now that we&#39;ve used some of our earlier research and sketching methods, we&#39;ve got a whole bunch of character concepts to choose from. When seeing these different ideas together like this, it can be a lot easier to discover what you want and don&#39;t want the character to be. Go with your gut feeling, or have others give you feedback if you feel unsure, and choose the character concept which we will now develop into a proper design.</p>

<p><br/></p>

<h4 id="toc_5">Step 1</h4>

<p>Since this character is not supposed to be the object of a single illustration, but rather an actor of sorts in the comic, it&#39;s important that it communicates emotions and actions well through facial expressions and body movement. </p>

<p>The key here is exaggeration. As a rule, it&#39;s often better to go over the top than to hold back, and then perhaps pull back a little if it gets too crazy. </p>

<p>Of course a lot depends on the style too, but even for more realistic comics, I&#39;d suggest pushing the expression a bit more than you think you need to. The intensity of a sketch often gets softened after inking, coloring, adding backgrounds, effects and so on.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-buildup.jpg" alt="Character buildup sketches"/></p>

<p>After we&#39;ve come up with a decent-looking base design, we need to try it out from different angles as well. Try drawing the character from the back and side, and consider if you should make any changes to it. </p>

<p><br/></p>

<h4 id="toc_6">Step 2</h4>

<p>After drawing the character from the front, looking forward, we&#39;re going to save ourselves some time by making a copy of the sketch as a base for drawing the back. </p>

<p>If you&#39;re using Photoshop you can copy your sketch by holding the <strong>Alt</strong> key while dragging the image to the side, then mirroring it by pressing <strong>Command-T</strong> for the <strong>Transform Tool</strong>, and <strong>right-clicking</strong> and choosing <strong>Flip Horizontal</strong> from the drop-down menu. You now have a base to draw the back view drawing. The same method can be applied when creating the profile.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-turnaround.jpg" alt="Character turnaround sketches"/></p>

<p><br/></p>

<h2 id="toc_7">3. Ink in Adobe Illustrator </h2>

<h4 id="toc_8">Step 1</h4>

<p>We now have the main views of the character, although the three-quarter view from the front and back could be added as well, if you want to make it more advanced. I feel pleased with this design, so I&#39;m going to do an inked version of it as well. </p>

<p>I start by importing my sketch file into Adobe Illustrator, by dragging the file icon onto the artboard of an open Illustrator document.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-convert-anchor-point.jpg" alt="Convert Anchor Point to corner"/></p>

<p><br/></p>

<h4 id="toc_9">Step 2</h4>

<p>I start by creating a simple brush for inking by making a circle—use the <strong>Ellipse Tool (L)</strong>—and dragging out one of the anchor points to the side, and then making it a sharp point by converting the handle to corner.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-art-brush.jpg" alt="New Art Brush"/></p>

<p>While having the shape selected, go to the <strong>Brushes</strong> menu, click the <strong>New Brush</strong> button and choose <strong>Art Brush</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-art-brush-options.jpg" alt="Art Brush Options panel"/></p>

<p><br/></p>

<h4 id="toc_10">Step 3</h4>

<p>Once you&#39;ve hit the <strong>OK</strong> button on the previous selection, the <strong>Options</strong> panel will pop up and you can enter a name for your brush. There are a lot of options for you to customize your brush to your liking, but for this tutorial the brush is fine just like this. The default stroke direction is starting from the thick end and tapering into a sharp line, which is just what I want.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-brush-size.jpg" alt="Brush size and Stroke panel"/></p>

<p><br/></p>

<h4 id="toc_11">Step 4</h4>

<p>Since I want to change the brush size every now and then, but don&#39;t want to slow down the flow when I&#39;m inking, I&#39;m creating a couple of different-sized strokes from the start. When I select one, the brush will have that new size as its default until I switch tool again. As I build up more strokes of various sizes in the drawing, I can quickly select a stroke size about the size I want and just keep drawing, without having to stop all the time to input the size in numbers, or choose a size from the drop-down menu.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-inking.jpg" alt="Vector inking"/></p>

<p><br/></p>

<h4 id="toc_12">Step 5</h4>

<p>I generally go about inking the same way I would traditionally, but I also take advantage of the fact that I&#39;m working in Illustrator. So where I can, I copy and reflect elements, like the eyes, and make use of tools like the Ellipse Tool for round elements, instead of drawing every line with the brush.</p>

<p>You&#39;ll notice that there are a lot of lines intersecting in a sloppy way right now. We&#39;ll get to correcting that soon, but the reason we don&#39;t just end the line in place is because of the brush. The <strong>Art Brush</strong> uses a single symbol which gets stretched out along the path you draw, so our tapering effect, for example, will be wherever the path ends. That&#39;s why we need to draw the strokes a bit longer in some places, so the tapering doesn&#39;t cause the line to look cut off at intersections with other lines.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-inking-select-all.jpg" alt="Select all"/></p>

<p><br/></p>

<h4 id="toc_13">Step 6</h4>

<p>When the inking is done it&#39;s time to clean it up a little. Start by selecting everything, and then from the top menu choose <strong>Object &gt; Expand Appearance</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-expand-appearance.jpg" alt="Expand appearance Pathfinder Divide panel"/></p>

<p><br/></p>

<h4 id="toc_14">Step 7</h4>

<p>Now the brush strokes have been turned into compound paths. From here go to the <strong>Pathfinder</strong> panel and, while having everything selected, click on <strong>Divide</strong>. This will cut the compound paths into small pieces along the intersections. Now you can just select the lines you want removed and press <strong>Backspace</strong> a couple of times.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-inking-finished.jpg" alt="Inked character"/></p>

<p>This looks a lot better, but let&#39;s go through a couple more steps to ensure that we are left with only the line art and no stray points or other leftovers from the process. Select a closed path somewhere in the drawing and go to <strong>Select &gt; Same &gt; Fill Color</strong>. Then copy or cut the selection onto a new layer and delete the previous one.</p>

<p>A good idea is to name this layer something appropriate, like &quot;line art&quot;, and lock that layer. As a last step we will go to the <strong>Pathfinder</strong> panel once more and, still having all the line art selected, click <strong>Unite</strong>.</p>

<p><br/></p>

<h2 id="toc_15">4. Coloring With Global Colors and Live Paint</h2>

<h4 id="toc_16">Step 1</h4>

<p>The last thing we&#39;re going to do is to decide on the color scheme. We&#39;re going to use global colors, as this might need to be adjusted later on when we need to put the character into an environment. </p>

<p>Start by making a new layer called &quot;color&quot; and place it under the &quot;line art&quot; layer. Pick out the base colors you&#39;d like to use. They&#39;ll be easy to adjust later, so don&#39;t worry too much about getting them right from the start.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-global-color.jpg" alt="Global color panels"/></p>

<p><br/></p>

<h4 id="toc_17">Step 2</h4>

<p>Create new swatches for each color by clicking the <strong>New Swatch</strong> button in the <strong>Swatches</strong> panel. Double click the swatch color to get access to the <strong>Swatch Options</strong> panel. I suggest naming your colors early on to keep things organized, but what we&#39;re really after here is checking the <strong>Global</strong> box. </p>

<p>Press <strong>OK</strong>, and then proceed to do the same thing for the rest of the colors you&#39;ll be using for the character. If later on we want to make color adjustments, we just have to change the swatch color and everything which uses that color gets changed instantly as well.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-live-paint.jpg" alt="Live paint bucket tool"/></p>

<p><br/></p>

<h4 id="toc_18">Step 3</h4>

<p>Select the color you want to apply, and then select all of the line art. Go to the <strong>Tools</strong> panel and select the <strong>Live Paint Bucket</strong>. While having this tool active you can click on a closed area and it will fill it with your selected color, letting you lay the base colors quickly.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-flat-colors.jpg" alt="Character flat colors"/></p>

<p><br/></p>

<h4 id="toc_19">Step 4</h4>

<p>We&#39;ve now got all the base colors in place, but without any shading it looks a bit flat. To pick some nice highlight and shading colors, duplicate the palette colors on the artboard, and go to the <strong>Color Guide</strong> panel.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-color-guide.jpg" alt="Color guide panel"/></p>

<p>From the button on the top right side of the panel you can access a drop-down menu which lets you change from the default <strong>Show Tints/Shades</strong> to <strong>Show Vivid/Muted</strong>, which I think leads to nicer color picks for our comic character. From here, just modify the duplicate color palette to darker and lighter shades of the base colors.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-color-scheme.jpg" alt="Character color scheme"/></p>

<p><br/></p>

<h4 id="toc_20">Step 5</h4>

<p>Now that we&#39;ve got a good selection to choose from, let&#39;s start shading! This will take some more time since there is no real way to automate this step, but it&#39;s what will make the character pop.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-hsb.jpg" alt="Hue saturation brightness color panel"/></p>

<p>If you want to tweak the colors a bit, a good way to go about it is to go to the <strong>Color</strong> panel, click the top right button, and from the drop-down menu choose <strong>HSB</strong>, which stands for Hue, Saturation, and Brightness.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/illustrator-color-finished.jpg" alt="Colored character"/></p>

<p>Now that we&#39;ve made a colored version of the design from the front, back and side view, we should have a pretty good grasp of how she&#39;ll look. But since she&#39;ll be the star of our comic, she&#39;ll need to be able to act as well, so let&#39;s have her audition a bit for us!</p>

<p><br/></p>

<h2 id="toc_21">5. Express Your Character&#39;s Emotions</h2>

<p>Once you feel pleased with how the character looks, it&#39;s time to focus on facial expressions and body language. Just like when we did the initial character sketching, I suggest making a lot of sketches. </p>

<p>Don&#39;t just draw the faces for happy, sad, angry and so on, but think of different kinds of happiness, sadness and anger. Our faces can change a lot with the intensity of emotions, and the reasons behind them. When drawing in a cartoon or manga style, there are not a lot of details, but it can help a lot to have a mirror beside you and make the faces yourself. You may catch some details you haven&#39;t thought about before.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-emotions.jpg" alt="Facial expression sketches"/></p>

<p>When drawing in a more comic style, which I will be doing with my character, it can be fun to push the character&#39;s facial expression further by extending it to things like hair and clothing. Notice how the character&#39;s chef hat is &quot;emoting&quot; along with the character, as well as her bangs and braid.</p>

<p><br/></p>

<h2 id="toc_22">6. Turn Gesture Drawings Into Action Poses</h2>

<p>Of course, we communicate a lot using body language as well, so try out some different poses for the character too. The same thinking can be applied here: how would this character&#39;s stance show that he/she is sad or angry? How would it differ across a range of emotions, from being slightly disappointed to being devastated? </p>

<p>While there are a lot of resources online for both poses and expressions, it can be pretty fun to create them yourself with a mirror or a camera, or with a friend to model for you.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-action-gestures.jpg" alt="Action stick figure gestures"/></p>

<p>Return once more to the basic shapes building up your character and make some simple stick figures in various poses. Focus on creating movement in the gesture, and don&#39;t worry about accuracy right now.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/sketches-action-poses.jpg" alt="Action pose sketches"/></p>

<p>Lower the opacity of the stick figure layer, and create a new one above it where you flesh out the sketches into proper pose drawings. Testing out the character like this is a good way to see if the design holds up as well in action as when you first drew it.</p>

<p><br/></p>

<h2 id="toc_23">Putting It All Together</h2>

<p>Let&#39;s put together our drawings in one place and see if they all look like the same character. Since this character will only make an appearance in a short slapstick comic, her character sheet won&#39;t be as elaborate as, say, a main character from a fantasy epic, but it&#39;s easy to overlook the benefits of making a character sheet before drawing your comic. I&#39;ve too often made the mistake myself of assuming that I had the character&#39;s look figured out and started drawing the comic, only to find that when I&#39;m finished and read through it, it doesn&#39;t look like the same person.</p>

<p>It&#39;s not bad to keep things simple, since (depending on the comic of course) you&#39;re going to be drawing this character a lot. When sketching the design it can be tempting to add a lot of tiny details, making it look great in that one drawing, but then you need to keep that detail level up through the whole comic.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/character-sheet-final.jpg" alt="Character sheet featuring front back and side view and facial expressions"/></p>

<p>Making comics is a long process with lots of steps, some of which you might have to redo a couple of times. There is no way to completely avoid that, but I hope that by going through the process of doing a thorough sketch brainstorming, studying from reality and refining your ideas early in the process, you might save yourself a great deal of headache later on, and that you will feel confident when it&#39;s time to put your character into a story.</p>

<p><br/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在Framer中制作多页面原型]]></title>
    <link href="glen.pub/14825727400817.html"/>
    <updated>2016-12-24T17:45:40+08:00</updated>
    <id>glen.pub/14825727400817.html</id>
    <content type="html"><![CDATA[
<p>A step by step guide for fellow designers, Framer JS beginners. Topics covered: Page Component | Scroll Component | Some basic programming</p>

<span id="more"></span><!-- more -->

<p><br/></p>

<p>Let’s create a click through prototype which will have multiple screens. We will start off by creating a structure for our pages. This structure is called as a Page component in Framer JS. Let’s see how it works.</p>

<p>让我们创建一个点击通过原型，将有多个屏幕。 我们将开始为我们的页面创建一个结构。 此结构在Framer JS中称为页面组件。 让我们看看它是如何工作的。</p>

<p><br/></p>

<h2 id="toc_0">1. Setup the page component</h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*ZJlvY9IY5RwwQFVZKiP_nA.jpeg" alt=""/></p>

<blockquote>
<p>Our page is setup and is taking the full width and height of the screen.</p>
</blockquote>

<p><br/></p>

<pre><code>page = new PageComponent
  width: Screen.width
  height: Screen.height
  scrollHorizontal: false 
  scrollVertical: false
</code></pre>

<p><br/></p>

<p>The above code will create a page component for you which will hold all of your different pages. We are going to keep scrollHorizontal &amp; scrollVertical to false, because page component by default has a swipe to scroll behaviour, which we don’t want. We want to switch page only when we tap on a button.</p>

<p>上面的代码将为您创建一个页面组件，它将包含所有不同的页面。 我们将scrollHorizontal和scrollVertical保持为false，因为页面组件默认情况下有一个滑动到滚动行为，我们不想要。 我们只想在点击按钮时切换页面。</p>

<p><br/></p>

<p>Also, we want the page component to take up the screen’s width and height. Whatever phone you pick for your prototype we want to take it’s screen width and screen height.</p>

<p>此外，我们希望页面组件占据屏幕的宽度和高度。 无论你选择什么手机你的原型，我们想要它的屏幕宽度和屏幕高度。</p>

<p><br/></p>

<p>Now this component is the DADDY of your prototype, it’s the base which will hold everything together.</p>

<p>现在这个组件是你的原型的DADDY，它是将所有东西放在一起的基础。</p>

<p><br/></p>

<h2 id="toc_1">2. Let’s make our first page</h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*5dOdp4InjRaJERkc2skzig.png" alt=""/></p>

<p><br/></p>

<pre><code>#page 1
mainScreen = new Layer
  width: page.width
  height: page.height
  parent: page.content
  backgroundColor: &quot;white&quot;
</code></pre>

<p><br/></p>

<p>This is the setup for your first page. Your first page will take up the height and width of the page component you defined above, and will have a white background.</p>

<p>这是您的第一页的设置。 您的第一页将占据您在上面定义的页面组件的高度和宽度，并且将具有白色背景。</p>

<p><br/></p>

<p>Now we can add elements to our page and attach events.</p>

<p>现在我们可以添加元素到我们的页面并附加事件。</p>

<p><br/></p>

<p>Notice: the parent layer for this page(mainScreen) will be the content layer of the page component( the component we defined in the beginning.)</p>

<p>注意：此页面（mainScreen）的父层将是页面组件（我们在开头定义的组件）的内容层。</p>

<p><br/></p>

<p>Think of defining layers as boxes inside boxes, Page component is the biggest box, inside which are all the smaller boxes.</p>

<p>考虑将图层定义为框内的框，页面组件是最大的框，其中都是小框。</p>

<p><br/></p>

<p><code>parent: page.content</code></p>

<p><br/></p>

<h3 id="toc_2">2.1 Create a scroll component in this screen and add some content</h3>

<p><br/></p>

<pre><code>mainScreenScroll = new ScrollComponent
  width: Screen.width
  height: Screen.height
  parent: mainScreen
  scrollHorizontal: false
</code></pre>

<p><br/></p>

<p>What we did here is created a scroll component which will hold the screen which we want to scroll. We defined it’s parent — mainScreen and we don’t want a horizontal scroll so made it false.</p>

<p>我们在这里做的是创建一个滚动组件，它将保存我们要滚动的屏幕。 我们定义它的父 - mainScreen，我们不想要一个水平滚动，所以它是false的。</p>

<p><br/></p>

<p>Now we need some content to scroll.</p>

<p>I have created a long list of pictures in sketch, which we will make scrollable in our prototype. I have attached a link to the files and images at the end of the post.</p>

<p>我已经在草图中创建了一长串图片，我们将在我们的原型中进行滚动。 我已在文章末尾附加了文件和图像的链接。</p>

<p><br/></p>

<p>Let’s export that image to framer. Just drag and drop the image in Framer. When you drag and drop an image, by default it is the last layer to be created in code.</p>

<p>让我们将该图像导出到framer。 只需在Framer中拖放图像即可。 当您拖放图像时，默认情况下，它是在代码中创建的最后一个图层。</p>

<p><br/></p>

<pre><code>picture_group = new Layer
  width: 670
  height: 7240
  image: &quot;images/picture_group.png&quot;
  parent: mainScreenScroll.content
  x: Align.center
</code></pre>

<p><br/></p>

<p><em>Notice: We have created a scroll component and whatever layer you want to make as scrollable should go inside it.</em></p>

<p>注意：我们创建了一个滚动组件和任何你想要做的层，因为可滚动应该在其中。</p>

<p><br/></p>

<p>i.e it’s parent should be mainScreenScroll.content — the scroll component we created earlier.</p>

<p><br/></p>

<p>Now when you do this, your scrollable image may fall out of place, it won’t be centered or may not have enough margin at the top/bottom.</p>

<p>现在，当你这样做，你的可滚动图像可能会落在地方，它不会居中或可能没有足够的边距在顶部/底部。</p>

<p><br/></p>

<p>To align layer use the <a href="https://framerjs.com/docs/#align.align">Align property</a>.</p>

<p><br/></p>

<p>To have necessary margin in a scrollable image use contentInset on the scroll component.</p>

<p>为了在可滚动图像中具有必要的余量，在滚动组件上使用contentInset。</p>

<p><br/></p>

<pre><code>mainScreenScroll.contentInset = 
  top: 170
  bottom: 200
</code></pre>

<p><br/></p>

<p>I gave 100px on top and 200px on bottom and used Align.center on x property to make it centered. Take a look at the screen below.</p>

<p>我给了100px顶部和200px底部和使用Align.center on x属性，使它居中。 看看下面的屏幕。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*ibrXEqQEYJDSfSclYuS64g.png" alt=""/></p>

<blockquote>
<p>Notice the layer hierarchy. Page is holding the content, which has mainScreen, which has a scrollable area whose content has the picture group.</p>
</blockquote>

<p><br/></p>

<h3 id="toc_3">2.2 Let’s add a blue button and make it clickable and navigate to a new page.</h3>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*YAH3IwDq8rA3jt-8OFttwQ.png" alt=""/></p>

<p><br/></p>

<pre><code>continueCta = new Layer
  width: 700
  height: 150
  image: &quot;images/continueCta.png&quot;
  x: Align.center
  y: Align.bottom(-20)
  parent: mainScreen
</code></pre>

<p><br/></p>

<p>We simply made a button in sketch and drag-dropped it in Framer. Nothing fancy. But the important thing to notice is where will the blue button should be added in framer layer tree(the left column in the pic below). You need to be careful about element’s parent layer.</p>

<p>我们只是在草图中创建了一个按钮，并将其拖放到Framer中。 没有什么花哨。 但重要的是要注意的是蓝色按钮应该在framer树中添加到哪里（在下面的图片的左栏）。 你需要注意元素的父层。</p>

<p><br/></p>

<p><em>Note: we wanted the button to come on top of all the layers in mainScreen, hence we created it last.</em></p>

<p>注意：我们希望按钮在mainScreen中的所有图层之上，因此我们最后创建它。</p>

<p><br/></p>

<p>before we attach a click event and navigate to the next page, let’s add iOS status bar and title bar at the top to make our proto look like a proper iOS app.</p>

<p>在我们附加一个点击事件并导航到下一页之前，让我们在顶部添加iOS状态栏和标题栏，使我们的原型看起来像一个正确的iOS应用程序。</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*t0eIexa1lGHpzthHky821g.png" alt=""/></p>

<pre><code>statusBar = new Layer
  width: 750
  height: 40
  image: &quot;images/status_bar.png&quot;
  parent: page
</code></pre>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*qZtaOQ65Z-xb4f5A4wtQsA.png" alt=""/></p>

<p><br/></p>

<p>I had the status and title bar ready in my sketch file, so just exported them to @2x and drag-dropped them in Framer.</p>

<p>我在sketch已经准备好状态和标题栏文件，所以只是导出@ 2x并拖进Framer。</p>

<p><br/></p>

<p><em>Note: Status bar will come on top of every other layer so we will create this layer inside the page component’s content layer, above the rest of the layers. The title bar will be inside the mainScreen page we made . Take a look at the attached screen.</em></p>

<p>注意：状态栏将出现在每个其他图层的顶部，因此我们将在页面组件的内容图层内创建此图层，在其余图层上方。 标题栏将在我们所做的mainScreen页面内。 看看附加的屏幕。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*VB4a5_LF1V9diZa3fq_BjA.png" alt=""/></p>

<blockquote>
<p>Yay!! we have a title and status bar at top, sweet!</p>
</blockquote>

<p>Now let’s add another page.</p>

<p><br/></p>

<h2 id="toc_4">3. Add a new page and navigate to it.</h2>

<p>Now we will add a page to our page component. The new page won’t be visible, because when you add it, it gets added to the right of the screen.</p>

<p>现在我们将向我们的页面组件添加一个页面。 新页面将不可见，因为添加它时，它会添加到屏幕右侧。</p>

<p><br/></p>

<pre><code>#page 2
secondPage = new Layer
  width: page.width
  height: page.height
  backgroundColor: &quot;white&quot;

#add a title bar for this page too
titleBarTwo = new Layer
  width: 750
  height: 128
  image: &quot;images/titleBarTwo.png&quot;
  parent: secondPage #the parent is now secondPage

#this is where we add new pages
page.addPage(secondPage)
</code></pre>

<p><br/></p>

<p>We created a page added a title bar to it and added that page to the page component.</p>

<p>我们创建了一个页面，并向其添加了一个标题栏，并将该页面添加到页面组件。</p>

<p>Now we will link the page to the blue button via a click event.</p>

<p>现在，我们将通过点击事件将页面链接到蓝色按钮。</p>

<p><br/></p>

<pre><code>#let&#39;s add click event to the button which navigates to second page.
continueCta.on Events.Click, -&gt;
  page.snapToPage(secondPage)
</code></pre>

<p><br/></p>

<p>When continueCta is clicked we are calling a function snapToPage which helps us snap to the second page. We simply passed our secondPage layer to snapToPage function and now our prototype is switching to next page.</p>

<p>当单击continueCta时，我们调用一个函数snapToPage，它帮助我们捕捉到第二页。 我们简单地通过我们的secondPage层到snapToPage函数，现在我们的原型是切换到下一页。</p>

<p><br/></p>

<p>On the second page I created a click event on back too so that we can come back to the home screen.</p>

<p>在第二页上，我也创建了一个点击事件，以便我们可以回到主屏幕。</p>

<p><br/></p>

<ol>
<li>first make a transparent layer in framer, a little larger than back so that it has a good enough hit area.</li>
</ol>

<p>首先在framer中做出一个透明层，比后面大一点，这样它有一个足够好的命中区。</p>

<ol>
<li>add a click event to it.</li>
</ol>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*ixCgIsOp9hFX5thjSyX9Jw.png" alt=""/></p>

<p><br/></p>

<pre><code>back = new Layer
  height: 100
  y: 30
  parent: secondPage
  backgroundColor: &quot;transparent&quot; #make it transparent when you have placed it perfectly on top of your button.

back.on Events.Click, -&gt;
  page.snapToPreviousPage()
</code></pre>

<p><br/></p>

<p>You now know how to create a page and add it to your page component.</p>

<p>您现在知道如何创建页面并将其添加到页面组件。</p>

<ol>
<li>Create a new layer for your page.</li>
<li>Decorate it with the elements you want.</li>
<li>Add it as a page to the page component you have created.</li>
</ol>

<p><br/></p>

<p>Let me know if you have any queries. I will help you out. I am attaching a link to the files for the prototype. You can download the files here — <a href="https://github.com/akujgd/multiscreen-framer-proto">https://github.com/akujgd/multiscreen-framer-proto</a></p>

<p>Cheers!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Designers shouldn’t code. They should study business.]]></title>
    <link href="glen.pub/14820292300905.html"/>
    <updated>2016-12-18T10:47:10+08:00</updated>
    <id>glen.pub/14820292300905.html</id>
    <content type="html"><![CDATA[
<p>Increasingly, more and more companies are looking for great design leadership these days. They are being told that their company needs a bigger focus on design thinking and are keen to adopt more design centric principles. But over and over, when these companies talk to designers, they hear about craftsmanship—about brand consistency, and polished design, designers who can code, and style guides, and prototyping, and testing — the designer’s craft.</p>

<span id="more"></span><!-- more -->

<p>越来越多的公司正在寻找伟大的设计领导。 他们被告知，他们的公司需要更加专注于设计思维，并渴望采用更多以设计为中心的原则。 但是，当这些公司与设计师交谈时，他们听到了关于工艺 - 品牌一致性，抛光设计，可以编码，设计指南，原型设计和测试 - 设计师工艺的设计师。</p>

<p><br/></p>

<p>All of those things are good — mandatory even. But for us to truly understand the best way to help a business we have to start focusing on what makes the business successful. We must first understand business in general. Then we will better understand where craft is important (and where it is excessive).</p>

<p>Instead, designers are often seen as someone that needs to have the important business goals explained to them in the most basic of ways. I think our suggestions about design would carry a lot more weight if we were able to have insightful conversations, and offer valuable suggestions about core business principles.</p>

<p><br/></p>

<h3 id="toc_0">Where we are now</h3>

<p>There are a lot of designers out there that are starting to think seriously about how their decisions impact their companies. In general, our focus on user research and analytics has helped a ton in giving more credence to the voices of designers. We’re also seeing great examples of design led companies and designers impacting the core of big businesses—like Airbnb, Pocket, Facebook, Google, Slack, and a loads of others.</p>

<p>I would argue that those companies are as successful as they are because they have designers that are focusing more on what those businesses need than on how perfect every pixel is going to look.</p>

<p><br/></p>

<h3 id="toc_1">Shifting our focus</h3>

<p>So how do we start thinking about design’s impact on business?</p>

<p>Maybe its going all out and getting an MBA. (All of the designers I know that have done this are actively contributing to the core of their business). But maybe it’s even more simple. Maybe its talking to the sales team to understand what the market looks like. Maybe it’s talking to shipping and fulfillment to understand why orders are always a day late. Maybe it’s reading over the Q1 projections and finding out that the key initiatives for the quarter have nothing to do with refactoring your CSS. Maybe it’s taking a night class in economics. Or maybe it’s just spending the night googling how fund raising and cap tables work instead of how to use the newest sketch plugin.</p>

<p>Maybe we should be spending our time learning about business principles — how to choose business models, how to manage teams, how to conduct competitive analysis, how to make projections, etc.</p>

<p>Maybe we should try to learn about the issues a CEO or VP faces and try to use design to help them solve their problems? Maybe we should try to figure out what keeps them up at night and help them solve their problems — instead of ours.</p>

<p><br/></p>

<h3 id="toc_2">The future</h3>

<p>I’m not saying we should start shipping poorly designed experiences. We have to keep growing and focusing on craft. If we don’t, nobody else will. But let’s also start understanding the businesses we work for and what they need in order to grow. If we’re able to do that, we will continue to gain more influence, and continue to create products that are more impactful—both for our companies and for the people that use them.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make simple SVG stroke animation in Framer]]></title>
    <link href="glen.pub/14817757866736.html"/>
    <updated>2016-12-15T12:23:06+08:00</updated>
    <id>glen.pub/14817757866736.html</id>
    <content type="html"><![CDATA[
<p>A few days ago I upload a shot at Dribbble. In my initial idea I just wanted to draw 4 simple icons, but at last I made an animation for them, in Framer.</p>

<span id="more"></span><!-- more -->

<p><img src="http://of832oeqz.bkt.clouddn.com/1*cCM4QQ7RsSfXiNZ85smEaw.gif" alt="1*cCM4QQ7RsSfXiNZ85smEa"/></p>

<p>Here I going to explain how I made it, but I would rather call it a “trick”, not real coding skill. So don’t panic, things will be easy.</p>

<p><br/></p>

<p>I will give an simple example, once you understand this, you will understand the rest, and making your own animation is just a matter of time.</p>

<p><br/></p>

<p>Firstly, as we’re making SVG animations, we should prepare the SVG graphic before coding in Framer. </p>

<p>我们正在制作SVG动画，我们应该在Framer中编码之前准备SVG图形。</p>

<p>I choose Sketch as drawing tool, Adobe Illustrator is OK, too. I believe simply drawing icons won’t be difficult for you, but one thing that has to be noticed is you should set stroke position to <strong>center</strong>, SVG does not support stroke position property and all stroke will be centered.</p>

<p>我相信简单的绘图图标对你来说不难，但有一点需要注意的是你应该将行程位置设置为中心，SVG不支持行程位置属性，所有行程都将居中。</p>

<p><br/></p>

<p>As Sketch supports not well on SVG format exporting, I choose Adobe Illustrator as tool to convert icon into SVG codes (you can directly copy shapes from Sketch to AI). <br/>
Just select the path in AI, copy it, then paste it into any notepad tool, it will be converted into codes.</p>

<p>由于Sketch支持SVG格式导出不好，我选择Adobe Illustrator作为工具将图标转换为SVG代码（你可以直接从Sketch复制形状到AI）。<br/>
只需选择AI中的路径，复制它，然后将其粘贴到任何记事本工具，它将被转换为代码。</p>

<p><br/></p>

<p>Save your images as SVG file and then open it with notepad is another way to get SVG codes.</p>

<p>将图像保存为SVG文件，然后使用记事本打开它是另一种获取SVG代码的方法。</p>

<p><br/></p>

<p>Well, now draw a rectangle.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*MTzX4e3E1HODOeNBo_vnug.png" alt=""/></p>

<p><br/></p>

<p>SVG shape code is mainly constructed with 3 parts:</p>

<p>SVG形状代码主要由3部分构成：</p>

<p><br/></p>

<ul>
<li><p>Canvas, or art board, decides the size of area where the shape to be drawn.</p></li>
<li><p>画布或艺术板决定要绘制形状的区域的大小。</p></li>
<li><p>CSS, decides the style of shape, like fill color, stroke and many other properties.</p></li>
<li><p>CSS，决定了形状的样式，如填充颜色，笔触和许多其他属性。</p></li>
<li><p>Path, decides how the shape look like, also the most complicated part, luckily with the help of tools like Sketch and AI we don’t have to consider such things.</p></li>
<li><p>路径，决定如何形状看起来，也是最复杂的部分，幸运的是与工具，如素描和AI的帮助，我们不必考虑这样的事情。</p></li>
</ul>

<p><br/></p>

<p>These are the SVG codes for the rectangle shape, you could easily find the corresponding part.</p>

<p>这些是用于矩形形状的SVG代码，可以很容易地找到相应的部分。</p>

<p><br/></p>

<pre><code>&lt;!-- Generator: Adobe Illustrator 19.1.0, SVG Export Plug-In  --&gt;
&lt;svg version=&quot;1.1&quot;
  xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:a=&quot;http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/&quot;
  x=&quot;0px&quot; y=&quot;0px&quot; width=&quot;88px&quot; height=&quot;106px&quot; viewBox=&quot;0 0 88 106&quot; style=&quot;enable-background:new 0 0 88 106;&quot;
  xml:space=&quot;preserve&quot;&gt;
&lt;style type=&quot;text/css&quot;&gt;
 .st0{fill:none;stroke:#03C0E6;stroke-width:2;stroke-linecap:square;stroke-miterlimit:10;}
&lt;/style&gt;
&lt;defs&gt;
&lt;/defs&gt;
&lt;path class=&quot;st0&quot; d=&quot;M1,6c0-2.8,2.2-5,5-5h76c2.8,0,5,2.2,5,5v94c0,2.8-2.2,5-5,5H6c-2.8,0-5-2.2-5-5V6z&quot;/&gt;
&lt;/svg&gt;
</code></pre>

<p><br/></p>

<p>Remove the unnecessary part to make codes neat, and give its CSS class a name. You have to name its CSS class, or Framer cannot recognize which class should be used on each SVG path.</p>

<p>删除不必要的部分使代码整齐，并给它的CSS类名称。 您必须命名其CSS类，或者Framer无法识别在每个SVG路径上应使用哪个类。</p>

<p><br/></p>

<pre><code>&lt;svg version=&quot;1.1&quot;
  x=&quot;0px&quot; y=&quot;0px&quot; width=&quot;88px&quot; height=&quot;106px&quot; viewBox=&quot;0 0 88 106&quot; style=&quot;enable-background:new 0 0 88 106;&quot;
  xml:space=&quot;preserve&quot;&gt;
&lt;style type=&quot;text/css&quot;&gt;
 .paper_left{fill:none;stroke:#03C0E6;stroke-width:2;stroke-linecap:square;stroke-miterlimit:10;}
&lt;/style&gt;
&lt;path class=&quot;paper_left&quot; d=&quot;M1,6c0-2.8,2.2-5,5-5h76c2.8,0,5,2.2,5,5v94c0,2.8-2.2,5-5,5H6c-2.8,0-5-2.2-5-5V6z&quot;/&gt;
&lt;/svg&gt;
</code></pre>

<p><br/></p>

<p>Then, open Framer, do this:</p>

<p><br/></p>

<pre><code>paperLeft = new Layer
  x: Align.center
  y: Align.center
  width: 88
  height: 106
  backgroundColor: &quot;null&quot;
 paperLeft.html = &quot;&quot;&quot;
  &lt;svg version=&quot;1.1&quot;
    x=&quot;0px&quot; y=&quot;0px&quot; width=&quot;88px&quot; height=&quot;106px&quot; viewBox=&quot;0 0 88 106&quot; style=&quot;enable-background:new 0 0 88 106;&quot;
    xml:space=&quot;preserve&quot;&gt;
  &lt;style type=&quot;text/css&quot;&gt;
   .paper_left{fill:none;stroke:#03C0E6;stroke-width:2;stroke-linecap:square;stroke-miterlimit:10;}
   .paper_left{stroke-dashoffset:380;stroke-dasharray:380;animation:paper_left_dash 0.75s cubic-bezier(0.39, 0.575, 0.565, 1) normal forwards;}
   @keyframes paper_left_dash{to{stroke-dashoffset:0;}}
  &lt;/style&gt;
  &lt;path class=&quot;paper_left&quot; d=&quot;M1,6c0-2.8,2.2-5,5-5h76c2.8,0,5,2.2,5,5v94c0,2.8-2.2,5-5,5H6c-2.8,0-5-2.2-5-5V6z&quot;/&gt;
  &lt;/svg&gt;&quot;&quot;&quot;
</code></pre>

<p><br/></p>

<p>As you can see, I pasted the SVG codes after <strong>paperLeft.html</strong> (remember to use three quotation marks to start and end, or it will be of no effect). But something is different, I added these two lines of codes.</p>

<p>如你所见，我在paperLeft.html之后粘贴了SVG代码（记住使用三个引号开始和结束，否则它将没有效果）。 但有点不同，我添加了这两行代码。</p>

<p><br/></p>

<pre><code>.paper_left{stroke-dashoffset:380;stroke-dasharray:380;animation:paper_left_dash 0.75s cubic-bezier(0.39, 0.575, 0.565, 1) normal forwards;}

[@keyframes](http://twitter.com/keyframes &quot;Twitter profile for @keyframes&quot;) paper_left_dash{to{stroke-dashoffset:0;}}
</code></pre>

<p><br/></p>

<p>They’re the key to SVG animation. 它们是SVG动画的关键。</p>

<p><br/></p>

<p>In CSS stroke properties, there are two key parts. One is <strong>stroke-dashoffset</strong>, decides where the dash-and-gap effect shall start, another is <strong>stroke-dasharray</strong>, like its name tells, it’s an array, you can just simply put 1 or 2 or more numbers after it, to control how long the dash and the gap will be.</p>

<p>在CSS stroke属性中，有两个关键部分。 一个是stroke-dashoffset，决定dash-and-gap效应开始的位置，另一个是stroke-dasharray，就像它的名字告诉，它是一个数组，你可以只是简单地放1或2或更多的数字后， 长的破折号和差距将会。</p>

<p><br/></p>

<p><code>.paper_left{stroke-dashoffset:380;stroke-dasharray:380;}</code></p>

<p><br/></p>

<p>An important thing you may want to ask is, what number should I input after <strong>stroke-dashoffset</strong> and <strong>stroke-dasharray</strong>? Yeah, if you input inappropriate numbers, things will go wrong.</p>

<p>一个重要的事情你可能要问，在stroke-dashoffset和stroke-dasharray后，我应该输入什么数字？ 是的，如果你输入不适当的数字，事情会出错。</p>

<p><br/></p>

<p>Well, this is easy to decide, just input the length of your path. Calculating the circumference of rectangle or ellipse is easy, right? Even if you have an irregular shape, you could still estimate its circumference and test whether the animation is correct in Framer, just test a few more times and you will get the fitted number.</p>

<p>好吧，这很容易决定，只需输入你的路径的长度。 计算矩形或椭圆的圆周很容易，对吧？ 即使你有一个不规则的形状，你仍然可以估计它的周长，并测试动画是否在Framer中正确，只是测试几次，你会得到适合的数字。</p>

<p><br/></p>

<p>The circumference of this rectangle is about 380 pixels, so I input 380.</p>

<p>这个矩形的周长约为380像素，所以我输入380。</p>

<p><br/></p>

<p>So in this part of codes, we added dashes for the rectangle path. After this, we should add animation for it.</p>

<p>所以在这部分代码中，我们为矩形路径添加了破折号。 之后，我们应该为它添加动画。</p>

<p><br/></p>

<pre><code>.paper_left{stroke-dashoffset:380;stroke-dasharray:380;animation:paper_left_dash 0.75s cubic-bezier(0.39, 0.575, 0.565, 1) normal forwards;}
</code></pre>

<p><br/></p>

<p>The values (separated by spaces) after <strong>animation:</strong> mean in order:</p>

<p>动画后的值（用空格分隔）：按顺序：</p>

<ul>
<li><em>animation name</em></li>
<li><em>animation duration</em> 持续时间</li>
<li><em>curve (timing function)</em></li>
<li><p>曲线（定时函数）</p></li>
<li><p><em>how many times the animation should be played (if set to</em> <strong><em>normal</em></strong><em>, plays only once)</em></p></li>
<li><p>应该播放多少次动画（如果设置为正常，只播放一次）</p></li>
<li><p><em>animation direction (usually set to</em> <strong><em>forwards</em></strong><em>)</em></p></li>
<li><p>动画方向（通常设置为向前）</p></li>
</ul>

<p><br/></p>

<p>Now it seems we’ve added an animation for the rectangle, but we haven’t tell how this animation is going to move. So the following codes should be added, too.</p>

<p>现在看来我们已经为矩形添加了一个动画，但是我们还没有告诉这个动画将如何移动。 因此，也应该添加以下代码。</p>

<p><br/></p>

<pre><code>[@keyframes](http://twitter.com/keyframes &quot;Twitter profile for @keyframes&quot;) paper_left_dash{to{stroke-dashoffset:0;}}
</code></pre>

<p><br/></p>

<p>Like its name, it decides the keyframes of animation called <strong>paper_left_dash</strong>. Remember, if you want this stroke to be drawn “from 0 to 1”, you should set the <strong>stroke-dashoffset</strong> in <strong>@keyframes</strong> to <strong>zero</strong>. If you want this stroke to be drawn “from 1 to 0” (to be played reversely), the codes should be like this:</p>

<p>像它的名字，它决定了称为paper_left_dash的动画的关键帧。 记住，如果你希望这个笔画被绘制为“从0到1”，你应该将@keyframes中的stroke-dashoffset设置为零。 如果你想要这个笔画被绘制“从1到0”（反向播放），代码应该是这样的：</p>

<p><br/></p>

<pre><code>.paper_left{stroke-dashoffset:760;stroke-dasharray:380;animation:paper_left_dash 0.75s cubic-bezier(0.39, 0.575, 0.565, 1) normal forwards;}

[@keyframes](http://twitter.com/keyframes &quot;Twitter profile for @keyframes&quot;) paper_left_dash{to{stroke-dashoffset:380;}}
</code></pre>

<p><br/></p>

<p>As you can see, <strong>stroke-dashoffset</strong> is set to double the circumference of this rectangle, and another <strong>stroke-dashoffset</strong> in <strong>@keyframes</strong> is set to equal the circumference of this rectangle. This will make your stroke animation reversed.</p>

<p>如您所见，stroke-dashoffset设置为该矩形的圆周的两倍，而@keyframes中的另一个stroke-dashoffset设置为等于该矩形的圆周。 这将使你的笔画动画逆转。</p>

<p><br/></p>

<p>Now you shall come to understand the essence of SVG stroke animation, it’s just moving this position where the dash effect starts, to make an “illusion” that the stoke is been “drawing”.</p>

<p>现在你会了解SVG笔画动画的本质，它只是移动这个位置，破折号效果开始，使一个“幻觉”，斯托克正在“绘图”。</p>

<p><br/></p>

<p>To control the start and end point of this animation is not hard work. Just cut the path using Sketch <strong>Scissor</strong> tool. Wherever on this path you want animation to start, just cut it. If the start and end point is reversed, use Sketch <strong>Reverse Order</strong> tool, and convert it into SVG codes again.</p>

<p>控制这个动画的开始和结束点不是很难的工作。 只是剪切路径使用素描剪刀工具。 无论在这个路径上，你想要开始动画，只是剪切它。 如果起点和终点相反，使用草图倒置顺序工具，并再次将其转换为SVG代码。</p>

<p><br/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*EHjVw3dz898sQrF9n3G80g.png" alt=""/></p>

<p><br/></p>

<p>You should have already noticed for a long time that the animation is played automatically. We will use <strong>Utils.insertCSS</strong> to control its play status.</p>

<p>你应该已经注意到了很长时间的动画自动播放。 我们将使用Utils.insertCSS来控制其播放状态。</p>

<p><br/></p>

<pre><code>paperLeftAnimation = &quot;&quot;&quot;.paper_left{animation-play-state:paused;}&quot;&quot;&quot;

Utils.insertCSS(paperLeftAnimation)
</code></pre>

<p><br/></p>

<p>This will insert some other CSS codes into previous CSS class named <strong>paper_left</strong>, and make its animation pause.</p>

<p>这将插入一些其他CSS代码到名为paper_left的前面的CSS类，并使其动画暂停。</p>

<p><br/></p>

<p>At the place where you need this animation to be played, just add another 2 lines of code like this, which will make this animation run.</p>

<p>在你需要播放这个动画的地方，只需添加另外两行代码，这将使这个动画运行。</p>

<p><br/></p>

<pre><code>paperLeftAnimation = &quot;&quot;&quot;.paper_left{animation-play-state:running;}&quot;&quot;&quot;

Utils.insertCSS(paperLeftAnimation)
</code></pre>

<p><br/></p>

<p>Well, now I think you’ve fully understand how to add and control a SVG animation in Framer. Of course this isn’t the most elegant way, it’s just one of the ways lead to Rome.</p>

<p>好了，现在我想你已经完全了解如何在Framer中添加和控制SVG动画。 当然，这不是最优雅的方式，它只是导致罗马的方式之一。</p>

<p><br/></p>

<p>And the most “tricky” part, how did I make the line move from the right edge, and “transform” into another shape, and this shape transforms into line again, then moves to the left edge?</p>

<p>而最“棘手”的部分，我是如何使线从右边缘移动，并“变换”成另一种形状，这种形状再次转换为线，然后移动到左边缘？</p>

<p><br/></p>

<p>This is really simple.</p>

<pre><code>paperLeftLine = new Layer
  parent: illustration01
  width: 0
  height: contentBorderWidth
  backgroundColor: &quot;#03C0E6&quot;
  x: illustration01.maxX + cardBodyImageMarginHorizontal
  y: paperLeft.maxY - contentBorderWidth
  index: 3

 paperLeftLineMoveIn = new Animation
  layer: paperLeftLine
  properties:
   width: (illustration01.width - paperLeft.minX) + cardBodyImageMarginHorizontal
   x: paperLeft.maxX - paperBorderRadius - contentBorderWidth
  time: 0.4
  curve: &quot;cubic-bezier(0.55, 0.055, 0.675, 0.19)&quot;

 paperLeftLineMoveIn2 = new Animation
  layer: paperLeftLine
  properties:
   width: contentBorderWidth
   x: paperLeft.maxX - paperBorderRadius - contentBorderWidth
  time: 0.3
  curve: &quot;cubic-bezier(0.215, 0.61, 0.355, 1)&quot;

 paperLeftLineMoveIn.on Events.AnimationEnd, -&gt;
  paperLeftLineMoveIn2.start()

 paperLeftLineMoveIn2.on Events.AnimationEnd, -&gt;
  paperLeftLine.x = paperLeft.minX + paperBorderRadius
</code></pre>

<p><br/></p>

<p>As you can see, it’s just another layer, with some simple animation. What you need to do is carefully align it with the previous stroke animation, to make them seem to be “continuous”. Well, just a matter of time, right?</p>

<p>如你所见，它只是另一层，有一些简单的动画。 你需要做的是仔细对齐它以前的笔画动画，使他们似乎是“连续”。 好吧，只是时间问题，对吧？</p>

<p><br/></p>

<p>For more detail you can check the .framer file of this animation:</p>

<p>更多的细节，你可以检查这个动画的.framer文件：</p>

<p><br/></p>

<p>I just repeatedly used those “tricks” above to finally finish the animation, nothing is too special. Be patient and adjust every layer precisely, and consider the sequence of every animation carefully, this is what beyond coding.</p>

<p>我只是反复使用这些“技巧”上面的终于完成动画，没有什么是太特别。 耐心，精确地调整每一层，仔细考虑每一个动画的序列，这是超越编码。</p>

<p><br/></p>

<p>With the help of SVG, it’s possible for you to draw everything by codes, and use less images, which will make your prototype simpler.</p>

<p><br/></p>

<p><br/></p>

<p>Author: <a href="https://dribbble.com/Airytram">Airytram</a></p>

<p><br/></p>

<p>QMUI Icons[Sketch]</p>

<p><a href="https://dribbble.com/shots/3064118-QMUI-Icons-Sketch">https://dribbble.com/shots/3064118-QMUI-Icons-Sketch</a></p>

<p><br/></p>

<p>QMUI Icons[framer]</p>

<p><a href="http://share.framerjs.com/fvip45z0jvr5/">http://share.framerjs.com/fvip45z0jvr5/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a Clueless Racecar Driver Illustration in Photoshop]]></title>
    <link href="glen.pub/14814629767363.html"/>
    <updated>2016-12-11T21:29:36+08:00</updated>
    <id>glen.pub/14814629767363.html</id>
    <content type="html"><![CDATA[
<p>Creating a high-impact and realistic caricature illustration can be a fun but extremely challenging task. In this tutorial, we will explain how to properly control all the elements of a composition including color balance, contrast, textures, and more, as well as all of the tools and techniques that you will need to know in Photoshop to build a highly entertaining and detailed caricature illustration. Let&#39;s get started!</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">1. Sketch</h2>

<h3 id="toc_1">Step 1</h3>

<p>Create a new document (<strong>File &gt; New...</strong>). Define an arbitrary size and start with a resolution of 120dpi.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_001.jpg" alt=""/></p>

<p>Create a new layer (<strong>Layer &gt; New ... &gt; Layer</strong>) and using a moderately fine brush. The first lines will define our idea of the composition. We are looking for a very sharp perspective with a subtle fisheye effect.</p>

<p>我们正在寻找一个非常尖锐的视角与一个微妙的鱼眼效果</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_brush_001.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_002.jpg" alt=""/></p>

<h3 id="toc_2">Step 2</h3>

<p>Then create a second layer (<strong>Layer &gt; New ... &gt; Layer</strong>), lower the opacity of the below layer to see our first sketch and re-define the elements a bit more. The driver is taking the shape of an older man.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_003.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_004.jpg" alt=""/></p>

<h3 id="toc_3">Step 3</h3>

<p>Repeat the previous step, create another layer <strong>(Layer &gt; New ... &gt; Layer)</strong>, lowering the opacity of the below layer, and now we make a more clean and detailed drawing. The rabbit doesn&#39;t have the proper expression, we need a more fun and extreme gesture.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_005.jpg" alt=""/></p>

<h3 id="toc_4">Step 4</h3>

<p>Now that we are more in line with the elements, we will make the last step before the final outline. Here we re-define the layout quickly. The characters take appropriate features and expressions and design of police cars will look more proportional. Clouds and other shapes are defined less clearly but we can add more detail in a later step.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_006.jpg" alt=""/></p>

<h2 id="toc_5">2. Set-Up Document</h2>

<h3 id="toc_6">Step 1</h3>

<p>Increase the final resolution to make an image that can be printed, at 300dpi. Clean up the drawing and make more accurate, and give all the elements the correct shape and appropriate thicknesses. Try to give credibility to each of the shapes from the drawing. The most relevant components (car with driver, rabbit and police cars) will make them in separate layered just in case we need to change their position later.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_007.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_brush_002.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_008.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_009.jpg" alt=""/></p>

<h3 id="toc_7">Step 2</h3>

<p>Once we are satisfied with the layout, group them into a layer we call &quot;Outline&quot;, lower the opacity and change the Layer Blend Mode to <strong>Multiply</strong>. Then lock the layer.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_010.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_010-2.jpg" alt=""/></p>

<h2 id="toc_8">3. Prepare Color Bases for Painting</h2>

<h3 id="toc_9">Step 1</h3>

<p>Create a new layer (<strong>Layer &gt; New Layer...</strong>) to start the bases of color. With the Pen Tool define the whole contour of the car, which has a well-defined shape. Close the path doing Right click over the path and select <strong>Make selection &gt; ...</strong>, then Ok to make a selection from this path, as shown below.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_011.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_012.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_013.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_014.jpg" alt=""/></p>

<p>Now select an arbitrary color to fill.</p>

<p>To speed up the process of filling, we define an action. When we have a selection, in the actions palette create a New Action, define its name and a shortcut, then press record and then go to <strong>Select &gt; Modify &gt; Expand ...</strong> define expansion 2px, and ended up deselecting action (<strong>CMD/CTRL + D</strong>). Now stop recording the action.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_015.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_016.jpg" alt=""/></p>

<p>Now every time we need to fill a selection, just use our defined shorcut.</p>

<h3 id="toc_10">Step 2</h3>

<p>In a new layer (<strong>Layer &gt; New Layer...</strong>) and a basic brush (hard) fill the character than is more organic and does not require a precise contour. In this layer we only paint the part of the character that gets out from the car.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_brush_000.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_017-2.jpg" alt=""/></p>

<p>The only caution now is to check than there are no small holes unfilled. In that case we correct with the brush.</p>

<h3 id="toc_11">Step 3</h3>

<p>In a new layer, paint the part of the character do you see inside the car. Then we make a folder to group every part of the character. The same thing we do with the main car, the police cars, etc.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_019.jpg" alt=""/></p>

<h3 id="toc_12">Step 4</h3>

<p>Now make all the elements that correspond to each item in new layers, but we convert these layers in a clipping masks by this way: Create a new layer (<strong>Layer &gt; New ... &gt; Layer</strong>) above our base layer (&quot;Character&quot; or &quot;Car)&quot; and go to <strong>Layer &gt; Create Clipping Mask</strong> or (<strong>CMD/CTRL + Alt + G</strong>). Then fill and create all the necessary layers.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_020.jpg" alt=""/></p>

<h3 id="toc_13">Step 5</h3>

<p>Select the background and change the color with a warm tone. Then continue with the layers of police cars.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_021.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_022.jpg" alt=""/></p>

<h3 id="toc_14">Step 6</h3>

<p>To make the inside of the rabbit&#39;s mouth, use a mask to paint the teeth. Select the layer by pressing <strong>CMD/CTRL</strong> over the thumbnail of the corresponding layer, create a new layer and then make a <strong>Layer mask</strong> by pressing the button in the Layers palette, or menu <strong>Layer &gt; Layer Mask &gt; Reveal Selection</strong>. Fill the teeth with the brush.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_023.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_024.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_025.jpg" alt=""/></p>

<h3 id="toc_15">Step 7</h3>

<p>We will do a couple of layers as masks, that we will use later to help us to define certain rabbit planes when we paint the volume effect. We&#39;ll paint these areas on a new layer with a highlight color and we mark the layers in the palette with a similar color to identify them quickly. Then hide the layers.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_026.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_027.jpg" alt=""/></p>

<h3 id="toc_16">Step 8</h3>

<p>With all the bases ready to all the elements and before starting the painting process, we will block the transparency of all layers.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_028.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_028-2.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_028-3.jpg" alt=""/></p>

<h3 id="toc_17">Step 9</h3>

<p>Fill each layer with a color more approached with the finish we want to achieve, in this case all be dominated by ocher because we want to give to our image a look a bit retro and of adventure. I select a layer at a time, select a color and apply it by pressing <strong>Alt + Backspace</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_029.jpg" alt=""/></p>

<h2 id="toc_18">4. Painting</h2>

<h3 id="toc_19">Step 1</h3>

<p>Using a brush that you find comfortable, a basic brush, diffuse, make the first pass of color in the background, very indefinite and rapidly at first, exploring the sources of light and color to find an interesting effect, with some realism. Here we have defined a yellow-orange light like a sunset, with sunlight from the left with long shadows projecting some a more purple color as the sky, which is less affected by the sun when going to the right side.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_brush_003.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_030.jpg" alt=""/></p>

<h3 id="toc_20">Step 2</h3>

<p>After the first pass of color in the background, from where the light sources (sun, sky) comes, continue with the next relevant element, the car, following the same process of exploration, we block the volume, very loosely, without details, understanding and modeling the way and always looking for more consistency with the light sources. The shadows of the car should be influenced by the color of the desert but mainly from the light of the sky, so for the chassis we used a darker green color but with some purple. I always pick colors from background to integrate the image, the background luminates all of the objects in the scene.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_031.jpg" alt=""/></p>

<h3 id="toc_21">Step 3</h3>

<p>The next important element is our character, but the bigger visual weight is on the face, is what we call our attention immediately, so it is good to spend more care in its construction.<br/>
First use a base color to model, capturing the main volumes and gradually integrating by color elements such the teeth, giving to lips more red tones, more pink on the tongue. The nose is often pierced by light and that creates more orange lights on top and inside, etc.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_032.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_033.jpg" alt=""/></p>

<h3 id="toc_22">Step 4</h3>

<p>Continue with the first pass of color in clothing, in rabbit, and hint some clouds too, which help us to give more spaciousness, more perspective and interest to the image.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_034.jpg" alt=""/></p>

<h3 id="toc_23">Step 5</h3>

<p>In the rabbit’s mouth, again use a layer as a mask, which I use often because I find it very simple and faster access. It&#39;s inherited from my past as an airbrush artist. On a new layer, paint the forms we need, with a very defined brush, then hide the layer, and go to layer properties in context menu, assign a color to identify them quickly. To use this mask, simply selected by placing the cursor on it and pressing <strong>CMD/CTRL + click</strong>. Then paint which require more definition, deselect and continue painting forms trying to integrate well.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_035.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_036.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_037.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_038.jpg" alt=""/></p>

<h3 id="toc_24">Step 6</h3>

<p>Apply a soft yellow color to the teeth, later apply the other pass in a darker color to define the volume, then a darker tone to define and add more volume and some texture. Do the same with the eyes and eyelids. Some smaller and defined elements as the teeth are easier to define from the outset, but still need a lot of attention in which forms are appropriate, we should study well if we are not familiar with their shapes.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_039.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_040.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_041.jpg" alt=""/></p>

<h3 id="toc_25">Step 7</h3>

<p>Make a general evaluation. In this case add a little more sky light color and contrast to the shadows of the car. If you are satisfied, you can start with the details.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_042.jpg" alt=""/></p>

<h2 id="toc_26">5. Cop Cars</h2>

<h3 id="toc_27">Step 1</h3>

<p>We start with the chrome parts. We use a dark color for the overall volume. Then we painted details. We add interest to the volumes generating imperfections and a little irregular shape, some dents bring &quot;flavor and story&quot; to the subject. We added ochres from soil that are reflected. Insinuate some light on the chassis.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_043.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_044.jpg" alt=""/></p>

<h3 id="toc_28">Step 2</h3>

<p>We add volume to the chassis, paint all the car lights: lights, siren, flashing.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_045.jpg" alt=""/></p>

<h3 id="toc_29">Step 3</h3>

<p>The chrome of the car receives a first pass of color to block the volume. We take the background color and apply light reflections corresponding to the environment, in this case, the horizon.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_046.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_046-2.jpg" alt=""/></p>

<h2 id="toc_30">6. Ground</h2>

<p>To speed the painting of the ground we&#39;ll use a textured effect generated from basic filters.</p>

<h3 id="toc_31">Step 1</h3>

<p>Create a new file, define a size that is not too big. Then go to <strong>Filter &gt; Render &gt; Clouds</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_047.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_048.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_049.jpg" alt=""/></p>

<h3 id="toc_32">Step 2</h3>

<p>Then apply <strong>Filter &gt; Render&gt; Fibers...</strong>, adjust the variables.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_050.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_051.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_052.jpg" alt=""/></p>

<h3 id="toc_33">Step 3</h3>

<p>Then go to <strong>Edit &gt; Fade Fibers ...</strong> or <strong>Shift + CMD/CTRL + F</strong>. Select the Layer blend Mode in <strong>Overlay</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_053.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_054.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_055.jpg" alt=""/></p>

<h3 id="toc_34">Step 4</h3>

<p>To send this texture to our file we can select all with <strong>CMD/CTRL + A, CMD/CTRL + C</strong> to copy and paste into the other file. To fit to the necessary form, transform it with <strong>CMD/CTRL + T</strong>, we enlarge and then use the Warp, go to <strong>Edit &gt; Transform &gt; Warp</strong> or press the button <strong>&quot;Switch to warp mode&quot;</strong> on the tool panel. Deform following the perspective. Then Ok.<br/>
Low the opacity and change the Blend Mode of layer to <strong>Soft Light</strong>, obtaining an irregular texture integrated. But if we are not satisfied with the shape we can transform again in the same way. If you want you can merge now this layer with the bottom layer, I prefer to leave it at that for now if there is something to edit later.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_056.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_057.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_058.jpg" alt=""/></p>

<h3 id="toc_35">Step 5</h3>

<p>The ground still looks very pale, then we&#39;ll add more color, and contrast. Select the brush tool in <strong>Multiply</strong>Blend mode to, pick a color from purple sky, a bright color. Painting in that way we&#39;ll get more tones and intense colors. The same thing we do with the car, so we took advantage of integrating more. Try to be fast and without defining much.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_059.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_060.jpg" alt=""/></p>

<h2 id="toc_36">7. General Details</h2>

<h3 id="toc_37">Step 1</h3>

<p>We return to the face again. Make a new layer, rapidly accentuating mustache in 2 tones. In the face layer begin to emphasize the volume by darkening the parts where there are obviously darker shadows (and it sounds obvious to say) where the light doesn’t reach. And always modeling the shape. Also emphasize the light on the left edge. Hint some traits, such as the neck and wrinkles around the eyes and incorporate orange tones in the nose, but red on the cheeks and other more desaturated green in chin. Also define darker tones in teeth and tongue. Also using the sky color (purple), beginning to tinge the volumes that would be to affected by that light source, that mean from above and right.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_061.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_062.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_062-2.jpg" alt=""/></p>

<h3 id="toc_38">Step 2</h3>

<p>To detail the lips and give them a more interesting texture, prepare a brush that allows us to make a quickly base to then make the final effect. First select or make a simple shape. We just need a shape that creates irregular parallel lines. Then select with Rectangular <strong>Marquee Tool (M)</strong> and copy (<strong>CMD/CTRL + C</strong>), then go to <strong>Edit &gt; Define Brush Preset ...</strong><br/>
Then I set the brush as below.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_063.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_064.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_065.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_066.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_067.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_068.jpg" alt=""/></p>

<h3 id="toc_39">Step 3</h3>

<p>I pick a color from lips and paint it following the shape of the lip, if necessary, change the brush orientation as more fits you. We change the color according to what we need, with lighter colors and darker than the lip base.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_068xa.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_068xb.jpg" alt=""/></p>

<h3 id="toc_40">Step 4</h3>

<p>With a Normal Brush, retouch, exaggerating the volumes that subtly suggests base our texture, trying to generate small volumes in line with the light source.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_068xc.jpg" alt=""/></p>

<h3 id="toc_41">Step 5</h3>

<p>Now we will detail the eye. This is behind the thick glass and therefore we&#39;ll make it flatter and contrasted, with lines that follow the shape of the frame and without saturating the color, as if the glass neutralizes the color of the skin. It&#39;s really good to always paint the elements and their surroundings to integrate these, so here we also give volume and contrast to the glass frame.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_068xd.jpg" alt=""/></p>

<h3 id="toc_42">Step 6</h3>

<p>Following with adjacent objects, paint the dark areas of the glove and let conforming and modeling details and smaller forms that give credibility, as wrinkles.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_069.jpg" alt=""/></p>

<h3 id="toc_43">Step 7</h3>

<p>Go back to the nose and give greater intensity to color to create the effect of transparency, as it hasn&#39;t bone, flesh light passes through more easily, creating a glow or subsurface scattering effect, more even if it is a light source strong, or at least that is the feeling we want to give.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_070.jpg" alt=""/></p>

<h3 id="toc_44">Step 8</h3>

<p>It is the turn of his mustache. Here we use a fine brush to create the hair texture base. But our main concern now is to model the overall volume, so we do not care to finish it for now.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_071.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_072.jpg" alt=""/></p>

<h3 id="toc_45">Step 9</h3>

<p>The teeth, model it with lights and contaminate with other colors, we can give some color transparency effect.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_073.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_074.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_075.jpg" alt=""/></p>

<h3 id="toc_46">Step 10</h3>

<p>Darken the inside of the mouth and give some light on the tongue.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_076.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_077.jpg" alt=""/></p>

<h3 id="toc_47">Step 11</h3>

<p>The light reaching the tongue also paints a subsurface scattering effect with a more intense pink color.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_078.jpg" alt=""/></p>

<h3 id="toc_48">Step 12</h3>

<p>Now add the reflection of light from the sky. Paint with a mid sized brush generating the texture of the tongue in a very smooth way. Also add detail inside the mouth.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_079.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_080.jpg" alt=""/></p>

<h3 id="toc_49">Step 13</h3>

<p>With a fine, soft pink brush and slightly desaturated, paint reflections on gums following the contour, for the highest part of the volume and also in the more sunken, teeth also generate a reflection on the edge of the gum. Also increase the light from left in lips.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_080.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_081.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_082.jpg" alt=""/></p>

<h3 id="toc_50">Step 14</h3>

<p>Continue now with the shirt collar and then with the hat and its details. We modeled the subtle folds that are generated here, first with a darker color, and then illuminate with a color contaminated with the color of the sky, accentuating some edges of the light to simulate a subtly brilliant texture. Remark also the projection of the shadow on the skin.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_083.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_084.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_085.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_086.jpg" alt=""/></p>

<h3 id="toc_51">Step 15</h3>

<p>Always keep constant attention to the overall effect we are achieving, so we look away constantly evaluating the full image, and defining how we will progress with the painting.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_087.jpg" alt=""/></p>

<h3 id="toc_52">Step 16</h3>

<p>We continue with the arms, first his left arm. Model the wrinkles and define smaller and then larger volumes. Finally, contrast more with a darker tone.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_088.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_089.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_090.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_091.jpg" alt=""/></p>

<h3 id="toc_53">Step 17</h3>

<p>Paint his right arm inside the car, and then the glove, we contrast the tones a lot.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_092.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_093.jpg" alt=""/></p>

<h3 id="toc_54">Step 18</h3>

<p>Now add volume to the vest with its edge, adding subtle wrinkles, and contrast the shirt collar.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_094.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_095.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_096.jpg" alt=""/></p>

<h3 id="toc_55">Step 19</h3>

<p>Back to the steering wheel and paint chrome stands and edge reflecting the colors of the sky and the chassis of the car.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_098.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_099.jpg" alt=""/></p>

<h3 id="toc_56">Step 20</h3>

<p>Inside the car the light comes through the window creating a glow and projecting colors on the ceiling, supposedly than bounce off the character.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_100.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_101.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_102.jpg" alt=""/></p>

<h3 id="toc_57">Step 21</h3>

<p>We continue with the rabbit and its overall volume increasing the contrast, modeling. Adjust the light can be quite complex because of the position of these, and we want to create the effect that is very attached to the car, but we do not want to flatten the volume of the body.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_103.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_105.jpg" alt=""/></p>

<p>The ears are translucent, paint with a red and orange pretty saturated.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_106.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_107.jpg" alt=""/></p>

<h3 id="toc_58">Step 22</h3>

<p>Paint using a Brush in <strong>Multiply</strong> Blend mode with an orange color as the ground, contrasting entire volume, also paint the inside of the mouth defining volumes with enough brightness.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_108.jpg" alt=""/></p>

<h3 id="toc_59">Step 23</h3>

<p>We continue adding volume to the rubber edge of windows with a bright color, quite yellow. In the shadow areas, use the color of the sky, more purple.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_109.jpg" alt=""/></p>

<h3 id="toc_60">Step 24</h3>

<p>With a very light color, emphasize the light in chrome metals, using the Brush tool in <strong>Overlay</strong> Blend mode, painting in this way we get many shades.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_111.jpg" alt=""/></p>

<h3 id="toc_61">Step 25</h3>

<p>At this point, we consider that our elements have lost a lot of light, an alternative is to change the levels. We&#39;re going to <strong>Image &gt; Adjustments &gt; Levels ...</strong> and adjust as we see fit. In this case, we light the rabbit a little, but also the main character with all its elements, in the same way, layer by layer.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_112.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_113.jpg" alt=""/></p>

<h3 id="toc_62">Step 26</h3>

<p>Now the chassis of the car needs to be touched by the light of heaven in the shadow parts. Using the color purple, illuminate areas that reflect more light. Also hinted irregularities as dents near the rabbit, and witch the rabbit may have caused.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_114.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_115.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_116.jpg" alt=""/></p>

<h3 id="toc_63">Step 27</h3>

<p>Go back to the metal chrome and contrast a bit more, obscuring certain edges, we project some shadows, but also paint the colors they are close, than must to be reflected.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_117.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_118.jpg" alt=""/></p>

<h3 id="toc_64">Step 28</h3>

<p>In the car lights, first, hinted the effect of the glass with vertical and horizontal lines in a convex shape, then paint the shadows and the light bulb on.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_119.jpg" alt=""/></p>

<h3 id="toc_65">Step 29</h3>

<p>Then increase contrast and define a darker and saturated color, and also added some strong brightness which affects the texture of lines too.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_120.jpg" alt=""/></p>

<h3 id="toc_66">Step 30</h3>

<p>With a Brush in <strong>Overlay</strong> Blend mode and a bright color, incorporate a luminous effect and more shades.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_121.jpg" alt=""/></p>

<h3 id="toc_67">Step 31</h3>

<p>Now we detail the flashing light, very simple, just integrating well with the surrounding light.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_122.jpg" alt=""/></p>

<h3 id="toc_68">Step 32</h3>

<p>The side number of the car just requires a bit more shine because of its texture, like a brighter coat of paint. Just ensure that the character casts some shadows in this.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_123.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_124.jpg" alt=""/></p>

<p>Do not forget to always check the general integration.</p>

<h3 id="toc_69">Step 33</h3>

<p>The wheels must have the same purple light from the right, and receive on the left side the warm light from the ground. We let the tire-tread indefinite to give the sensation of speed. Define the chrome wheel-cover with dark colors because it is in a context of more darkness.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_125.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_126.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_127.jpg" alt=""/></p>

<h3 id="toc_70">Step 34</h3>

<p>Use the Brush in <strong>Overlay</strong> Blend mode, paint the clouds with a really smooth brush, but not too big, defining a little more what was already hinted, without adding much detail, only loosely defined and contrasting, so that sunlight feels strong.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_128.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_129.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_130.jpg" alt=""/></p>

<p>The side of the shade can be illuminate a little more with a blue light.</p>

<h3 id="toc_71">Step 35</h3>

<p>It is the turn of the horizon, shining a light so pretty and try not to define too the mountains, neither by contrast or by shape. I paint with a purple color not too saturated.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_131.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_132.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_133.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_134.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_135.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_136.jpg" alt=""/></p>

<h3 id="toc_72">Step 36</h3>

<p>On the ground, hint the form of small stones blurred by speed, define its position and shape, and then contrast.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_137.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_138.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_139.jpg" alt=""/></p>

<h2 id="toc_73">8. Cactus</h2>

<h3 id="toc_74">Step 1</h3>

<p>Add some cactus in the foreground and further back to seat more our composition and to create more diagonals that give more sense of speed.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_140.jpg" alt=""/></p>

<h3 id="toc_75">Step 2</h3>

<p>Make sure that the cactus in foreground receives enough light, and we define it with bright colors.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_141.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_142.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_143.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_144.jpg" alt=""/></p>

<h3 id="toc_76">Step 3</h3>

<p>Light bounces in the same plant and is illuminate by the leaf over. So too further back leaf receives the light from the ground.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_145.jpg" alt=""/></p>

<h3 id="toc_77">Step 4</h3>

<p>Draw thorns, the tips go in backward direction following the effect of velocity. We use a neutral purple color. Then integrate them with lights and shadows.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_146.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_147.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_148.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_149.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_150.jpg" alt=""/></p>

<p>At this point, the paint is pretty well balanced, then continue with the effect of dust...</p>

<h2 id="toc_78">9. Dust</h2>

<h3 id="toc_79">Step 1</h3>

<p>Select or generate a simple Brush, pretty blurred and with some scattering and noise, and we start first with a color fairly clear. We start from the base of the wheel, from the most compact until the most diffuse.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_brush_004.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_151.jpg" alt=""/></p>

<h3 id="toc_80">Step 2</h3>

<p>Continue with back of the car with very bright color because here the dust is directly exposed to sunlight.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_152.jpg" alt=""/></p>

<h3 id="toc_81">Step 3</h3>

<p>And then to give more depth to the effect of dust, with a darker color, paint some dust in shadows that contrast with the illuminated dust behind.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_153.jpg" alt=""/></p>

<h3 id="toc_82">Step 4</h3>

<p>To enhance the effect of velocity, add a bit of dust that comes from some points a little ahead and down the car, as it own vibration generate this.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_154.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_155.jpg" alt=""/></p>

<h2 id="toc_83">10. Rabbit Texture</h2>

<h3 id="toc_84">Step 1</h3>

<p>To paint the rabbit fur make a new layer above the base layer of the rabbit. We will configure a brush, starting from a brush with the shape of a hair we have drawn.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_156.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_157.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_158.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_159.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_160.jpg" alt=""/></p>

<h3 id="toc_85">Step 2</h3>

<p>Now paint following the shape of the rabbit, trying to make it look volumetric. Pick the skin colors and paint trying to make a subtle difference of color. In clearer areas, paint with a color slightly darker, and the darker parts paint with a slightly lighter color.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_161.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_162.jpg" alt=""/></p>

<p>Constantly change the orientation of the brush to suit the shapes and the direction that the hair should have. At this stage we do not worry about the edge. We must practice the effect because it takes time to pick up the rhythm.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_163.jpg" alt=""/></p>

<h3 id="toc_86">Step 3</h3>

<p>In dark areas take advantage of highlighting the hair, without excess in quantity.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_164.jpg" alt=""/></p>

<h3 id="toc_87">Step 4</h3>

<p>Now paint the edges. We make a Normal new layer above all layers of the rabbit. Decrease the scattering intensity of the brush and paint the edge to make it look soft and irregular.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_165.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_166.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_167.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_168.jpg" alt=""/></p>

<p>Paint the hair and try to make it look affected by the wind. We can change the direction of the brush as often as necessary.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_169.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_170.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_171.jpg" alt=""/></p>

<p>Emphasize more enlightened hair over the darker areas.</p>

<h3 id="toc_88">Step 5</h3>

<p>We pause a moment the hair painting to go to the eyes and give a little more light to these, because by enlightened the hair, we can see that they need much more light. Use Levels (<strong>CMD/CTRL + L</strong>) and set the required light.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_172.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_173.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_174.jpg" alt=""/></p>

<h3 id="toc_89">Step 6</h3>

<p>We return to the hair and give the finishing touches with a pretty thin brush, painting longest hairs at certain specific places, such as the base of the ears, on the tip of the legs and elsewhere, to give it a more natural look to the fur.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_175.jpg" alt=""/></p>

<h3 id="toc_90">Step 7</h3>

<p>With the same brush can give definition to the tail, drawing hairs even longer.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_176.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_177.jpg" alt=""/></p>

<h3 id="toc_91">Step 8</h3>

<p>Finally apply a little purple-blue color of the sky, in the eyes and in the fur.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_178.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_179.jpg" alt=""/></p>

<h2 id="toc_92">11. Final Details</h2>

<h3 id="toc_93">Step 1</h3>

<p>To make the color details of the vest, make a layer over the layer containing the vest. Draw the shape of the design to use it as a mask. Hide the layer and make selection (<strong>CMD/CTRL + click</strong>) on the layer.<br/>
Now, in the layer of the vest, copy this selection to use the volume and paint. We&#39;re going to <strong>Layer &gt; New &gt; Layer via Cut</strong>, or <strong>CMD/CTRL + Shift + J</strong>, and paste (<strong>CMD/CTRL + V</strong>). Then adjust Levels (<strong>CMD/CTRL + L</strong>) to lighten the tone a bit.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_180.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_181.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_182.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_183.jpg" alt=""/></p>

<h3 id="toc_94">Step 2</h3>

<p>Adjust the color with Hue/Saturation (<strong>CMD/CTRL + U</strong>)</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_184.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_185.jpg" alt=""/></p>

<h3 id="toc_95">Step 3</h3>

<p>With a more organic brush on a new layer, draw the line detail. Finally, lock transparent pixels of the layer.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_186.jpg" alt=""/></p>

<h3 id="toc_96">Step 4</h3>

<p>Then integrate painting the lights and shadows of the line.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_187.jpg" alt=""/></p>

<h3 id="toc_97">Step 5</h3>

<p>Continue with the color and contrast settings of our character. Illuminate the glove, hat and elbow with the light of heaven. We added some orange tones in the arm. More contrasted also in the armpit area.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_188.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_189.jpg" alt=""/></p>

<h3 id="toc_98">Step 6</h3>

<p>In the nose apply a blue glow with a pores texture. Also with the same color, illuminate the cheek and wrinkles.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_190.jpg" alt=""/></p>

<h3 id="toc_99">Step 7</h3>

<p>In some places we need than the light exceeds the edges of character, making it less defined.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_191.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_192.jpg" alt=""/></p>

<h3 id="toc_100">Step 8</h3>

<p>In the mustache will finish it with more contrast, defining more the texture and adding stronger lights.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_193.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_194.jpg" alt=""/></p>

<h3 id="toc_101">Step 9</h3>

<p>The interior of the car still needs more light. With the brush in <strong>Overlay</strong> Blend Mode, paint the edge of the window on the left and the right corner, which receive direct sunlight.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_195.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_196.jpg" alt=""/></p>

<h3 id="toc_102">Step 10</h3>

<p>To paint the windshield, make a new layer above the layer with the inside parts of the car, select the entire area and mask the layer. Then paint with the yellow light of the sun and also with a little color purple sky.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_197.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_198.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_199.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_200.jpg" alt=""/></p>

<h3 id="toc_103">Step 11</h3>

<p>With a fine Brush, make concentric lines to simulate the effect of glass texture, and the same in the mirror.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_201.jpg" alt=""/></p>

<h3 id="toc_104">Step 12</h3>

<p>Add some rivets on the door of the car, define more the dents and give a small volume in the clay-cap contour.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_202.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_205.jpg" alt=""/></p>

<h3 id="toc_105">Step 13</h3>

<p>Now add a little rust. With a brush type &quot;hairy paintbrush&quot; in <strong>Multiply</strong> blend mode, and a yellow color, suggest some blasting pint where appropriate and especially at the edges, as well as on the rivets. Selected parts where necessary, highlighting the parts of the car as the door.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_brush_005.jpg" alt=""/></p>

<p><img src="https://cdn.tutsplus.com/psd.tutsplus.com/uploads/2013/08/0902_Racer_racer_206.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_207.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_208.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_209.jpg" alt=""/></p>

<h3 id="toc_106">Step 14</h3>

<p>To add the finishing touches, give it a scraping effect at the number of the car. Select the layer of number &quot;3&quot; and the layer of red circle, group them (<strong>CMD/CTRL + G</strong>) and then make a Layer Mask by pressing the bottom of the layers palette, <strong>Add layer mask</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_210.jpg" alt=""/></p>

<h3 id="toc_107">Step 15</h3>

<p>Using the same Brush with which we paint the rust, painting on the mask with irregular horizontal lines, as if the paint was scratched.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_211.jpg" alt=""/></p>

<h3 id="toc_108">Step 16</h3>

<p>We can freely consider all adjustments necessary to integrate the elements to each other and the light in each of them. But at this point we can say that the image is finished. But...</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_212.jpg" alt=""/></p>

<h2 id="toc_109">12. Noise</h2>

<p>We could leave the illustration as it is, but now we use some tricks to give it a more organic texture, enhancing the details and the general definition and give a little more drama.</p>

<h3 id="toc_110">Step 1</h3>

<p>Create a new layer and fill it with a neutral gray. We&#39;re going to <strong>Filter &gt; Noise &gt; Add Noise ...</strong> and add some moderate noise. Then go to <strong>Filter &gt; Noise &gt; Median ...</strong> and use the minimum radius for a subtle blur.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_213.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_214.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_215.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_216.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_217.jpg" alt=""/></p>

<h3 id="toc_111">Step 2</h3>

<p>Now change the Layer Blend Mode to <strong>Soft Light</strong> and the opacity of the layer. Thus we get finishing with a more irregular and organic overall texture, more closer to painting.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_218.jpg" alt=""/></p>

<h3 id="toc_112">Step 3</h3>

<p>Group all layers in a folder (<strong>CMD/CTRL + g</strong>), we call it &quot;ALL&quot;, make a copy dragging it to the Create a New Layer icon, and then merge it (<strong>CMD/CTRL + E</strong>)</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_219.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_220.jpg" alt=""/></p>

<h2 id="toc_113">13. Definition</h2>

<h3 id="toc_114">Step 1</h3>

<p>Now go to <strong>Filter &gt; Other &gt; High Pass ...</strong> and give it a subtle radius.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_221.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_222.jpg" alt=""/></p>

<h3 id="toc_115">Step 2</h3>

<p>Set the Layer Blend Mode in <strong>Soft Light</strong></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_223.jpg" alt=""/></p>

<h2 id="toc_116">13. Rays of Light</h2>

<p>Add light rays coming from the sun.</p>

<h3 id="toc_117">Step 1</h3>

<p>Create a new layer and with the lasso tool, make a selection shaped like a ray of light. Apply a blur to the selection, go to <strong>Select &gt; Modify &gt; Feather...</strong> and define a range of 20 pixels. Then fill it with <strong>Alt + Backspace</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_224.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_225.jpg" alt=""/></p>

<h3 id="toc_118">Step 2</h3>

<p>Change the Layer Blend Mode to <strong>Overlay</strong>, then down the opacity of the layer to 30% and duplicate it. Then transform it with <strong>CMD/CTRL + T</strong>, distort the shape maintaining the position of the left of the sun. Repeated several times to make more rays with different distortions and intensity.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_226.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_227.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_228.jpg" alt=""/></p>

<h3 id="toc_119">Step 3</h3>

<p>Then group all the layers of the light rays and add a <strong>Layer mask</strong>.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_229.jpg" alt=""/></p>

<h3 id="toc_120">Step 4</h3>

<p>With the Gradient tool and over the mask apply a gradient from left to right.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_230.jpg" alt=""/></p>

<p>The result is subtle but that&#39;s the idea, integrating the elements much more with the use of light.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_231.jpg" alt=""/></p>

<h2 id="toc_121">14. Glow and Contrast</h2>

<p>Finally, a bit of drama to the image.</p>

<h3 id="toc_122">Step 1</h3>

<p>Make a copy of the entire image, select all with <strong>CMD/CTRL + A</strong> and make a copy attached, going to <strong>Edit &gt; Copy Merged + C, or CMD/CTRL + Shift + C</strong>. Then paste <strong>CMD/CTRL + V</strong> above all layer.<br/>
Now desaturate the layer <strong>CMD/CTRL + Shift + U</strong></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_232.jpg" alt=""/></p>

<h3 id="toc_123">Step 2</h3>

<p>Increases contrast enough, and apply a blur <strong>Filter &gt; Blur &gt; Gaussian Blur ...</strong></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_233.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_234.jpg" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_234.jpg" alt=""/></p>

<p>Advertisement</p>

<h3 id="toc_124">Step 3</h3>

<p>Change the Layer Blend Mode to <strong>Overlay</strong> and the opacity of the layer to discretion.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_racer_236.jpg" alt=""/></p>

<h2 id="toc_125">Conclusion</h2>

<p>In this tutorial, we showed you how to create a high impact caricature illustration in Photoshop using many advanced techniques. In the process, we showed you how to set up your document, draw your lines, block in your colors, and how to add the details. The result is a stunning piece of digital art. We hope that you enjoyed this tutorial and can use the techniques explained in this tutorial to help further your own digital art.</p>

<p><a href="http://cdn.tutsplus.com/psd.tutsplus.com/uploads/2013/08/final_large.jpg"><img src="http://of832oeqz.bkt.clouddn.com/0902_Racer_final.jpg" alt=""/></a></p>

<p><br/></p>

<p>This tutorial includes a stunning speed painting video. You can watch it below.</p>

<p><a href="https://www.youtube.com/watch?v=XRDPONiDFZ8&amp;feature=youtu.be">https://www.youtube.com/watch?v=XRDPONiDFZ8&amp;feature=youtu.be</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C4D制作流动的线条]]></title>
    <link href="glen.pub/14803234664452.html"/>
    <updated>2016-11-28T16:57:46+08:00</updated>
    <id>glen.pub/14803234664452.html</id>
    <content type="html"><![CDATA[
<p>来自白无常的C4D简单教程</p>

<span id="more"></span><!-- more -->

<p><img src="http://of832oeqz.bkt.clouddn.com/02ed64576b9cb00000018c1bbd793e.png" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/02cf32576b9cb40000012e7ecccf8a.png" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/025e3e576b9cb80000012e7e10fba6.png" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/026008576b9cba0000018c1b1347c2.png" alt=""/></p>

<p><br /></p>

<p>来自<a href="http://www.zcool.com.cn/article/ZNDE1MjI0.html#">白无常电商设计</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working with SVG Paths in Framer]]></title>
    <link href="glen.pub/14802608380583.html"/>
    <updated>2016-11-27T23:33:58+08:00</updated>
    <id>glen.pub/14802608380583.html</id>
    <content type="html"><![CDATA[
<p>Scalable Vector Graphics (SVG) have been around for 14 years, but for many they’re still a mystery. </p>

<p>可扩展向量图形（SVG）已经存在了14年，但对许多人来说，它们仍然是一个谜。</p>

<p>This article and accompanying tools aims to demystify working with SVGs and to make it easy for anyone to render and animate beautiful SVG graphs, icons, or illustrations inside Framer Studio.</p>

<p>这篇文章和附带的工具旨在解释使用SVGs，并使任何人容易渲染和动画美丽的SVG图形，图标或插图里面的Framer工作室。</p>

<span id="more"></span><!-- more -->

<p><img src="http://of832oeqz.bkt.clouddn.com/1*D4xsUkP2YOskmq92NbZ8mg.gif" alt=""/></p>

<p>Let’s say we want to animate a simple line chart. </p>

<p>让我们假设我们要对一个简单的折线图进行动画处理。</p>

<p>We might export a graphic from Sketch, but then we’d have to mess with masks, which don’t play nicely with curves or more complex shapes, and we’d have a raster image that won’t scale to retina screens. Enter <strong>SVG paths</strong>. </p>

<p>我们可以从Sketch导出图形，但是我们不得不混淆使用曲线或更复杂形状的面具，我们会得到一个不能缩放到视网膜屏幕的光栅图像。 输入SVG路径。</p>

<p>They’re vector by definition, and have rich stroke properties that we can use for animation. We’ll make the example on the left.</p>

<p>它们是向量的定义，并有丰富的笔画属性，我们可以用于动画。 我们将在左边做例子。</p>

<p><br/></p>

<h2 id="toc_0">Getting SVGs into Framer Studio</h2>

<p>Sketch fortunately has great support for SVGs, both in the app and as a part of their developer plugins. </p>

<p>Sketch幸运地对SVG有很大的支持，无论是在应用程序还是作为其开发人员插件的一部分。</p>

<p>I made a simple plugin that will take any path and give you nicely formatted SVG data that we can then use in Framer. </p>

<p>我做了一个简单的插件，将采取任何路径，并给你格式好的SVG数据，然后我们可以使用Framer。</p>

<p>Just select a layer and run the plugin; the SVG info we need is copied to your clipboard.</p>

<p>只需选择一个图层并运行插件; 我们需要的SVG信息被复制到剪贴板。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*ynN0mb55HGANVIW0mLoq6w.png" alt=""/></p>

<p>That’s all you have to do in Sketch; now open up Framer Studio. </p>

<p>这就是你在Sketch中要做的一切; 现在打开Framer Studio。</p>

<p>I wrote an SVGLayer module that makes working with SVG’s as simple as copy and paste. </p>

<p>我写了一个SVGLayer模块，使SVG的工作与复制和粘贴一样简单</p>

<p>Go ahead and <a href="http://framerjs.com/docs/#modules.modules">import the module</a> like so (making sure it’s in the ‘modules’ folder of your Framer project):</p>

<p>继续导入模块，这样（确保它在您的Framer项目的&#39;modules&#39;文件夹）：</p>

<p><code>SVGLayer = require &quot;SVGLayer&quot;</code></p>

<p>The module extends the Layer class, so to create a new SVG layer, type:</p>

<p>模块扩展了Layer类，因此要创建一个新的SVG图层，请键入：</p>

<p><code>path = new SVGLayer.create</code></p>

<p>Finally, paste the code that the Sketch plugin copied for you under that line, and voila! A working SVG layer in just 6 lines of code!</p>

<p>最后，粘贴Sketch插件在该行下复制的代码，然后瞧！ 一个工作的SVG层只需6行代码！</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*cp9dYmHtTQMrVE90plw_bw.png" alt=""/></p>

<p><br/></p>

<h2 id="toc_1">Animating SVG Paths</h2>

<p>To animate the SVG Path you just created, simply call the animatePath() function:</p>

<p>要为刚刚创建的SVG路径设置动画，只需调用animatePath（）函数：</p>

<p><code>path.animatePath()</code></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*UtrUHz78qJ2oAk_8TQ1nTQ.gif" alt=""/></p>

<p>By default, this will animate your curve from start to finish. You can pass in optional parameters (curve, time, and direction) like so:</p>

<p>默认情况下，这将动画你的曲线从开始到完成。 您可以传递可选参数（曲线，时间和方向），如下所示：</p>

<pre><code>path.animatePath
 curve: “spring(45,15,0)”
 direction: “backward”
</code></pre>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*ewWmCJe4gPm0-vvqK_vreA.gif" alt=""/></p>

<p>That’s it!</p>

<p>Since this module extenders the Layer class, you can set all layer properties as you normally would. You can have as many SVG layers as you want, allowing you to make intricate animations like this:</p>

<p>由于此模块扩展了Layer类，因此您可以像平常一样设置所有图层属性。 您可以拥有尽可能多的SVG图层，允许你做这样复杂的动画：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*g6nnQEaBOd-haAfdNj5SKA.gif" alt=""/></p>

<p>Click below to grab the Framer module and Sketch plugin to get started with your own SVG paths!</p>

<p>点击下面获取Framer模块和Sketch插件，开始使用自己的SVG路径！</p>

<p><a href="https://github.com/joshpuckett/FramerModules"><img src="http://of832oeqz.bkt.clouddn.com/1*IdZj5ZzY-s0YipFnCcRE-A.png" alt=""/></a></p>

<p><br/></p>

<h2 id="toc_2">Behind the scenes</h2>

<p>First the bad parts: animating SVGs is still a little less than ideal; it’s essentially a hack. </p>

<p>首先，坏的部分：动画SVGs仍然略小于理想; 它本质上是一个黑客</p>

<p>This method, while clever, relies on changing the <em>perspective</em> property of the layer. </p>

<p>这个方法虽然聪明，但依赖于改变图层的透视属性。</p>

<p>While this is very rarely used, there might be some cases where modifying that property on an SVG layer breaks the out of box behavior of this module. </p>

<p>虽然这是很少使用，可能有一些情况下，修改SVG图层上的属性打破了这个模块的箱外行为。</p>

<p>It also uses layer states to drive the animation.</p>

<p>它还使用层状态来驱动动画。</p>

<p><br /></p>

<h3 id="toc_3">How SVG paths work</h3>

<p>SVG path elements have several stroke properties. These are what we manipulate to animate a path.</p>

<p>SVG路径元素具有多个笔触属性。 这些是我们操纵的动画路径。</p>

<pre><code>stroke //The color of the stroke
stroke-width //How thick the stroke is
stroke-linecap //Round, square, etc
stroke-dasharray //Dash length for the stroke
stroke-dashoffset //Offset for when the stroke begins
</code></pre>

<p>For any SVG layer, setting <em>stroke-dasharray</em> to the length of the path creates one dash that is, obviously, the length of path. </p>

<p>对于任何SVG图层，将stroke-dasharray设置为路径长度创建一个破折号，显然是路径的长度。</p>

<p>If the <em>stroke-dashoffset</em> is 0, the dash begins at the start of the stroke and follows the path to the end.</p>

<p>如果stroke-dashoffset为0，则破折号从笔画的开始处开始，并沿着到结束的路径。</p>

<p><br/></p>

<p>If you set the offset to the length of the path, it’s effectively masked, and moved to just before the beginning of the path. </p>

<p>如果将偏移量设置为路径的长度，它将被有效地屏蔽，并移动到路径开始之前。</p>

<p>Here’s an example where <em>stroke-dashoffset</em> is set to the path length - 20 pixels, which shows just the first 20 pixels of the stroke:</p>

<p>这里有一个例子，其中stroke-dashoffset设置为路径长度 - 20像素，它只显示笔触的前20个像素：</p>

<p><code>path.style[‘stroke-dashoffset’] = path.pathLength - 20</code></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*8Zv7Cr1eSbMHtTXa1AuzqQ.png" alt=""/></p>

<p>You can call <em>layer.pathLength</em> at any time to get the length of the SVG path.</p>

<p>您可以随时调用layer.pathLength以获取SVG路径的长度。</p>

<p><br/></p>

<h3 id="toc_4">Animation</h3>

<p>So here’s the magic to animate the stroke, from the module.</p>

<p>所以这里的神奇的动画的笔画，从模块。</p>

<pre><code>@.on “change:perspective”, -&gt;
  if [@direction](http://twitter.com/direction &quot;Twitter profile for @direction&quot;) == “forward”
    dashOffset = Utils.modulate(@.perspective, [0, 1], [pathLength, 0])
    @.style[‘stroke-dashoffset’] = dashOffset
</code></pre>

<p>In English: whenever the layer’s <em>perspective</em> property changes, if the direction is forward, map the value of <em>perspective</em> between 0 and 1 to the corresponding number between <em>pathLength</em> and 0, and then set the SVG ‘<em>stroke-dashoffset</em>’ of the layer’s path to that.</p>

<p>在英语中：每当图层的透视属性改变时，如果方向是向前的，将透视的值在0和1之间映射到pathLength和0之间的相应数值，然后将图层路径的SVG&#39;stroke-dashoffset&#39;设置为 。</p>

<p><br/></p>

<p>For example, of the pathLength was 100, and the <em>perspective</em> value was 0.5, then <em>dashOffset</em> would be 50.</p>

<p>例如，pathLength为100，透视值为0.5，则dashOffset将为50。</p>

<p><br/></p>

<p>By default all SVGLayers have <em>perspective</em> set to 0, and are created with a second state where <em>perspective</em> is 1. Utilizing layer states, and transitioning between them, allows us to get nice animation curves to manually drive the path’s stroke offset to create our animation.</p>

<p>默认情况下，所有SVGLayers的透视设置为0，并创建第二个状态透视是1.利用层状态，并在它们之间转换，允许我们获得漂亮的动画曲线，手动驱动路径的笔画偏移量来创建我们的动画。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[代码集合]]></title>
    <link href="glen.pub/14800413779366.html"/>
    <updated>2016-11-25T10:36:17+08:00</updated>
    <id>glen.pub/14800413779366.html</id>
    <content type="html"><![CDATA[
<p>使用 Bootstrap 按钮。任何带有 class .btn 的元素都会继承圆角灰色按钮的默认外观。</p>

<p>console.log - 向web控制台输出一条消息</p>

<span id="more"></span><!-- more -->

<p><br /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Developing your eye for design]]></title>
    <link href="glen.pub/14796066360966.html"/>
    <updated>2016-11-20T09:50:36+08:00</updated>
    <id>glen.pub/14796066360966.html</id>
    <content type="html"><![CDATA[
<p>Looking back to when I first started designing, if there was a single thing I could go back and tell myself, that would be to <em>train my design eye,</em> my ability to critique and identify good design.</p>

<span id="more"></span><!-- more -->

<p>A good design eye oftentimes exceeds the ability of the designer. This is not necessarily a bad thing. In fact, this means that your eye can help you discern improvements in your design over time. By developing your taste and ability to identify strengths and weaknesses in designs, you end up setting a high bar for your work.</p>

<p>So then the question is, how <em>do</em> you develop your eye?</p>

<blockquote>
<p>By developing your taste and ability to identify strengths and weaknesses in designs, you end up setting a high bar for your work.</p>
</blockquote>

<p><br/></p>

<h2 id="toc_0">A simple strategy</h2>

<p>Here are some things that you can do to train your eye.</p>

<p><br/></p>

<h3 id="toc_1">Browse design inspiration</h3>

<p>Keep a folder and save designs that inspire you over the course of the week. At the end of the week, look through your folder and ask yourself some of these questions. You don’t have to answer each one of those questions for every design, but do keep them in the back of your mind.</p>

<p><br/></p>

<ul>
<li>What originally intrigued you about this design? Are you still drawn to it the same way as before?</li>
<li>What is the purpose of the design? How has this affected the design?</li>
<li>How does this design make you feel?</li>
<li>How does the type work with the design?</li>
<li>What could you improve on in this design?</li>
</ul>

<p><br/></p>

<p>For interface design you can look at sites like <a href="https://dribbble.com/">Dribbble</a>, <a href="http://www.behance.com/">Behance</a>, and <a href="http://www.awwwards.com/">Awwwards</a>. I use these sites as a way to see how other designers have solved specific problems and to keep up to date with popular design patterns.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*87tYUTh66fNQ5IFtptcbWg.jpeg" alt=""/></p>

<p>Looking at only interface designs will put you in an insular design environment. You should also look at other mediums such as posters, magazines, and books. Often times, the best examples of typography and grid systems can be found in mediums outside of the one you normally design for.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*xw9DXnJ2jfXdSl6NtKovQQ.jpeg" alt=""/></p>

<p>Also consider studying the designs of other cultures. Take into consideration cultural context and how it influences designs. This will make you a more diverse designer by providing you with another lens for making critical judgement on designs.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*YZwH9ud1aN5RV8ktiDf0zw.png" alt=""/></p>

<p><br/></p>

<h3 id="toc_2">Practice looking</h3>

<p>While there are tons of directed exercises that you can do to train your eye, just spending a couple extra minutes a day observing and trying to understand the world around you goes a long way.</p>

<p>Throughout the day, instead of staring at your phone — something that I’m guilty of doing — look at the design of things around you like the buildings you pass by, the signs that direct you, and nature. When using the world around you as a tool for developing your eye, here are a few things to keep in mind.</p>

<p><br/></p>

<ul>
<li>Figure out what catches your eye and why. Design is all about first impressions.</li>
<li>What sort of visual hierarchy do you see around you?</li>
<li>How do you interact with the designs around you?</li>
<li>What colors do you see and how do they work together?</li>
</ul>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*JWzqJLv92GEppZWc41PN4g.jpeg" alt=""/></p>

<p>One thing that I’ve found useful for developing my eye is photography. Photography forces you to <em>look,</em> to make active meaning of the world. A good photograph contains the same elements that make up a good design. In particular it requires thoughtful composition which includes creation of visual balance, use of space, and consideration for color.</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/1*p2yVMfNvID1LW7y0mRsUHA.jpeg" alt=""/></p>

<p><br/></p>

<h3 id="toc_3">Create a feedback loop</h3>

<p>Finally, create a feedback loop to accelerate your growth. As often as you can, ask other designers for feedback on your work. Seasoned designers, in particular, will be able to point out flaws in your design that you would normally miss. Once issues in your design have been pointed out once, they will be much easier to identify in the future.</p>

<blockquote>
<p>Create a feedback loop to accelerate your growth</p>
</blockquote>

<p><br/></p>

<h2 id="toc_4">Conclusion</h2>

<p>If you want to improve your designs, first improve your eye. And remember, <em>anyone</em> can develop an eye for design. There are many other ways to develop your eye; feel free to add a note or <a href="https://twitter.com/JonathanZWhite">tweet</a> to me to let me know how you do it.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mui-窗口管理]]></title>
    <link href="glen.pub/14792905621042.html"/>
    <updated>2016-11-16T18:02:42+08:00</updated>
    <id>glen.pub/14792905621042.html</id>
    <content type="html"><![CDATA[
<p>介绍使用页面初始化、创建子页面、打开新页面、关闭页面等功能的使用</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">页面初始化</h2>

<p>在app开发中，若要使用<a href="http://www.html5plus.org/#specification">HTML5+扩展api</a>，必须等plusready事件发生后才能正常使用，mui将该事件封装成了<code>mui.plusReady()</code>方法，涉及到HTML5+的api，建议都写在mui.plusReady方法中。如下为打印当前页面URL的示例：</p>

<pre><code>mui.plusReady(function(){
     console.log(&quot;当前页面URL：&quot;+plus.webview.currentWebview().getURL());
});
</code></pre>

<p><br /></p>

<h2 id="toc_1">扩展阅读</h2>

<p><a href="http://dev.dcloud.net.cn/mui/util/#init"><code>mui.init()</code></a>    mui插件初始化</p>

<p><a href="javascript:void(0);"><code>mui.ready()</code></a>    当DOM准备就绪时，指定一个函数来执行。</p>

<p>代码块激活字符:  <code>minit</code>  </p>

<p><br /></p>

<h2 id="toc_2">创建子页面</h2>

<p>在mobile app开发过程中，经常遇到卡头卡尾的页面，此时若使用局部滚动，在android手机上会出现滚动不流畅的问题； mui的解决思路是：将需要滚动的区域通过单独的webview实现，完全使用原生滚动。具体做法则是：将目标页面分解为主页面和内容页面，主页面显示卡头卡尾区域，比如顶部导航、底部选项卡等；内容页面显示具体需要滚动的内容，然后在主页面中调用mui.init方法初始化内容页面。</p>

<pre><code>mui.init({
    subpages:[{
      url:your-subpage-url,//子页面HTML地址，支持本地地址和网络地址
      id:your-subpage-id,//子页面标志
      styles:{
        top:subpage-top-position,//子页面顶部位置
        bottom:subpage-bottom-position,//子页面底部位置
        width:subpage-width,//子页面宽度，默认为100%
        height:subpage-height,//子页面高度，默认为100%
        ......
      },
      extras:{}//额外扩展参数
    }]
  });
</code></pre>

<p><strong>参数说明：</strong>styles表示窗口属性，参考<a href="http://www.dcloud.io/docs/api/zh_cn/webview.shtml#plus.webview.WebviewStyle">5+规范中的WebviewStyle</a>；特别注意，height和width两个属性,即使不设置，也默认按100%计算；因此若设置了top值为非&quot;0px&quot;的情况，建议同时设置bottom值，否则5+ runtime根据高度100%计算，可能会造成页面真实底部位置超出屏幕范围的情况；left、right同理。</p>

<p><strong>示例：</strong>Hello mui的首页其实就是index.html加list.html合并而成的，如下：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/hello-mui-index.png" alt="hello-mui-index"/></p>

<p>index.html</p>

<p>+</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/hello-mui-list.png" alt="hello-mui-list"/></p>

<p>list.html</p>

<h1 id="toc_3"></h1>

<p><img src="http://of832oeqz.bkt.clouddn.com/hello-mui-merge.png" alt="hello-mui-merge"/></p>

<p>合并后的首页</p>

<p>index.html的作用就是显示固定导航，list.html显示具体列表内容，列表项的滚动是在list.html所在webview中使用原生滚动，既保证了滚动条不会穿透顶部导航，符合app的体验，也保证了列表流畅滚动，解决了区域滚动卡顿的问题。 list.html就是index.html的子页面，创建代码比较简单，如下：</p>

<pre><code>mui.init({
    subpages:[{
      url:&#39;list.html&#39;,
      id:&#39;list.html&#39;,
      styles:{
        top:&#39;45px&#39;,//mui标题栏默认高度为45px；
        bottom:&#39;0px&#39;//默认为0px，可不定义；
      }
    }]
  });
</code></pre>

<h2 id="toc_4">扩展阅读</h2>

<p>代码块激活字符: <code>misubpage</code>   </p>

<p><br /></p>

<h2 id="toc_5">打开新页面</h2>

<p>做web app，一个无法避开的问题就是转场动画；web是基于链接构建的，从一个页面点击链接跳转到另一个页面，如果通过有刷新的打开方式，用户要面对一个空白的页面等待；如果通过无刷新的方式，用Javascript移入DOM节点（常见的SPA解决方案），会碰到很高的性能挑战：DOM节点繁多，页面太大，转场动画不流畅甚至导致浏览器崩溃； mui的解决思路是：单webview只承载单个页面的dom，减少dom层级及页面大小；页面切换使用原生动画，将最耗性能的部分交给原生实现.</p>

<pre><code>mui.openWindow({
    url:new-page-url,
    id:new-page-id,
    styles:{
      top:newpage-top-position,//新页面顶部位置
      bottom:newage-bottom-position,//新页面底部位置
      width:newpage-width,//新页面宽度，默认为100%
      height:newpage-height,//新页面高度，默认为100%
      ......
    },
    extras:{
      .....//自定义扩展参数，可以用来处理页面间传值
    },
    createNew:false,//是否重复创建同样id的webview，默认为false:不重复创建，直接显示
    show:{
      autoShow:true,//页面loaded事件发生后自动显示，默认为true
      aniShow:animationType,//页面显示动画，默认为”slide-in-right“；
      duration:animationTime//页面动画持续时间，Android平台默认100毫秒，iOS平台默认200毫秒；
    },
    waiting:{
      autoShow:true,//自动显示等待框，默认为true
      title:&#39;正在加载...&#39;,//等待对话框上显示的提示内容
      options:{
        width:waiting-dialog-widht,//等待框背景区域宽度，默认根据内容自动计算合适宽度
        height:waiting-dialog-height,//等待框背景区域高度，默认根据内容自动计算合适高度
        ......
      }
    }
})
</code></pre>

<p><strong>参数：</strong></p>

<ul>
<li><p><code>styles</code></p>

<p>窗口参数，参考<a href="http://www.dcloud.io/docs/api/zh_cn/webview.shtml#plus.webview.WebviewStyle">5+规范中的WebviewStyle</a>；特别注意，height和width两个属性,即使不设置，也默认按100%计算；因此若设置了top值为非&quot;0px&quot;的情况，建议同时设置bottom值，否则5+ runtime根据高度100%计算，可能会造成页面真实底部位置超出屏幕范围的情况；left、right同理。</p></li>
<li><p><code>extras</code></p>

<p>新窗口的额外扩展参数，可用来处理页面间传值；例如：</p>

<pre><code>var webview = mui.openWindow({
    url:&#39;info.html&#39;,
    extras:{
        name:&#39;mui&#39;  //扩展参数
    }
});
console.log(webview.name);//输出mui字符串
</code></pre>

<p><strong>注意：</strong>扩展参数仅在打开新窗口时有效，若目标窗口为预加载页面，则通过mui.openWindow方法打开时传递的extras参数无效。</p></li>
<li><p><code>createNew</code></p>

<p>是否重复创建相同id的webview；</p>

<p>为优化性能、避免app中重复创建webview，mui v1.7.0开始增加createNew参数，默认为false；判断逻辑如下：</p>

<ul>
<li><p>createNew参数为为true，则不判断重复，每次都新建webview；</p></li>
<li><p>createNew参数为为fasle，则先查找当前App中是否已存在同样id的webview，若存在则直接显示；否则新创建并根据show参数执行显示逻辑；</p></li>
</ul>

<p><strong>注意</strong>：plusReady事件仅在webview首次创建时触发，使用<code>mui.openWindow</code>方法多次打开已存在的同样id的webview时，是不会重复触发plusReady事件的； 因此若业务写在plusReady事件中，可能会出现执行结果和预期不一致的情况；此时可通过<a href="http://dev.dcloud.net.cn/mui/event/#customevent">自定义事件</a>触发； 案例参考：<a href="http://ask.dcloud.net.cn/question/6514">mui.plusReady有时会失效</a>;</p></li>
<li><p><code>show</code></p>

<p>窗口显示控制参数，具体参数如下：</p>

<ul>
<li><p>autoShow：目标窗口loaded事件发生后，是否自动显示，默认为true；若为false，则仅创建但不显示webview；若目标页面为预加载页面，则该参数无效；</p></li>
<li><p>aniShow表示页面显示动画，比如从右侧划入、从下侧划入等，具体可参考<a href="http://www.dcloud.io/docs/api/zh_cn/webview.shtml#plus.webview.AnimationTypeShow">5+规范中的AnimationTypeShow</a></p></li>
<li><p>duration：显示Webview窗口动画的持续时间，单位为ms</p></li>
</ul></li>
<li><p><code>waiting</code></p>

<p>系统等待框参数</p>

<p>mui框架在打开新页面时等待框的处理逻辑为：</p>

<p>显示等待框--&gt;创建目标页面webview--&gt;目标页面loaded事件发生--&gt;关闭等待框；</p>

<p>因此，只有当新页面为新创建页面（webview）时，会显示等待框，否则若为预加载好的页面，则直接显示目标页面，不会显示等待框。waiting中的具体参数：</p>

<ul>
<li><p>autoShow：是否自动显示等待框，默认为true；若为false，则不显示等待框；注意：若waiting框的autoShow为true，但目标页面不自动显示，则需在目标页面中通过如下代码关闭等待框：<code>plus.nativeUI.closeWaiting();</code></p></li>
<li><p>title：等待框上的提示文字</p></li>
<li><p>options表示等待框显示参数，比如宽高、背景色、提示文字颜色等，具体可参考<a href="http://www.dcloud.io/docs/api/zh_cn/nativeUI.shtml#plus.nativeUI.WaitingOption">5+规范中的WaitingOption</a></p></li>
</ul></li>
</ul>

<p><strong>示例1：</strong>Hello mui中，点击首页右上角的图标，会打开关于页面，实现代码如下：</p>

<pre><code>//tap为mui封装的单击事件，可参考手势事件章节
document.getElementById(&#39;info&#39;).addEventListener(&#39;tap&#39;, function() {
  //打开关于页面
  mui.openWindow({
    url: &#39;examples/info.html&#39;, 
    id:&#39;info&#39;
  });
});
</code></pre>

<p>因没有传入styles参数，故默认全屏显示；也没有传入show参数，故使用slide-in-right动画，新页面从右侧滑入。</p>

<p><strong>示例2：</strong>从A页面打开B页面，B页面为一个需要从服务端加载的列表页面，若在B页面loaded事件发生时就将其显示出来，因服务器数据尚未加载完毕，列表页面为空，用户体验不好；可通过如下方式改善用户体验（最好的用户体验应该是通过<a href="http://dev.dcloud.net.cn/mui/window/#preload">预加载</a>的方式）：第一步，B页面loaded事件发生后，不自动显示；</p>

<pre><code>//A页面中打开B页面，设置show的autoShow为false，则B页面在其loaded事件发生后，不会自动显示；
mui.openWindow({
    url: &#39;B.html&#39;, 
    show:{
      autoShow:false
    }
  });
</code></pre>

<p>第二步，在B页面获取列表数据后，再关闭等待框、显示B页面</p>

<pre><code>//B页面onload从服务器获取列表数据；
window.onload = function(){
  //从服务器获取数据
  ....
  //业务数据获取完毕，并已插入当前页面DOM；
  //注意：若为ajax请求，则需将如下代码放在处理完ajax响应数据之后；
  mui.plusReady(function(){
    //关闭等待框
    plus.nativeUI.closeWaiting();
    //显示当前页面
    mui.currentWebview.show();
  });
}
</code></pre>

<h2 id="toc_6">扩展阅读</h2>

<p>代码块激活字符: <code>mopenwindow</code>   </p>

<p><br /></p>

<h2 id="toc_7">关闭页面</h2>

<p>mui框架将窗口关闭功能封装在<code>mui.back</code>方法中，具体执行逻辑是：</p>

<ul>
<li>若当前webview为预加载页面，则hide当前webview；</li>
<li>否则，close当前webview；</li>
</ul>

<p>在mui框架中，有三种操作会触发页面关闭（执行mui.back方法）：</p>

<ul>
<li>点击包含<code>.mui-action-back</code>类的控件</li>
<li>在屏幕内，向右快速滑动</li>
<li>Android手机按下back按键</li>
</ul>

<p><br /></p>

<blockquote>
<p><strong>iOS平台原生支持从屏幕边缘右滑关闭</strong></p>

<p>iOS平台可通过popGesture参数实现从屏幕边缘右滑关闭webview，参考<a href="http://www.html5plus.org/doc/zh_cn/webview.html#plus.webview.WebviewStyle">5+规范</a>，若想禁用该功能，可通过setStyle方法设置popGesture为none。</p>
</blockquote>

<p><br /></p>

<p>hbuilder中敲<code>mheader</code>生成的代码块，会自动生成带有返回导航箭头的标题栏，点击返回箭头可关闭当前页面，原因就是因为该返回箭头包含<code>.mui-action-back</code>类，代码如下：</p>

<pre><code>
&lt;header class=&quot;mui-bar mui-bar-nav&quot;&gt;
    &lt;a class=&quot;mui-action-back mui-icon mui-icon-left-nav mui-pull-left&quot;&gt;&lt;/a&gt;
    &lt;h1 class=&quot;mui-title&quot;&gt;标题&lt;/h1&gt;
&lt;/header&gt;
</code></pre>

<p>若希望在顶部导航栏之外的其它区域添加关闭页面的控件，只需要在对应控件上添加<code>.mui-action-back</code>类即可，如下为一个关闭按钮示例：</p>

<pre><code>&lt;button type=&quot;button&quot; class=&#39;mui-btn mui-btn-danger mui-action-back&#39;&gt;关闭&lt;/button&gt;
</code></pre>

<p>mui框架封装的页面右滑关闭功能，默认未启用，若要使用右滑关闭功能，需要在<code>mui.init();</code>方法中设置swipeBack参数，如下：</p>

<pre><code>mui.init({
    swipeBack:true //启用右滑关闭功能
});
</code></pre>

<p>mui框架默认会监听Android手机的back按键，然后执行页面关闭逻辑； 若不希望mui自动处理back按键，可通过如下方式关闭mui的back按键监听；</p>

<pre><code>mui.init({
    keyEventBind: {
        backbutton: false  //关闭back按键监听
    }
});
</code></pre>

<p>除了如上三种操作外，也可以直接调用<code>mui.back()</code>方法，执行窗口关闭逻辑；</p>

<p><code>mui.back()</code>仅处理窗口逻辑，若希望在窗口关闭之前再处理一些其它业务逻辑，则可将业务逻辑抽象成一个具体函数，然后注册为mui.init方法的beforeback参数;beforeback的执行逻辑为：</p>

<ul>
<li>执行beforeback参数对应的函数若返回false，则不再执行<code>mui.back()</code>方法；</li>
<li>否则（返回true或无返回值），继续执行<code>mui.back()</code>方法；</li>
</ul>

<p>示例：从列表打开详情页面，从详情页面再返回后希望刷新列表界面，此时可注册beforeback参数，然后通过<a href="http://dev.dcloud.net.cn/mui/event/#customevent">自定义事件</a>通知列表页面刷新数据，示例代码如下：</p>

<pre><code>mui.init({
    beforeback: function(){
        //获得列表界面的webview
        var list = plus.webview.getWebviewById(&#39;list&#39;);
        //触发列表界面的自定义事件（refresh）,从而进行数据刷新
        mui.fire(list,&#39;refresh&#39;);
        //返回true，继续页面关闭逻辑
        return true;
    }
});
</code></pre>

<p>注意：beforeback的执行返回必须是同步的（阻塞模式），若使用nativeUI这种异步js（非阻塞模式），则可能会出现意想不到的结果；比如：通过<code>plus.nativeUI.confirm()</code>弹出确认框，可能用户尚未选择，页面已经返回了（beforeback同步执行完毕，无返回值，继续执行<code>mui.back()</code>方法，nativeUI不会阻塞js进程）：在这种情况下，若要自定义业务逻辑，就需要复写<code>mui.back</code>方法了；如下为一个自定义示例，每次都需要用户确认后，才会关闭当前页面</p>

<pre><code>//备份mui.back，mui.back已将窗口关闭逻辑封装的比较完善（预加载及父子窗口），因此最好复用mui.back
var old_back = mui.back;
mui.back = function(){
  var btn = [&quot;确定&quot;,&quot;取消&quot;];
  mui.confirm(&#39;确认关闭当前窗口？&#39;,&#39;Hello MUI&#39;,btn,function(e){
    if(e.index==0){
        //执行mui封装好的窗口关闭逻辑；
        old_back();
    }
  });
}
</code></pre>

<p><br /></p>

<blockquote>
<p><strong>为何设置了swipeBack: false，在iOS上依然可以右滑关闭？</strong></p>

<p>iOS平台原生支持从屏幕边缘右滑关闭，这个是通过popGesture参数控制的，参考<a href="http://www.html5plus.org/doc/zh_cn/webview.html#plus.webview.WebviewStyle">5+规范</a>，若需禁用，可通过setStyle方法设置popGesture为none。</p>
</blockquote>

<p><br /></p>

<blockquote>
<p><strong>能否通过addEventListener增加back按键监听实现自定义关闭逻辑？</strong></p>

<p>addEventListener只会增加新的执行逻辑，老的监听逻辑(mui.back)依然会执行，因此，若需实现自定义关闭逻辑，一定要重写mui.back。</p>
</blockquote>

<h2 id="toc_8">扩展阅读</h2>

<p>代码块激活字符: <code>mback</code>   </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mui-如何增加自定义icon图标]]></title>
    <link href="glen.pub/14792608408596.html"/>
    <updated>2016-11-16T09:47:20+08:00</updated>
    <id>glen.pub/14792608408596.html</id>
    <content type="html"><![CDATA[
<p>mui框架遵循极简原则，在icon图标集上也是如此，mui仅集成了原生系统中最常用的图标；其次，mui中的图标并不是图片，而是字体，至于为什么使用字体图标而不是图片，相信web开发者多少都有所了解，简单列举几条：</p>

<span id="more"></span><!-- more -->

<ul>
<li><p>多个图标字体合成一个字体文件，避免每张图片都需要联网请求；</p></li>
<li><p>字体可任意缩放，而图片放大会失真、缩小则浪费像素；</p></li>
<li><p>可通过css任意改变颜色、设置阴影及透明效果；</p></li>
</ul>

<p><br /></p>

<p>在实际项目中，开发者难免会需要自定义图标，此时该如何操作呢？本文以<a href="http://iconfont.cn/">阿里巴巴矢量图标库</a>为例（同样的网站有很多，比如<a href="https://icomoon.io/app/#/select">icomoon</a>，欢迎热心用户分享其它平台的使用方法），介绍一种用户自定义图标的方法，假设我们要做一个电商项目，需要补充男装、女装、购物车三个图标，如下为分步实现操作；</p>

<p><br /></p>

<h2 id="toc_0">登录</h2>

<p>浏览器访问<a href="http://iconfont.cn/">阿里巴巴矢量图标库官网</a>，选择登录方式，可直接使用新浪微博账号登录；</p>

<p><br /></p>

<h2 id="toc_1">搜索图标</h2>

<p>在右上角搜索“男装”，会列出当前网站上的所有男装图标，如下：<br/>
<img src="http://of832oeqz.bkt.clouddn.com/mui-icon-custom-1.png" alt="image"/><br/>
选择自己喜欢的图标，点击，会添加到右上角的购物车中，如下：<br/>
<img src="http://of832oeqz.bkt.clouddn.com/mui-icon-custom-2.png" alt="image"/><br/>
同样的方式分别搜索选择女装、购物车图标，结果如下：<br/>
<img src="http://of832oeqz.bkt.clouddn.com/mui-icon-custom-3.png" alt="image"/><br/>
之后点击“存储为项目”，输入项目名字，例如“mui-icon-custom”，点击“存储”按钮后，会跳转到项目管理页面，如下图所示：<br/>
<img src="http://of832oeqz.bkt.clouddn.com/mui-icon-custom-4.png" alt="image"/></p>

<p><br /></p>

<h2 id="toc_2">下载字体</h2>

<p>点击“下载到本地”按钮，会将合并后的字体文件及自动生成的css全部下载，如下：<br/>
<img src="http://of832oeqz.bkt.clouddn.com/mui-icon-custom-5.png" alt="image"/></p>

<p><br /></p>

<h2 id="toc_3">修改css</h2>

<p>默认的css代码如下：</p>

<pre><code>@font-face {font-family: &quot;iconfont&quot;;
  src: url(&#39;iconfont.eot&#39;); /* IE9*/
  src: url(&#39;iconfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */
  url(&#39;iconfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */
  url(&#39;iconfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/
  url(&#39;iconfont.svg#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */
}

.iconfont {
  font-family:&quot;iconfont&quot; !important;
  font-size:16px;
  font-style:normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.2px;
  -moz-osx-font-smoothing: grayscale;
}

.icon-nanzhuang:before { content: &quot;\e600&quot;; }

.icon-nvzhuang:before { content: &quot;\e601&quot;; }

.icon-gouwuche:before { content: &quot;\e602&quot;; }

</code></pre>

<p>我们可稍作如下修改：</p>

<ul>
<li><p>为保证和mui目录结构统一，建议将字体文件放在fonts目录下，这样我们需要修改@font-face下得url属性；</p></li>
<li><p>只兼容iOS和Android版本的话，我们仅需要ttf格式的字体即可，其它字体可以删除；同时，我们也仅需保留-webkit前缀语法，-moz前缀部分可以删除；</p></li>
</ul>

<p>修改后的css代码如下：</p>

<pre><code>    @font-face {font-family: &quot;iconfont&quot;;
        src:url(&#39;../fonts/iconfont.ttf&#39;) format(&#39;truetype&#39;); /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/
    }

    .iconfont {
        font-family:&quot;iconfont&quot; !important;
        font-size:16px;
        font-style:normal;
        -webkit-font-smoothing: antialiased;
        -webkit-text-stroke-width: 0.2px;
    }

    .icon-nanzhuang:before { content: &quot;\e600&quot;; }

    .icon-nvzhuang:before { content: &quot;\e601&quot;; }

    .icon-gouwuche:before { content: &quot;\e602&quot;; }

</code></pre>

<p><br /></p>

<h2 id="toc_4">集成mui</h2>

<p>将iconfont.css及iconfont.ttf两个文件分别拷贝到mui工程css及fonts目录下，然后即可在mui中引用刚生成的字体图标，我们以选项卡为例，代码如下：</p>

<pre><code>    &lt;nav class=&quot;mui-bar mui-bar-tab&quot;&gt;
        &lt;a class=&quot;mui-tab-item mui-active&quot;&gt;
            &lt;span class=&quot;mui-icon iconfont icon-nanzhuang&quot;&gt;&lt;/span&gt;
            &lt;span class=&quot;mui-tab-label&quot;&gt;男装&lt;/span&gt;
        &lt;/a&gt;
        &lt;a class=&quot;mui-tab-item&quot;&gt;
            &lt;span class=&quot;mui-icon iconfont icon-nvzhuang&quot;&gt;&lt;/span&gt;
            &lt;span class=&quot;mui-tab-label&quot;&gt;女装&lt;/span&gt;
        &lt;/a&gt;
        &lt;a class=&quot;mui-tab-item&quot;&gt;
            &lt;span class=&quot;mui-icon iconfont icon-gouwuche&quot;&gt;&lt;/span&gt;
            &lt;span class=&quot;mui-tab-label&quot;&gt;购物车&lt;/span&gt;
        &lt;/a&gt;
        &lt;a class=&quot;mui-tab-item&quot;&gt;
            &lt;span class=&quot;mui-icon mui-icon-gear&quot;&gt;&lt;/span&gt;
            &lt;span class=&quot;mui-tab-label&quot;&gt;设置&lt;/span&gt;
        &lt;/a&gt;
    &lt;/nav&gt;

</code></pre>

<p>主要代码：<br/>
* 在index.html文件中添加链接<code>&lt;link href=&quot;css/iconfont.css&quot; rel=&quot;stylesheet&quot;/&gt;</code>，引入iconfont.css<br/>
* 将mui默认的icon（如mui-icon-home）替换成iconfont icon-nanzhuang</p>

<p><br /><br/>
修改后预览效果如下：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/mui-icon-custom-6.png" alt="image"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何使用Framer结合Sketch演示一个完整的APP]]></title>
    <link href="glen.pub/14791900481521.html"/>
    <updated>2016-11-15T14:07:28+08:00</updated>
    <id>glen.pub/14791900481521.html</id>
    <content type="html"><![CDATA[
<p>Framer是一个以制作微交互动效而著称的强大原型工具。</p>

<p>但当你想要把这些微交互放置在一个完整的APP中去演示的时候却比想象中要难...</p>

<span id="more"></span><!-- more -->

<p>ViewCotroller（视图控制器）模块就是为了解决这个问题而出现的，它能够帮助你使用Framer快速地创建一个完整的APP演示。</p>

<p><br /></p>

<blockquote>
<p>完整演示如图</p>
</blockquote>

<div align="center">
<img src="http://of832oeqz.bkt.clouddn.com/framersketch1.gif">
</div>

<p><br /></p>

<h2 id="toc_0">它是做什么的？</h2>

<p>当你使用Sketch往Framer导入设计图之后，他们一般会层叠在一起。想要使用Framer在不同界面之间切换需要一个个改变他们的位置并添加动画，会有一点点麻烦。而ViewController不仅会帮你处理这些事情，还提供了18种预置的界面切换动画。</p>

<div align="center">
<img src="http://of832oeqz.bkt.clouddn.com/framersketch2.gif">
</div>

<blockquote>
<p>从右边推过来的切换动画</p>
</blockquote>

<p><br /></p>

<p>添加该模块之后，你可以在Framer中使用一行代码来实现跳转到另外一个界面：</p>

<pre><code>layerA.onClick -&gt; Views.pushInRight(layerB)
</code></pre>

<p>也可以使用Sketch插件来实现：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/framersketch3.png" alt=""/></p>

<p><br /></p>

<h2 id="toc_1">如何开始？</h2>

<p><strong>第一步：</strong>下载ViewController文件，里面有一个Framer模块（ViewController.coffee）和一个可选的Sketch插件（ViewController.sketchplugin）。</p>

<p><br /></p>

<p><strong>第二步：</strong>打开一个Framer项目把viewController.coffee拖到代码编辑区，这将会复制该文件到你的项目中的/modules文件夹中并自动在顶部插入如下代码：</p>

<pre><code>ViewController = require &#39;ViewController&#39;
</code></pre>

<p><img src="http://of832oeqz.bkt.clouddn.com/framersketch4.gif" alt=""/></p>

<p><br /></p>

<p><strong>第三步：</strong>这个模块已经导入，接下来就是创建ViewController，紧接着在后面写上这两行代码。</p>

<pre><code>Views = new ViewController
    initialView: layerA  //从sketch导入文件，切记layer完整性（例如：sketch.layer。不然新版本framer可能会报错）
</code></pre>

<p>他将会做两件事情：新建一个ViewController并且定义原型加载完毕时最初显示的界面。</p>

<p><br /></p>

<p><strong>第四步：</strong>现在你就可以使用一个跳转动画创建一个页面跳转啦，下面是一个例子：</p>

<pre><code>layerA.onClick -&gt; Views.pushInRight(layerB)
</code></pre>

<h2 id="toc_2">使用Sketch插件</h2>

<p>前面提到过，我们也可以使用Sketch插件的方式来实现。使用Sketch插件就只需要在Sketch中点击几次，不再需要编写代码。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/framersketch8.gif" alt=""/></p>

<p><br /></p>

<p><strong>第一步：</strong>双击ViewController.sketchplugin文件安装Sketch插件。</p>

<p><strong>第二步：</strong>在Sketch项目中选中两个图层，一个是需要用户点击触发跳转的图层，另一个是需要跳转到的图层。</p>

<p><strong>第三步：</strong>从Sketch的工具栏中选择Plugins&gt;ViewController&gt;Create a Link来运行插件。</p>

<p><strong>第四步：</strong>选择一个跳转动画&gt;Create Link</p>

<p><br /></p>

<p>想使用其他的跳转动画只需要改一下pushInRight的名字就行啦，下面是支持的几种跳转动画。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/framersketch5.gif" alt=""/><br/>
Views.fadeIn(layerB)</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/framersketch6.gif" alt=""/><br/>
Views.slideInUp(layerB)</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/framersketch7.gif" alt=""/><br/>
Views.moveInRight(layerB)</p>

<p><br /></p>

<p>完整的动画列表请参见后面的使用文档链接。如果你想让页面跳转回去，可以这样写：</p>

<pre><code>layerB.onClick -&gt; Views.back()
</code></pre>

<p>ViewController将会反向执行动画跳转到之前的页面。</p>

<p><br /></p>

<p><br /></p>

<p><strong>后记</strong></p>

<p>现在如果你已经熟悉了所有的操作，可以跳过使用文档，在后面实例中，你可以发现更多有趣的东西。</p>

<p><br /></p>

<p><strong>相关链接：</strong></p>

<p>（请复制到电脑打开）</p>

<p>插件下载：<a href="https://github.com/awt2542/ViewController-for-Framer/archive/master.zip">https://github.com/awt2542/ViewController-for-Framer/archive/master.zip</a></p>

<p>使用文档：<a href="https://github.com/awt2542/ViewController-for-Framer">https://github.com/awt2542/ViewController-for-Framer</a></p>

<p>示例项目：<a href="http://share.framerjs.com/zb95mn4u06ci/">http://share.framerjs.com/zb95mn4u06ci/</a></p>

<p>使用Sketch插件生成的示例项目：<a href="http://share.framerjs.com/qzxwtystb9vb/">http://share.framerjs.com/qzxwtystb9vb/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[浅析-从零开始建立一个品牌]]></title>
    <link href="glen.pub/14791141602608.html"/>
    <updated>2016-11-14T17:02:40+08:00</updated>
    <id>glen.pub/14791141602608.html</id>
    <content type="html"><![CDATA[
<p><strong>内容摘要</strong></p>

<ul>
<li>什么是品牌？</li>
<li>品牌的三要素</li>
<li>受众与问题</li>
<li>品牌触点</li>
<li>案例分析</li>
<li>品牌评估</li>
</ul>

<span id="more"></span><!-- more -->

<p><br /></p>

<h2 id="toc_0">1. 感性来说，品牌是一个人</h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-11.jpg" alt="uisdc-201611-11"/></p>

<p>品牌识别的研究理论有很多，对其概念也有不同的阐述，我认为法国著名学者卡菲勒（Kapfferer）在1992年提出的品牌识别菱形图，最具有研究意义，该模型将品牌拟人化为体格、个性、文化、关系、反映性、自我形象等6个层面，既是品牌的外貌特征，品牌的性格，品牌的灵魂，品牌与消费者之间的关系，目标消费者的外在反映，目标消费者自己的内在反映。“卡菲勒模型”着重于消费者的心智认知上。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-12.jpg" alt="uisdc-201611-12"/><br/>
<img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-13.jpg" alt="uisdc-201611-13"/></p>

<p>确实，品牌不是一个Logo，当我们拿到某一品牌的产品时，如苹果iphone，Burberry的香水，我们只看到产品的外形，就已经知道这产品是来自于哪，消费者会自然联想到品牌背后的调性与故事，而且同时该“看法”是多种体验叠加的看法。如Burberry，我们是通过它的衣服，配饰，广告，装潢等等内容的叠加所形成的整体印象和感觉，这是我们经常说的品牌touch point（后面会给大家详细列出来有哪些），所以logo只像是一个人的名字，当脱离了本人的性格，关系网，经历等等而存在，就已经失去了意义。</p>

<p>理性来说，品牌是产品与服务+行为+环境+传达</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-111.jpg" alt="uisdc-201611-111"/></p>

<p>产品与服务：提议或者主题、合作、价格；</p>

<p>行为：人、文化、服务方法、标志性时刻、体验；</p>

<p>环境：线上+线下、空间、位置；</p>

<p>传达：视觉形象、包装、广告+公关活动、语调。</p>

<p>所以，企业通过品牌识别中的组成要素，满足顾客的功能性、情感性、与象征性价值需求，使其产生满意的顾客体验。通过’branding’重新赋予’brand’生命力，我觉得，设计技术只是一种基调，要成功塑造品牌，还需要洞察市场变化，收集数据，甚至将自己从历史、文学以及电影等文艺作品中学到的知识融入其中，使得品牌成为顾客表达其独特的个性、价值观的方式，有个性的品牌更能够让顾客记忆深刻。</p>

<p><br /></p>

<h2 id="toc_1">2. 品牌三个基本点</h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-14.png" alt="uisdc-201611-14"/></p>

<p>我们现在处于一个过度传达过度接收的时期。当我们进入超市时，同品类产品至少都有五六个选择以上，而对我们自身品牌来说，如何在铺天盖地的产品中进入目标群体的眼中，是建立品牌时必须要考虑的最重要的问题。对于品牌来说，先必须满足最简单的三个要素：</p>

<p>1. Point of difference – 差异化</p>

<p>2. Meaning – 意义</p>

<p>3. Belief – 信念</p>

<p>所以品牌的基本定义可以是：</p>

<p>“Creating a point of difference which gives a brand meaning that is communicated as belief.”</p>

<p>也就是说，为品牌创造一个差异化，这个差异化赋予了品牌本身的意义，并把它当做品牌信念在与消费者沟通。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-112.jpg" alt="uisdc-201611-112"/></p>

<p>从上面的定义可以看出，品牌首要的就是找到Point of Difference，有了P.O.D.，我们品牌的消费者可以很坚定相信，这个独特的点是其他竞争品牌所没有的，这时品牌才不会被同质化，被市场淘汰。然而在哪找到P.O.D.呢 ？方法很多，调研，分析、寻找灵感，我们这个课程基本方法都是围绕第一来源第二来源所展开，详细方法可以浏览我之前的总结：<a href="http://www.uisdc.com/designer-gather-inspiration-method">《设计师在工作中通过哪些方式获取灵感？》</a></p>

<p><br /></p>

<h2 id="toc_2">3. 需求永远伴随着目标群体</h2>

<p>大家都说设计是为了解决问题，品牌是为了满足需求，但是到底是解决什么问题什么需求呢？谈到这个，必须是结合Target Audience（目标群体/目标受众）才能回答，脱离了受众，什么问题什么需求都是空的。</p>

<p>TA是谁？</p>

<p>从品牌营销的角度看，挺多创业者普遍有的盲点，是没有清楚定义他们的TA到底是谁。</p>

<p>设定目标受众/目标客户是一个相当难的问题 — 当你对准了一群购买意愿很高的客群，推广的工作将会事半功倍。相对的，当你搞不清楚到底谁会买你的产品，结果当然就是乱枪打鸟，最后往往败兴而归。</p>

<p>所以建立品牌或者推出一个新产品的时候，第一个工作是设定 TA，而TA设定的好不好，将会大大影响你成功的机率。</p>

<p>普通的做法总是会按TA的年龄、性别、收入、居住地区等划分，但是我觉得这些是往往不太准确，因为共处在一个办公室的人，可能年龄都是20多岁，但是他们的兴趣，状态，需求往往都是非常不同的，总结来说，所以TA的态度大于年龄或者其他，用态度来划分人群是最能接近到TA的方法。</p>

<p><br /></p>

<h2 id="toc_3">4. 品牌触点</h2>

<p>每一个品牌触点都是一个提高消费者认知和忠诚度的机会。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-113.jpg" alt="uisdc-201611-113"/></p>

<p>品牌触点包括：标志，名字，环境，体验，网站，字体设计，商业模式，包装，展柜，邮件，计划，语音邮箱，出版物，网络banner条，信纸抬头，名片，广告牌，文献，交通工具，服务，产品，员工，演讲，网络，电话，说话方式，展览，公共关系，博客，社交网络，促销，广告等等。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-15.jpg" alt="uisdc-201611-15"/></p>

<p>将品牌所需触点整合在一起，便成为整体的品牌形象总和，这个总和构造了我们对这个品牌的一个印象和一个感觉。其实我觉得，品牌最终传达出来的就是一种感觉，很多我们现在在用的产品，其实是很难形容出他到底是什么，就像我们认识的朋友，很难有几句话描述出他是一个什么人，我们只是根据这个朋友在我们面前的表现，行为，性格等来描述出这个人给我感觉是这样的。</p>

<p>对于品牌触点我有另外一个点要说的是，当很多品牌把大部分精力放在自身卖点，产品开发、视觉设计时，在推广时会忽略了一个问题，就是Language and Tone of Voice(语言和沟通的语调)</p>

<p>语言是指，所有和消费者接触到的文字信息，甚至包括内部员工，应该用什么样的词语、句子来描述表达。</p>

<p>而语调则是每个品牌都应该坚持有其说话的方式，而且要始终如一，不管是出现在网页、信件、社交媒体什么小小宣传单，因为他们全部都是在品牌的一部分。</p>

<p>品牌需要的是做到“一”，始终如一在贯彻自己的Point of Difference，个人觉得这是细节是非常考究到品牌管理者的能力，因为稍有不慎就会混乱迷失方向，所以，这时品牌定位的概念就也显得尤为重要，品牌定位的作用是指导内部人员始终坚持自身品牌理念做事情，引导消费者始终能找到我们的品牌，了解我们的品牌。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-16.jpg" alt="uisdc-201611-16"/></p>

<p>上图无疑应该是左图是正确的思维流程，应该是Why → How → What，定位第一步是回答Why，为什么这么做，然后才是怎么做，接着才是我们做的品牌、产品是什么。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-114.png" alt="uisdc-201611-114"/></p>

<p>很多品牌在一开始就本末倒置，一拍脑袋，哦，我要做女装，我要做餐饮，然后就开始想怎么来实现，甚至很多品牌是回答不出他们为什么要做这个产品。而这个“为什么”则联系到了上文提到的Point of Difference，我们是先找到了，需求和问题，找到了为什么做这个品牌的答案后，才开始思考我们是用什么方式什么产品来满足这个需求。</p>

<p><br /></p>

<h2 id="toc_4">案例分析</h2>

<p>案例A：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-115.png" alt="uisdc-201611-115"/></p>

<p>一个名叫fos跨界工作室，在马德里一家素食餐厅的店门口制作了一个名为fos短期装置，希腊语中意为“光”。他们使用黄色胶带、装饰画、几只菠萝和店门口的一盏灯创造了灯点亮后的效果，明亮的颜色和奇妙的视觉感觉让路人纷纷驻足。以色彩为品牌形象，很好的引人注目，色彩能抓住人心。色彩感受虽然因人而异，但在总体上，有一个反映消费者心理的基本倾向。色彩的情感是含蓄和抽象的，所以更能引起欣赏者的共识。</p>

<p>案例B：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-116.jpg" alt="uisdc-201611-116"/></p>

<p>老舍茶行是一家专售云南原始茶林的普洱古树茶茶行，老舍茶行标志以字体为主标识，每个字均为专门设计。字体与茶舍建筑结合，突出了古朴的茶舍气息。在整套视觉上还设计了许多及品牌相关的印章，使整套产品与市场有了自身形象的识别，将消费意识形态上产生共鸣，在销售推广和传播有着一定的感染力。</p>

<p>案例C：</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-117.jpg" alt="列印"/><br/>
<img src="http://of832oeqz.bkt.clouddn.com/hb201611101.jpg" alt="小招牌上稿排版-施工完成"/></p>

<p>独特，是每个品牌存在的必要条件，如果这个品牌和另外一个品牌并无两样，那它也已经失去了意义。’CITY YEAST’项目是由台湾设计工作室AGUA Design发起，把设计溶入台北街区的每一条巷弄以及街角，为台北城每个生活的角落，灌入不可思议的创意能量！</p>

<p>独一独二的店理所当然拥有品牌个性的招牌，而每一面招牌，都是城市裡小小的视觉元素。在实用的功能之外，如果能在材质、尺寸和工法上，多花一点点设计的巧思，招牌就不再是沉重累赘的悬挂物，它们不但能够成功吸引路人的目光、彰显出品牌的个性与特色，还能变成「招」蜂引蝶的公共艺术。</p>

<p><br /></p>

<h2 id="toc_5">5. 品牌评估</h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/uisdc-201611-118.jpg" alt="uisdc-201611-118"/></p>

<p>品牌评估的万能方法是：SWOT分析法</p>

<p>而且我认为提问，是引导思考最好的办法，用批判性的方式不断询问不断质疑，在这个过程中慢慢完善和解决自身品牌中存在的问题或者隐患。</p>

<p>做广告的伙伴对SWOT肯定是非常熟悉的，什么是SWOT呢？</p>

<p>S: Strengths – 优势</p>

<p>W: Weaknesses – 劣势</p>

<p>O: Opportunities – 机会</p>

<p>T: Threats – 威胁</p>

<p>SWOT分析法是用来确定企业自身的竞争优势、竞争劣势、机会和威胁，从而将公司的战略与公司内部资源、外部环境有机地结合起来的一种科学的分析方法。</p>

<p>对于创立品牌和运营品牌的过程，我们可以用反问的方式对品牌的每一个部分进行提问，例如，</p>

<p>对于大的品牌走向，我们可以用SWOT分析法：</p>

<p>我们可以对自身品牌提出这样的问题：</p>

<ul>
<li>Strengths：</li>
</ul>

<p>我们品牌的优势是什么？是品牌故事？承诺？还是不传统？</p>

<ul>
<li>Weaknesses：</li>
</ul>

<p>我们品牌的劣势是什么？是沟通？受众？还是激情？</p>

<ul>
<li>Opportunities：</li>
</ul>

<p>有什么机会我们可以列举出来？</p>

<ul>
<li>Threats:</li>
</ul>

<p>对于我们的品牌将会有什么威胁？竞争对手？沟通错误是信息？还是产品开发与创新？</p>

<p>同时我们也可以对其他方面进行提问，</p>

<p>对于目标群体：</p>

<ul>
<li>Who,
what, where &amp; why?</li>
</ul>

<p>他们是谁？他们是做什么的？他们在哪？和为什么是他们？</p>

<ul>
<li>Styles,
fashions and trends?</li>
</ul>

<p>他们的风格是什么？他们的潮流趋势是什么？</p>

<ul>
<li>Brand
advocates?</li>
</ul>

<p>品牌倡导者是谁？</p>

<ul>
<li>Behaviours
and lifestyle?</li>
</ul>

<p>他们的行为和生活态度是什么？</p>

<ul>
<li>Language,
Culture?</li>
</ul>

<p>他们的语言和文化是什么?</p>

<p>对于Point of Difference：</p>

<p>列举出自身品牌有哪些方面是不变的，哪些是有区别于竞品的</p>

<p>1. XXX</p>

<p>2. XXX</p>

<p>3. XXX</p>

<p>对于品牌定位：</p>

<ul>
<li>How
is the brand positioned?</li>
</ul>

<p>我们的品牌如何定位的？</p>

<ul>
<li>Brand
rival/competition?</li>
</ul>

<p>品牌的竞争对手是谁？</p>

<ul>
<li>Product,
Price, Place, People, Promotion, Process, Physical?</li>
</ul>

<p>品牌的产品、价格、位置、受众、促销、进程、线下是如何处理的？</p>

<ul>
<li>Behaviours?</li>
</ul>

<p>品牌的行为模式是怎样的？</p>

<ul>
<li>Culture?</li>
</ul>

<p>品牌是否有其自身的文化？</p>

<p>对于Brand criteria（品牌标准）：</p>

<ul>
<li>Brand Story</li>
</ul>

<p>品牌故事是什么？</p>

<ul>
<li>Discovery/Entrepreneurial</li>
</ul>

<p>品牌探索到的点是什么？</p>

<ul>
<li>Engagement</li>
</ul>

<p>品牌的承诺是什么？</p>

<ul>
<li>Non Conventional</li>
</ul>

<p>品牌是不是不传统？</p>

<ul>
<li>Product Quality</li>
</ul>

<p>品牌的产品质量如何？</p>

<ul>
<li>Feedback to the Parent Brand</li>
</ul>

<p>母公司品牌的反馈是什么？</p>

<p><br /></p>

<h2 id="toc_6">总结</h2>

<ul>
<li>可以用“人”来理解品牌</li>
<li>品牌的三要素是：差异化、意义、信念</li>
<li>需求永远伴随着目标群体</li>
<li>品牌触点的整合就是品牌的外在形象</li>
<li>语言和语调是品牌建立和推广过程中容易被忽视的问题</li>
<li>用SWOT分析法+Questions提问来做品牌评估</li>
</ul>

<p><br /></p>

<p>来自<a href="http://www.uisdc.com/brand-design-started-nothing#">优设</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《黑x金》企鹅FM品牌24小时诞生记]]></title>
    <link href="glen.pub/14788557643900.html"/>
    <updated>2016-11-11T17:16:04+08:00</updated>
    <id>glen.pub/14788557643900.html</id>
    <content type="html"><![CDATA[
<p>企鹅FM，即最近火热的有声娱乐平台APP，整个《黑x金》品牌设计理念，从创意到设计再到执行，仅在短短的24小时内出炉！</p>

<span id="more"></span><!-- more -->

<p>我们给产品赋予的品牌定位，希冀是一个能随时随地给用户提供高品质有声娱乐的平台，所以在确定下产品名称后，设计GM、总监、设计师立即在白板前手绘热议脑爆，数十个草图造型可能，最终确定下品牌Logo的造型方向，简洁的侧面企鹅带着耳机，亲切又无处不在。配色上是经典黑色的企鹅搭配金色的耳机，金色在黑色的映辉下尤为夺目，金出于黑尤为金，体现醇厚的高品质感。同时在短短的1周内我们就发布了企鹅FM完整的品牌书。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625161650276.png" alt="22f57cc9bdccf22ef7cdda13dbb367ad1435150968[1]"/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625161741917.png" alt="22f57cc9bdccf22ef7cdda13dbb367ad1434711861[1]"/></p>

<p><br /></p>

<h2 id="toc_0"><strong>01   品牌   BRAND</strong></h2>

<p>企鹅FM，是腾讯公司全新推出的为用户提供可以随时随地陪伴在身边的有声轻娱乐平台。你可以使用企鹅FM收听到精选的有声小说、段子脱口秀、音乐、情感、亲子等内容，还提供按时段推送内容的小电台、能智能判断网络环境 的Wi-Fi下载等功能，更有定时播放、专辑内上一次收听提醒等贴心设计，满足你的听需求。</p>

<p><img src="http://of832oeqz.bkt.clouddn.com/2015062516221299.png" alt="1434709831_75_w960_h1147[1]"/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625200256639.png" alt="penguinfm-150619-summary-fifo_24 (2)"/></p>

<p><br /></p>

<h2 id="toc_1"><strong>02   基本元素   BASIC ELEMENTS</strong></h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625162238355.png" alt=""/><br/>
<img src="http://of832oeqz.bkt.clouddn.com/20150625162300193.png" alt=""/></p>

<p><a href="http://of832oeqz.bkt.clouddn.com/20150625201210245.png"><img src="http://of832oeqz.bkt.clouddn.com/20150625201210245.png" alt="penguinfm-150619-summary-danson_12111111111111"/></a></p>

<p><br /></p>

<h2 id="toc_2"><strong>03   品牌色   BRAND COLOR</strong></h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625162447403.png" alt=""/></p>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625162552959.png" alt=""/></p>

<p><br /></p>

<h2 id="toc_3"><strong>04   线上／线下应用  APPLICATIONS</strong></h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625162626919.png" alt="1434710704_97_w960_h971[1]"/></p>

<p><a href="http://of832oeqz.bkt.clouddn.com/20150625175746390.png"><img src="http://of832oeqz.bkt.clouddn.com/20150625175746390.png" alt="penguinfm-150619-summary-fifo_24_01"/></a></p>

<p><br /></p>

<h2 id="toc_4"><strong>05   品牌书规范   BRANDBOOK GUIDELINE</strong></h2>

<p><img src="http://of832oeqz.bkt.clouddn.com/20150625162737280.png" alt="1434710850_34_w960_h792[1]"/><img src="http://of832oeqz.bkt.clouddn.com/20150625162754624.png" alt="1434710920_100_w960_h928[1]"/></p>

<p><br /></p>

<p>来自<a href="https://isux.tencent.com/penguinfm-brandbook.html?variant=zh-hans">ISUX</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手把手教你开发电商类小程序 Vol.1 | 实战教程]]></title>
    <link href="glen.pub/14788463826284.html"/>
    <updated>2016-11-11T14:39:42+08:00</updated>
    <id>glen.pub/14788463826284.html</id>
    <content type="html"><![CDATA[
<p>玩物志小程序跟常见的电商平台类似，<strong>主要由首页、分类页、商品列表页、商品详情页、购物车、订单结算页和个人中心等几大模块组成。</strong></p>

<span id="more"></span><!-- more -->

<p>分几期来对每个模块的关键点作详细说明。</p>

<p>在此过程中，本文也会穿插介绍一些常用简单内置组件的使用，最再后利用小程序的 <code>template</code> 模板，对自定义组件化开发的实现提供三种参考模式。</p>

<p><br /></p>

<h2 id="toc_0">准备开工</h2>

<p>我们先新建一个文件夹 <code>coolbuy</code> 作为项目目录，里面包含：</p>

<ul>
<li><p><code>common</code> 目录——用来放置项目公用的文件</p></li>
<li><p><code>pages</code> 目录——项目页面开发目录，里面的每个子目录代表一个独立页面，分别包含与目录同名的 <code>.wxml</code>（必须），<code>.wxss</code>，<code>.js</code>（必须）和 <code>.json</code> 文件</p></li>
<li><p><code>templates</code>目录——用来放置自定义的组件</p></li>
<li><p><code>utils</code> 目录——用来放置工具类 js 文件</p></li>
<li><p><code>app.js</code>——小程序逻辑</p></li>
<li><p><code>app.json</code>——小程序公共设置</p></li>
<li><p><code>app.wxss</code>——小程序公共样式表</p></li>
</ul>

<p><br /></p>

<h2 id="toc_1">轮播 banner 样式定义</h2>

<p>接下来，是首页的实现。</p>

<p>首页在 <code>pages/index</code> 目录下，包括 <code>index.wxml</code>, <code>index.wxss</code>,  三个文件。</p>

<p>首页的完整 Demo 图如下：</p>

<p><img src="http://mmbiz.qpic.cn/mmbiz_gif/dzvQgHlKewwZF5IQfKA7Bic5USWh2G8ySPcCZSyjWwxVKHVZYoibz1PmcIL8IzdM64QgtFeQSB1KSH61csE9aT5A/0?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""/></p>

<p>第一步，实现 banner 轮播图，来看代码：</p>

<pre><code>/*** index.wxml ***/
&lt;swiper class=&quot;banner-swiper&quot;&gt;
indicator-dots=&quot;{{indicatorDots}}&quot;
autoplay=&quot;{{autoplay}}&quot;
interval=&quot;{{interval}}&quot;
duration=&quot;{{duration}}&quot;&gt;
&lt;swiper-item class=&quot;swiper-item&quot; wx:for=&quot;{{banners}}&quot;&gt;
&lt;navigator url=&quot;../detail/detail?id={{item.productId}}&quot;&gt;
&lt;image src=&quot;{{item.image}}&quot; class=&quot;slide-image&quot;&gt;&lt;/image&gt;
&lt;/navigator&gt;
&lt;/swiper-item&gt;
&lt;/swiper&gt;
</code></pre>

<p>值得注意的是，<code>image</code> 组件会有一个默认的样式。</p>

<p>官方文档中说 <code>image</code> 组件默认宽度 300px、高度 225px，但是，根据开发者工具 v0.10.102800 版中的测试，<code>image</code> 组件的默认样式为：</p>

<pre><code>image{
    width:320px
    height:240px
    display:inline-block
    overflow:hidden
}
</code></pre>

<p>这个值可能会在小程序以后的升级中进行修改。</p>

<p>跟 <code>image</code> 组件类似，大多数小程序内置组件都会有自己的默认样式，初学者可以利用开发都工具中的 Wxml Panel，多了解一下这些组件的默认样式，可以避免很多由组件默认样式引起的问题。</p>

<p>我们要根据实际情况给它重新定义一个宽高值：</p>

<pre><code>/*** index.wxss ***/
.slide-image{
width:750rpx;
height:450rpx;
}
</code></pre>

<p>在这里使用了小程序特有的 rpx 单位，这个尺寸单位会放到第二期的页面布局中来讲。</p>

<p>另一个注意点是，不要将大图片放到项目目录中，因为小程序代码总大小不能超过 1 MB，而大图片会占用大量的空间，所以要尽量避免在项目目录中放置大图片。</p>

<p>如有需要，建议只在项目目录中放置少量 icon 类的小图片，其他大图片可以上传到自己的服务器或者网盘中，然后在 <code>src</code> 中设置图片的网络资源地址。</p>

<p>在手机测试或者正式上线之前，要注意是否有引用了本地大图片导致代码超出大小限制的问题。</p>

<p><br /></p>

<h2 id="toc_2">准备获取 banner 数据，并绑定到视图层</h2>

<p>接下来，我们看看数据的绑定：</p>

<pre><code>/***index.js***/
Page({
data:{
banners:[], //初始化一个banners数组

//以下四项设置swiper组件的参数值
indicatorDots:true,
autoplay:true, //开启自动切换
interval:5000, //自动切换时间间隔
duration:1000 //滑动动画时长
}
});
</code></pre>

<p>在 <code>Page</code> 里的 <code>data</code> 会以 <code>JSON</code> 的形式由逻辑层传至视图层，然后在视图层中使用 Mustache 语法（双大括号）接收传入的数据，实现动态数据的数据绑定。</p>

<p>经过绑定后的数据变动可以在视图中实时反应，也可以通过开发者工具中的 AppData Panel 中查看和编辑页面中的所有 <code>data</code> 数据。</p>

<p><strong>当你不知道 <code>data</code> 数据是否被设置成功的时候，可以到 AppData Panel 来查看一下，免去了手动打 </strong><code>console.log</code><strong> 进行调试的麻烦。</strong></p>

<p>实现动态数据绑定的另一个方式是使用 <code>this.setData()</code> 方法，<code>this</code> 在这里代表的是 <code>Page，</code>而 <code>setData</code> 是在 <code>PageX.prototype</code> 中的方法，所以 <code>this.setData()</code> 实际上访问的是 <code>Page.prototype.setData()</code>。</p>

<p>它可以用来新增和修改 <code>this.data</code> 里的值，同时还有一个重要的功能是将数据从逻辑层发送到视图层，从而实时改变页面的状态，保持逻辑层和视图层数据的一致性。</p>

<p>需要注意的是，如果使用 <code>this.data.property = value</code>，同样可以设置 <code>this.data</code> 的值，但是它不会将数据发送到视图层，无法改变页面的状态。</p>

<p><strong>一定要避免使用 </strong><code>this.data.property = value</code><strong> 的方式设置数据。</strong></p>

<p><br /></p>

<h2 id="toc_3">从服务器获取 banner 数据</h2>

<p>言归正传，现在我们的目的是要得到一个 banners 数组，然后利用 <code>wx:for</code> 将 <code>banners</code> 数组中的每一项渲染到 swiper-item 中。</p>

<p>我们可以在页面加载 (onLoad) 时，使用 <code>wx.request()</code> 发起一个 <code>ajax</code> 请求，来获取到所需要的 banner 列表数据。</p>

<p>先来看一下 <code>wx.request(object)</code> 的使用方法。首先是 <code>object</code> 可以接受的参数值：</p>

<ul>
<li><p><code>url：</code>发送请求的地址。</p></li>
<li><p><code>method：</code>请求方式，默认为 <code>GET</code>，有效值：<code>OPTIONS</code>, <code>GET</code>,<code>HEAD</code>,<code>POST</code>,<code>PUT</code>,<code>DELETE</code>,<code>TRACE</code>,<code>CONNECT</code>。<strong>所有值都要使用大写。</strong>经过测试，若使用小写，在安卓中会导致无法发起请求，而在开发者工具和 iOS 中则正常。</p></li>
<li><p><code>data：</code>设置请求的参数。如果 method 值为 GET，这个函数会将 <code>data</code> 转换成 <code>query</code> 字符串，拼接在 <code>url</code> 后面，若 url 本身带有同名的 query 参数，那么 <code>data</code> 中的参数会覆盖 <code>url</code> 中的 <code>query</code> 参数；</p></li>
</ul>

<p>小程序执行 <code>wx.request(object)</code> 发送请求并收到 <code>success</code>（成功）的消息后，会自动执行请求成功返回的回调函数。回调函数执行时，会自动收到类似这样的回调参数：</p>

<pre><code>res={data:&#39;服务器返回的数据&#39;，errMsg:&#39;错误信息&#39;，
statusCode:HTTP状态码}
</code></pre>

<p>特别注意，在开发者工具和 iOS 中，<code>res.statusCode</code> 的类据类型是一个数值，<strong>而在安卓中的数据类型是一个字符串</strong>，所以在判断 <code>res.statusCode</code> 时不能直接使用 <code>===</code> 操作符，而应该用 <code>==</code> 操作符，或者是先对 <code>res.statusCode</code> 进行数据类型转换。</p>

<p>现在，就可以在 <code>onLoad</code> 中调用 <code>wx.request()</code> 发起请求，访问获取 banner 列表的服务器 <code>API</code>。</p>

<p>我们将各服务器 <code>API</code> 的访问地址都保存在 <code>API_URL</code> 对象，保存在 <code>utils/config.js</code> 中：</p>

<pre><code>/***config.js***/
const CONFIG={
    API_URL:{
    BANNER_QUERY:http://ifanr.com/api/banner
    }
}

module.exports=CONFIG;
</code></pre>

<p>然后需要在 <code>index.js</code> 中使用 <code>require</code> 引入 <code>utils/config.js</code> 文件，引入路径为当前文件的相对路径：</p>

<pre><code>/***index.js***/
var CONFIG=require(../..utils/config.js);
</code></pre>

<p>于是，我们就知道了在小程序中 js 模块化的方法，模块通过 <code>module.exports</code> 对外暴露接口，在需要使用这些模块的文件中，使用 <code>require(path)</code> 将公共代码引入。</p>

<p>发起 <code>wx.request</code> 请求：</p>

<pre><code>/***index.js***/
var CONFIG=require(&#39;../../utils/config.js&#39;);

Page({
    data:{
    ...
    },
    onLoad:function(){
    var _this=this;
    
    wx.request({
        url:CONFIG.API_URL.BANNER_QUERY,
        method:&#39;GET&#39;,
        data:{
            limit:6,
            img_size:&#39;small&#39;
        },
        
    success:function(res){
        if(res.statusCode==200){
            _this.setData({
                banners:res.data.objects
            });
        }
    }
    });
    }
});
</code></pre>

<p>在 <code>wx.request()</code> 的回调函数中判断 <code>res.statusCode</code> 是否为 <code>200</code>，若为 <code>200</code> 则代表请求成功，接着将数据保存到 <code>banners</code> 数组中。</p>

<p>我们在 <code>success</code> 回调函数中使用 <code>_this.setData({ banners: res.data.objects });</code> 设置 <code>banners</code> 的值。</p>

<p>这里不能直接使用 <code>this.setData()</code> ，因为 <code>success</code> 回调函数是一个闭包，我们要先在闭包外面定义 <code>var _this = this;</code> ，再调用 <code>_this.setData()</code> ，以保证闭包内能到正确的 <code>this</code> 值。</p>

<p>现在，在视图中我们就能看到完整的 banner 列表了。</p>

<p><br /></p>

<p>本文介绍了小程序中内置组件、数据绑定和发送请求 API 的用法，提醒了初学者一些不容易注意到的坑，通过上面的介绍和实际代码演示，希望能帮助初学者更容易理解和使用小程序的基他组件和 <code>API</code>。</p>

<p><br /></p>

<p>来自<a href="http://mp.weixin.qq.com/s?timestamp=1478846927&amp;src=3&amp;ver=1&amp;signature=2wSjiN7Qekwb2TPaoP1cwgE2iqUi*i46tZLbBVXwtZ2HG9xOgugmOifnjZ3BuBfQRHedortAQn1YBc1joStei3H0zPauU6NCUgijNs0hWDnP7pGI-CiPiva8qmc*KXCKe8WdpqKhqukFpaYu3N7T*jYkbDEgurnJTLsbW1ka3M0=">appso</a></p>

]]></content>
  </entry>
  
</feed>
